{
  "index": [
    {
      "name": "Voronoi 3d",
      "id": "Voronoi3d",
      "library": "3DVoronoi",
      "category": "Surface",
      "summary": "Voronoi 3d Algorithm",
      "description": null,
      "iconCss": "background: url('icons/3DVoronoi.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/3dvoronoi/voronoi3d.html"
    },
    {
      "name": "Enzyme List",
      "id": "Enzymes",
      "library": "Alba",
      "category": "Digest",
      "summary": "A list of enzymes  to choose from that passes the proper index for the Restriction Enzymes output object",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/alba/enzymeList.html"
    },
    {
      "name": "Restriction Enzyme Digest",
      "id": "Digest",
      "library": "Alba",
      "category": "Digest",
      "summary": "Cuts up DNA based on target sits of the input restriction enzyme and outputs double stranded DNA with sticky ends.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/alba/restrictionEnzymeDigest.html"
    },
    {
      "name": "Restriction Enzymes Cut Locations",
      "id": "Restrict. Enzymes",
      "library": "Alba",
      "category": "Digest",
      "summary": "outputs the cut locations of any major restriction enzyme. use the Enzymes List to choose the enzyme you want or enter the index if you know it already",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/alba/restrictionEnzymesCutLocations.html"
    },
    {
      "name": "BioBrick Categories of Parts",
      "id": "BB Categories",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides a list of part categories for inputinto the BB Library",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBrickCategoriesOfParts.html"
    },
    {
      "name": "BioBrick Prefix and Suffix Adder",
      "id": "Pre~Suf",
      "library": "Alba",
      "category": "Library",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBrickPrefixAndSuffixAdder.html"
    },
    {
      "name": "BioBricks Library",
      "id": "BB Library",
      "library": "Alba",
      "category": "Library",
      "summary": "library of all the parts in the BioBricks registry.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBricksLibrary.html"
    },
    {
      "name": "BioBricks Prefix  Standard",
      "id": "BB Pre",
      "library": "Alba",
      "category": "Library",
      "summary": "simply the sequence of the standard BioBricks prefix used to enable ligation with compatible sticky ends",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBricksPrefixStandard.html"
    },
    {
      "name": "BioBricks Prefix ATG",
      "id": "BB Pre ATG",
      "library": "Alba",
      "category": "Library",
      "summary": "simply the sequence of the standard BioBricks prefix used, with sequences starting with ATG, to enable ligation with compatible sticky ends",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBricksPrefixATG.html"
    },
    {
      "name": "BioBricks Suffix",
      "id": "BB Suf",
      "library": "Alba",
      "category": "Library",
      "summary": "simply the sequence of the standard BioBricks suffix used to enable ligation with compatible sticky ends",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/alba/bioBricksSuffix.html"
    },
    {
      "name": "E0240 GFP with RBS, and Terminator",
      "id": "GFP RET",
      "library": "Alba",
      "category": "Library",
      "summary": "RBS: B0032  +  <br>GFP Reporter: E0040 +  <br>Terminators: B0010  & B0012<br>",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/alba/e0240GFPWithRBSAndTerminator.html"
    },
    {
      "name": "GFP with Promoter,  RBS, and Terminator",
      "id": "GFP PRET",
      "library": "Alba",
      "category": "Library",
      "summary": "Tet Promotor R0040 + <br>RBS: B0034  +  <br>GFP Reporter: E0040  +  <br>Terminators: B0010  & B0012<br>",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/alba/gFPWithPromoterRBSAndTerminator.html"
    },
    {
      "name": "Plasmid Backbones DNA",
      "id": "Backbones",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides the DNA for teh 4 commonly use BioBrick backbones.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/alba/plasmidBackbonesDNA.html"
    },
    {
      "name": "Plasmid Insert",
      "id": "Insert",
      "library": "Alba",
      "category": "Library",
      "summary": "Insert a gene into a plasmid backbone, optionall add in the BB prefix and suffix. Index reamins at beginning of gene; the prefix is at the end of the sequence.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/alba/plasmidInsert.html"
    },
    {
      "name": "Promoter DNA",
      "id": "Promoters",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides a list of the 10 most commomnly used BioBrick promoters, and outputs the DNA of the selected part.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/alba/promoterDNA.html"
    },
    {
      "name": "Protein Coding DNA",
      "id": "Coding",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides a list of the 10 most commomnly used BioBrick protein codeing sequences, and outputs the DNA of the selected part.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/alba/proteinCodingDNA.html"
    },
    {
      "name": "Resistance to Chloramphenicol",
      "id": "CamR",
      "library": "Alba",
      "category": "Library",
      "summary": "DNA sequence to produce Chloramphenicol resistance",
      "description": "DNA sequence to produce Chloramphenicol resistance . On BioBrick plasmid backbone pSB1C3 this gene is on the complementary strand. This outputs the sequence is as read on the primary strand of the plasmig (DNAp) and as read 5'to3' on the gene (ie the complementary strand of the plasmid) (DNAg).",
      "iconCss": "background: url('icons/alba.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/alba/resistanceToChloramphenicol.html"
    },
    {
      "name": "Resistance to Kanamycine",
      "id": "KanR",
      "library": "Alba",
      "category": "Library",
      "summary": "DNA sequence to produce Kanamycine resistance",
      "description": "DNA sequence to produce Kanamycine resistance . On BioBrick plasmid backbone pSB1K3 this gene is on the complementary strand. This outputs the sequence is as read on the primary strand of the plasmig (DNAp) and as read 5'to3' on the gene (ie the complementary strand of the plasmid) (DNAg).<br>",
      "iconCss": "background: url('icons/alba.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/alba/resistanceToKanamycine.html"
    },
    {
      "name": "Resistance to Tetracycline",
      "id": "TetR",
      "library": "Alba",
      "category": "Library",
      "summary": "DNA sequence to produce Tetracycline resistance. On BioBrick plasmid backbone pSB1T3 this gene is on the primary strand.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/alba/resistanceToTetracycline.html"
    },
    {
      "name": "Resitance to Amp",
      "id": "AmpR",
      "library": "Alba",
      "category": "Library",
      "summary": "DNA sequence to produce Ampicillin resistance",
      "description": "DNA sequence to produce Ampicillin resistance . On BioBrick plasmid backbone pSB1A3 this gene is on the complementary strand. This outputs the sequence is as read on the primary strand of the plasmig (DNAp) and as read 5'to3' on the gene (ie the complementary strand of the plasmid) (DNAg).",
      "iconCss": "background: url('icons/alba.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/alba/resitanceToAmp.html"
    },
    {
      "name": "RFP with RBS, and Terminator",
      "id": "RFP RET",
      "library": "Alba",
      "category": "Library",
      "summary": "RBS: B0034  +  <br>RFP Reporter: E1010 +  <br>Terminators: B0010  & B0012<br>",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/alba/rFPWithRBSAndTerminator.html"
    },
    {
      "name": "Ribosome Binding Site DNA",
      "id": "RBS",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides a list of the 10 most commomnly used BioBrick RBS, and outputs the DNA of the selected part.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/alba/ribosomeBindingSiteDNA.html"
    },
    {
      "name": "Teminator DNA",
      "id": "Terminators",
      "library": "Alba",
      "category": "Library",
      "summary": "Provides a list of the 10 most commomnly used BioBrick terminators, and outputs the DNA of the selected part.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/alba/teminatorDNA.html"
    },
    {
      "name": "YFP with RBS, and Terminator",
      "id": "YFP RET",
      "library": "Alba",
      "category": "Library",
      "summary": "RBS: B0034  +  <br>YFP Reporter: E0030  +  <br>Terminators: B0010  & B0012<br>",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/alba/yFPWithRBSAndTerminator.html"
    },
    {
      "name": "A Simple  Ligation",
      "id": "Lig",
      "library": "Alba",
      "category": "Ligate",
      "summary": "Concatenates two DNA sequences",
      "description": null,
      "iconCss": "background: url('icons/alba.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/alba/aSimpleLigation.html"
    },
    {
      "name": "Ligate",
      "id": "Ligate",
      "library": "Alba",
      "category": "Ligate",
      "summary": "Ligate tests to see if 2 strands have matching sticky ends. Is sothey are joined together. If both ends connect, plasmid is set to true.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/alba/ligate.html"
    },
    {
      "name": "Sticky Ends",
      "id": "Sticky",
      "library": "Alba",
      "category": "Ligate",
      "summary": "identifies the overhanging ends of DNA.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/alba/stickyEnds.html"
    },
    {
      "name": "PDB  Sort",
      "id": "PDB Sort",
      "library": "Alba",
      "category": "Protein",
      "summary": "sort protein data base file",
      "description": null,
      "iconCss": "background: url('icons/alba.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/alba/pDBSort.html"
    },
    {
      "name": "PDB Open",
      "id": "PDB Open",
      "library": "Alba",
      "category": "Protein",
      "summary": "make the pdb info accessible",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/alba/pDBOpen.html"
    },
    {
      "name": "PDB Plot",
      "id": "PDB Plot",
      "library": "Alba",
      "category": "Protein",
      "summary": "create a visual energy plot of a pdb file",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/alba/pDBPlot.html"
    },
    {
      "name": "Protein Query",
      "id": "Protein Query",
      "library": "Alba",
      "category": "Protein",
      "summary": "Search the RCSB Protein DataBase for matching Amino Acis sequences and the address of a corresponding .pdb file.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/alba/proteinQuery.html"
    },
    {
      "name": "Protein Ribbon",
      "id": "Protein Ribbon",
      "library": "Alba",
      "category": "Protein",
      "summary": "visualizes the structure of a  protein",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/alba/proteinRibbon.html"
    },
    {
      "name": "E. coli Optimization",
      "id": "E.coli Opt",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "create an optimized RNA sequence for E coli to produce the input AA chain.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/alba/eColiOptimization.html"
    },
    {
      "name": "Simple Transcription",
      "id": "Tx",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "simple conversion DNA to RNA changing T to U",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/alba/simpleTranscription.html"
    },
    {
      "name": "Simple Translation",
      "id": "Tl",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "converts RNA into Amino Acids",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/alba/simpleTranslation.html"
    },
    {
      "name": "Transcription Promoter to Terminator",
      "id": "Transcription",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "Transcribes DNA to RNA starting just after the promoter site and ending just prior to the termitator site",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/alba/transcriptionPromoterToTerminator.html"
    },
    {
      "name": "Transcription σ",
      "id": "Transcription σ",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "Converts DNA to RNA based on -35 and -10 sites",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/alba/transcription.html"
    },
    {
      "name": "Translation",
      "id": "Translation",
      "library": "Alba",
      "category": "Transcription/Translation",
      "summary": "Translates RNA to amino acid chain with options for finding the proper reading frame",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/alba/translation.html"
    },
    {
      "name": "Complementary Strand",
      "id": "Comp",
      "library": "Alba",
      "category": "Utilities",
      "summary": "creates a complementary strand based in the input sequence",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/alba/complementaryStrand.html"
    },
    {
      "name": "DNA Clean",
      "id": "DNA Clean",
      "library": "Alba",
      "category": "Utilities",
      "summary": "gets rid of anything that is not a, A,T,G, or C and capitalizes all characters",
      "description": null,
      "iconCss": "background: url('icons/alba.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/alba/dNAClean.html"
    },
    {
      "name": "DNA Find",
      "id": "Find",
      "library": "Alba",
      "category": "Utilities",
      "summary": "Finds a sequence within a sequence and return the domain of its location.",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/alba/dNAFind.html"
    },
    {
      "name": "Primer Design",
      "id": "Primer Des",
      "library": "Alba",
      "category": "Utilities",
      "summary": "to find a primer with good melt temp and GC content and avoiding bad hairpins",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/alba/primerDesign.html"
    },
    {
      "name": "Random DNA",
      "id": "Ran DNA",
      "library": "Alba",
      "category": "Utilities",
      "summary": "create a ramndom string of GTAC",
      "description": null,
      "iconCss": "background: url('icons/alba.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/alba/randomDNA.html"
    },
    {
      "name": "Reverse DNA",
      "id": "Rev",
      "library": "Alba",
      "category": "Utilities",
      "summary": "reverses the sequence of DNA",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/alba/reverseDNA.html"
    },
    {
      "name": "Reverse Subdomain",
      "id": "Rev Sub",
      "library": "Alba",
      "category": "Utilities",
      "summary": "reverses the position and direction of a subdomain",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/alba/reverseSubdomain.html"
    },
    {
      "name": "Amino Acid Visualizer",
      "id": "AA Viz",
      "library": "Alba",
      "category": "Visualize",
      "summary": "Creates and displays an offset complementary strand",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/alba/aminoAcidVisualizer.html"
    },
    {
      "name": "DNA  Subdomain Visualizer",
      "id": "DNA Sub Viz",
      "library": "Alba",
      "category": "Visualize",
      "summary": "Visualizes the specified subdomain of a  strand",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/alba/dNASubdomainVisualizer.html"
    },
    {
      "name": "DNA Complementary Strand Visualizer",
      "id": "DNA Comp Viz",
      "library": "Alba",
      "category": "Visualize",
      "summary": "Creates and displays an offset complementary strand",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/alba/dNAComplementaryStrandVisualizer.html"
    },
    {
      "name": "DNA Complementary Subdomain Visualizer",
      "id": "DNA Comp Sub Viz",
      "library": "Alba",
      "category": "Visualize",
      "summary": "Visualizes the specified subdomain of a created offset complementary strand",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/alba/dNAComplementarySubdomainVisualizer.html"
    },
    {
      "name": "DNA Visualizer",
      "id": "DNA Viz",
      "library": "Alba",
      "category": "Visualize",
      "summary": "Visualizes the DNA in the Rhino viewport",
      "description": null,
      "iconCss": "background: url('icons/alba.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/alba/dNAVisualizer.html"
    },
    {
      "name": "Loop End",
      "id": "Loop End",
      "library": "Anemone",
      "category": "Classic",
      "summary": "End the loop with this one. Double click to pause the loop.",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/loopEnd.html"
    },
    {
      "name": "Loop Start",
      "id": "Loop Start",
      "library": "Anemone",
      "category": "Classic",
      "summary": "Start the loop with this one. Double click to rerun.",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/loopStart.html"
    },
    {
      "name": "Fast Loop End",
      "id": "FastLoopEnd",
      "library": "Anemone",
      "category": "Fast",
      "summary": "Loop End",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/fastLoopEnd.html"
    },
    {
      "name": "Fast Loop Start",
      "id": "FastLoopStart",
      "library": "Anemone",
      "category": "Fast",
      "summary": "Loop Start",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/fastLoopStart.html"
    },
    {
      "name": "Loop Input",
      "id": "LoopInput",
      "library": "Anemone",
      "category": "Internalized",
      "summary": "Set inputs for Run Loop",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/loopInput.html"
    },
    {
      "name": "Loop Output",
      "id": "LoopOutput",
      "library": "Anemone",
      "category": "Internalized",
      "summary": "Set outputs for Run Loop",
      "description": "Set outputs for Run LoopNote: As with all Loop End components, you have to provide some data for each input.",
      "iconCss": "background: url('icons/anemone.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/loopOutput.html"
    },
    {
      "name": "Run Loop",
      "id": "RunLoop",
      "library": "Anemone",
      "category": "Internalized",
      "summary": "Runs the loop from a file. Right click to assign the .gh file.",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/runLoop.html"
    },
    {
      "name": "Browse History",
      "id": "Browse",
      "library": "Anemone",
      "category": "Util",
      "summary": "Browse recorded history from Loop End.",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/browseHistory.html"
    },
    {
      "name": "Password",
      "id": "Password",
      "library": "Anemone",
      "category": "Util",
      "summary": "Set password for this loop",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/password.html"
    },
    {
      "name": "Time Buffer",
      "id": "Buffer",
      "library": "Anemone",
      "category": "Util",
      "summary": "Tries to suspend thread, so the definition takes some more time to compute.",
      "description": null,
      "iconCss": "background: url('icons/anemone.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/anemone/timeBuffer.html"
    },
    {
      "name": "Apply Camera",
      "id": "SC",
      "library": "Animation",
      "category": "Animation",
      "summary": "Set animation camera in active viewport",
      "description": null,
      "iconCss": "background: url('icons/animation.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/animation/applyCamera.html"
    },
    {
      "name": "Bake Material",
      "id": "BM",
      "library": "Animation",
      "category": "Animation",
      "summary": "Bake the render material to the current rhino document",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/animation/bakeMaterial.html"
    },
    {
      "name": "Camera",
      "id": "C",
      "library": "Animation",
      "category": "Animation",
      "summary": "Define cameras for animation",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/animation/camera.html"
    },
    {
      "name": "Custom Material",
      "id": "CM",
      "library": "Animation",
      "category": "Animation",
      "summary": "Define custom materials for animation.",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/animation/customMaterial.html"
    },
    {
      "name": "Default Material",
      "id": "DM",
      "library": "Animation",
      "category": "Animation",
      "summary": "Define default materials for animation.",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/animation/defaultMaterial.html"
    },
    {
      "name": "Material From Rhino",
      "id": "MfR",
      "library": "Animation",
      "category": "Animation",
      "summary": "Get the material from the current rhino document",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/animation/materialFromRhino.html"
    },
    {
      "name": "Save Frames",
      "id": "SF",
      "library": "Animation",
      "category": "Animation",
      "summary": "Save frames captruing rhino viewport.",
      "description": null,
      "iconCss": "background: url('icons/animation.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/animation/saveFrames.html"
    },
    {
      "name": "Brep To Shape",
      "id": "BrepShp",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Convert a brep's naked edges to a compound shape",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/brepToShape.html"
    },
    {
      "name": "Compose Drawing",
      "id": "Drawing",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Compose a Drawing from curves and graphics",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/composeDrawing.html"
    },
    {
      "name": "Curve To Shape",
      "id": "CrvShp",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Convert a curve to a shape",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/curveToShape.html"
    },
    {
      "name": "Drawing to Bitmap",
      "id": "Draw To Bitmap",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Viewer for an Aviary drawing",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/drawingToBitmap.html"
    },
    {
      "name": "Export Bitmap",
      "id": "Bitmap",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Save a Aviary Drawing to a bitmap file",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/exportBitmap.html"
    },
    {
      "name": "Export SVG",
      "id": "SVG",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Save a Aviary Drawing to a SVG file",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/exportSVG.html"
    },
    {
      "name": "Mesh To Shape",
      "id": "MeshShp",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Convert a mesh to a compound shape",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/meshToShape.html"
    },
    {
      "name": "Point To Shape",
      "id": "PtShp",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Convert a point to a circular Shape",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/pointToShape.html"
    },
    {
      "name": "View Drawing",
      "id": "Draw",
      "library": "Aviary",
      "category": "Drawing",
      "summary": "Viewer for an Aviary drawing",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/viewDrawing.html"
    },
    {
      "name": "Blur Effect",
      "id": "Blur",
      "library": "Aviary",
      "category": "Graphics",
      "summary": "Add a blur effect",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/blurEffect.html"
    },
    {
      "name": "Linear Gradient Fill",
      "id": "Linear",
      "library": "Aviary",
      "category": "Graphics",
      "summary": "Add a linear gradient fill",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/linearGradientFill.html"
    },
    {
      "name": "Shadow Effect",
      "id": "Shadow",
      "library": "Aviary",
      "category": "Graphics",
      "summary": "Add a drop shadow effect",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/shadowEffect.html"
    },
    {
      "name": "Solid Fill",
      "id": "Solid",
      "library": "Aviary",
      "category": "Graphics",
      "summary": "Add a solid color fill",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/solidFill.html"
    },
    {
      "name": "Stroke",
      "id": "Stroke",
      "library": "Aviary",
      "category": "Graphics",
      "summary": "Set Stroke Properties",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/stroke.html"
    },
    {
      "name": "Add Layer",
      "id": "Layer",
      "library": "Aviary",
      "category": "Image",
      "summary": "Set layer image and properties<br>Built on the Dynamic Image Library<br>https://dynamicimage.apphb.com/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/aviary/addLayer.html"
    },
    {
      "name": "Apply Filters",
      "id": "Apply",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply filters to the image's bitmap<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/applyFilters.html"
    },
    {
      "name": "Bitmap Corners",
      "id": "Corners",
      "library": "Aviary",
      "category": "Image",
      "summary": "Get blob corner points from a bitmap<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/bitmapCorners.html"
    },
    {
      "name": "Bitmap Shapes",
      "id": "Shapes",
      "library": "Aviary",
      "category": "Image",
      "summary": "Get shapes from bitmap<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/bitmapShapes.html"
    },
    {
      "name": "Build Image",
      "id": "Build",
      "library": "Aviary",
      "category": "Image",
      "summary": "Build a fixed width and height bitmap from per pixel ARGB color values",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/buildImage.html"
    },
    {
      "name": "Composite Images",
      "id": "Composite",
      "library": "Aviary",
      "category": "Image",
      "summary": "Quick composite two images with a mask and blend mode<br>Built on the Dynamic Image Library<br>https://dynamicimage.apphb.com/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/compositeImages.html"
    },
    {
      "name": "Extract Channel",
      "id": "Extract",
      "library": "Aviary",
      "category": "Image",
      "summary": "Extract a channel filters to an image<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/extractChannel.html"
    },
    {
      "name": "Filter Adjust",
      "id": "Adjust",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply bitmap adjustment filters to an image<br>",
      "description": "Apply bitmap adjustment filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterAdjust.html"
    },
    {
      "name": "Filter Difference",
      "id": "Difference",
      "library": "Aviary",
      "category": "Image",
      "summary": "Compare the difference between two images<br>",
      "description": "Compare the difference between two images<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterDifference.html"
    },
    {
      "name": "Filter Dithering",
      "id": "Dithering",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply dither filters to an image<br>",
      "description": "Apply dither filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterDithering.html"
    },
    {
      "name": "Filter Edges",
      "id": "Edges",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply edge detection filters to an image<br>",
      "description": "Apply edge detection filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterEdges.html"
    },
    {
      "name": "Filter Effects",
      "id": "Effects",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply various effect filters to an image<br>",
      "description": "Apply various effect filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterEffects.html"
    },
    {
      "name": "Filter Figures",
      "id": "Figures",
      "library": "Aviary",
      "category": "Image",
      "summary": "Identify or modify figure based filters to an image<br>",
      "description": "Identify or modify figure based filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/aviary/filterFigures.html"
    },
    {
      "name": "Filter Grayscale",
      "id": "Grayscale",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply grayscale filters to an image<br>",
      "description": "Apply grayscale filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/filterGrayscale.html"
    },
    {
      "name": "Filter Sharpen",
      "id": "Sharpen",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply sharpen filters to an image<br>",
      "description": "Apply sharpen filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/filterSharpen.html"
    },
    {
      "name": "Filter Threshold",
      "id": "Threshold",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply threshold detection filters to an image<br>",
      "description": "Apply threshold detection filters to an image<br>Note: Not all filter modes use the additional parameter inputs.<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "iconCss": "background: url('icons/aviary.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/filterThreshold.html"
    },
    {
      "name": "Fractal",
      "id": "Fractal",
      "library": "Aviary",
      "category": "Image",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/fractal.html"
    },
    {
      "name": "Image Properties",
      "id": "Properties",
      "library": "Aviary",
      "category": "Image",
      "summary": "Get the overall bitmap dimensions",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/imageProperties.html"
    },
    {
      "name": "Image To Bitmap",
      "id": "To Bmp",
      "library": "Aviary",
      "category": "Image",
      "summary": "Convert an Image to a Bitmap object<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/imageToBitmap.html"
    },
    {
      "name": "Image Value At",
      "id": "Value At",
      "library": "Aviary",
      "category": "Image",
      "summary": "Get a requested value at a specific pixel location<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/imageValueAt.html"
    },
    {
      "name": "Image Values",
      "id": "Values",
      "library": "Aviary",
      "category": "Image",
      "summary": "Get a value type for each pixel<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/aviary/imageValues.html"
    },
    {
      "name": "Image Viewer",
      "id": "Image",
      "library": "Aviary",
      "category": "Image",
      "summary": "Display an Aviary Image or Bitmap in the canvas",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/imageViewer.html"
    },
    {
      "name": "Load Image",
      "id": "Bmp",
      "library": "Aviary",
      "category": "Image",
      "summary": "Create an Image from a filepath to a bitmap.",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/loadImage.html"
    },
    {
      "name": "Merge Layers",
      "id": "Merge",
      "library": "Aviary",
      "category": "Image",
      "summary": "Build multiple layers into an Aviary Image<br>Built on the Dynamic Image Library<br>https://dynamicimage.apphb.com/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/mergeLayers.html"
    },
    {
      "name": "Mirror Image",
      "id": "Mirror",
      "library": "Aviary",
      "category": "Image",
      "summary": "Mirror an image about x and y axis<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/mirrorImage.html"
    },
    {
      "name": "Modify Layer",
      "id": "Modify",
      "library": "Aviary",
      "category": "Image",
      "summary": "Modify Layer filters<br>Built on the Dynamic Image Library<br>https://dynamicimage.apphb.com/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/modifyLayer.html"
    },
    {
      "name": "Noise",
      "id": "Noise",
      "library": "Aviary",
      "category": "Image",
      "summary": "Generate a proceedural noise bitmap<br>Built on Auburns' FastNoise<br>https://github.com/Auburns/FastNoise",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/noise.html"
    },
    {
      "name": "Polar Image",
      "id": "Polar",
      "library": "Aviary",
      "category": "Image",
      "summary": "Apply a polar transformation to an image<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/polarImage.html"
    },
    {
      "name": "Resize Image",
      "id": "Resize",
      "library": "Aviary",
      "category": "Image",
      "summary": "Resize an image to a specific width and height<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/resizeImage.html"
    },
    {
      "name": "Rotate Image",
      "id": "Rotate",
      "library": "Aviary",
      "category": "Image",
      "summary": "Rotate an image about its center<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/rotateImage.html"
    },
    {
      "name": "Scale Image",
      "id": "Scale",
      "library": "Aviary",
      "category": "Image",
      "summary": "Scale an image by a unit factor<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/aviary/scaleImage.html"
    },
    {
      "name": "Shrink Image",
      "id": "Shrink",
      "library": "Aviary",
      "category": "Image",
      "summary": "Shrink and image by cropping out a context color<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/shrinkImage.html"
    },
    {
      "name": "Swap Channel",
      "id": "Swap",
      "library": "Aviary",
      "category": "Image",
      "summary": "Swap one channel for another<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/swapChannel.html"
    },
    {
      "name": "Swap Channels",
      "id": "Swap*",
      "library": "Aviary",
      "category": "Image",
      "summary": "Swap out channels for multiple existing channels<br>Built on the Accord Imaging Library<br>http://accord-framework.net/",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/swapChannels.html"
    },
    {
      "name": "Trace Image",
      "id": "Trace",
      "library": "Aviary",
      "category": "Image",
      "summary": "---",
      "description": null,
      "iconCss": "background: url('icons/aviary.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/aviary/traceImage.html"
    },
    {
      "name": "EvaluatePoints",
      "id": "EvaluatePoints",
      "library": "Axolotl",
      "category": "Analysis",
      "summary": "EvaluatePoints description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/evaluatePoints.html"
    },
    {
      "name": "Boolean Intersect",
      "id": "Boolean Intersect",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Boolean Intersect",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/booleanIntersect.html"
    },
    {
      "name": "Boolean Subtract",
      "id": "Boolean Subtract",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Boolean Subtract",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/booleanSubtract.html"
    },
    {
      "name": "Boolean Union",
      "id": "Boolean Union",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Boolean Union",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/booleanUnion.html"
    },
    {
      "name": "Mercury",
      "id": "Mercury",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Based on hg_sdf by the demogroup MERCURY (http://mercury.sexy/hg_sdf/)",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/mercury.html"
    },
    {
      "name": "Metaball",
      "id": "Metaball",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Metaball",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/metaball.html"
    },
    {
      "name": "Morph",
      "id": "Morph",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Morph",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/morph.html"
    },
    {
      "name": "SmoothIntersection",
      "id": "SmoothIntersection",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Smooth intersection between two objects",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/smoothIntersection.html"
    },
    {
      "name": "SmoothSubtraction",
      "id": "SmoothSubtraction",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "SmoothSubtraction description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/smoothSubtraction.html"
    },
    {
      "name": "SmoothUnion",
      "id": "SmoothUnion",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "SmoothUnion",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/smoothUnion.html"
    },
    {
      "name": "Sum",
      "id": "Sum",
      "library": "Axolotl",
      "category": "Combinations",
      "summary": "Sum",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/sum.html"
    },
    {
      "name": "Distance Wrapper",
      "id": "Distance Wrapper",
      "library": "Axolotl",
      "category": "Geometry",
      "summary": "Distance Wrapper",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/axolotl/distanceWrapper.html"
    },
    {
      "name": "PipeComponent",
      "id": "Nickname",
      "library": "Axolotl",
      "category": "Geometry",
      "summary": "PipeComponent description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/pipeComponent.html"
    },
    {
      "name": "Sweep",
      "id": "Sweep",
      "library": "Axolotl",
      "category": "Geometry",
      "summary": "Sweep description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/sweep.html"
    },
    {
      "name": "Lattice",
      "id": "Lattice",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "Lattice",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/lattice.html"
    },
    {
      "name": "NoiseComponent",
      "id": "NoiseComponent",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "NoiseComponent description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/noiseComponent.html"
    },
    {
      "name": "Sine",
      "id": "Sine",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "Sine",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/sine.html"
    },
    {
      "name": "Sine 3D",
      "id": "Sine 3D",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "Sine 3D",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/sine3D.html"
    },
    {
      "name": "TPMS",
      "id": "TPMS",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "TPMS",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/axolotl/tPMS.html"
    },
    {
      "name": "Voronoi",
      "id": "Voronoi",
      "library": "Axolotl",
      "category": "Lattices",
      "summary": "Voronoi",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/voronoi.html"
    },
    {
      "name": "Abs",
      "id": "Abs",
      "library": "Axolotl",
      "category": "Math",
      "summary": "Abs description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/abs.html"
    },
    {
      "name": "Add",
      "id": "Add",
      "library": "Axolotl",
      "category": "Math",
      "summary": "Add description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/add.html"
    },
    {
      "name": "Mult",
      "id": "Mult",
      "library": "Axolotl",
      "category": "Math",
      "summary": "Mult description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/mult.html"
    },
    {
      "name": "Tanh",
      "id": "Tanh",
      "library": "Axolotl",
      "category": "Math",
      "summary": "Tanh description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/tanh.html"
    },
    {
      "name": "Isosurface Distancefield",
      "id": "Isosurface Distancefield",
      "library": "Axolotl",
      "category": "Meshing",
      "summary": "Isosurface Distancefield",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/isosurfaceDistancefield.html"
    },
    {
      "name": "Isosurface Distancefunction",
      "id": "Isosurface Distancefunction",
      "library": "Axolotl",
      "category": "Meshing",
      "summary": "Isosurface Distancefunction",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/isosurfaceDistancefunction.html"
    },
    {
      "name": "Array Limited",
      "id": "Array Limited",
      "library": "Axolotl",
      "category": "Modifications",
      "summary": "Array Limited",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/arrayLimited.html"
    },
    {
      "name": "Blur",
      "id": "Blur",
      "library": "Axolotl",
      "category": "Modifications",
      "summary": "Blur description",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/blur.html"
    },
    {
      "name": "Levelset",
      "id": "Levelset",
      "library": "Axolotl",
      "category": "Modifications",
      "summary": "Levelset",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/levelset.html"
    },
    {
      "name": "Overlay",
      "id": "Overlay",
      "library": "Axolotl",
      "category": "Modifications",
      "summary": "Overlay",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/axolotl/overlay.html"
    },
    {
      "name": "Shell",
      "id": "Shell",
      "library": "Axolotl",
      "category": "Modifications",
      "summary": "Shell",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/axolotl/shell.html"
    },
    {
      "name": "Ellipse 2D",
      "id": "Ellipse 2D",
      "library": "Axolotl",
      "category": "Primitives",
      "summary": "Ellipse 2D",
      "description": null,
      "iconCss": "background: url('icons/axolotl.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/axolotl/ellipse2D.html"
    },
    {
      "name": "Align Curve Start/End",
      "id": "AlignCrvS/E",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Align curve on a line based on its start/end points.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/alignCurveStartEnd.html"
    },
    {
      "name": "Assemble Curves",
      "id": "AsmblCrvS/E",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Assemble curves based on their start/end points.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/assembleCurves.html"
    },
    {
      "name": "Classify Curves",
      "id": "ClCrvS/E",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Classify curves based on their start/end points.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/classifyCurves.html"
    },
    {
      "name": "Curve To Line Start/End",
      "id": "Crv2LnS/E",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Convert curves to lines, based on their start/end points.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/curveToLineStartEnd.html"
    },
    {
      "name": "Divide Curves on Intersects",
      "id": "DivCCX",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Divide curves on all of their intersects.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/divideCurvesOnIntersects.html"
    },
    {
      "name": "Star Lines",
      "id": "StarLn",
      "library": "Bengesht",
      "category": "Curve",
      "summary": "Create an simple star and give its lines.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/starLines.html"
    },
    {
      "name": "Http Input",
      "id": "HttpIn",
      "library": "Bengesht",
      "category": "HTTP",
      "summary": "Start create an http server, listening to an address.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/httpInput.html"
    },
    {
      "name": "Http Output",
      "id": "HttpOut",
      "library": "Bengesht",
      "category": "HTTP",
      "summary": "Send response to client using and close connection.",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/httpOutput.html"
    },
    {
      "name": "Websocket Client Receiver",
      "id": "WS>>",
      "library": "Bengesht",
      "category": "WebSocket",
      "summary": "Read data from websocket",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/bengesht/websocketClientReceiver.html"
    },
    {
      "name": "Websocket Client Sender",
      "id": "WS<<",
      "library": "Bengesht",
      "category": "WebSocket",
      "summary": "Send data to websocket server",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/bengesht/websocketClientSender.html"
    },
    {
      "name": "Websocket Client Start",
      "id": "WS*",
      "library": "Bengesht",
      "category": "WebSocket",
      "summary": "Connect to websocket server...",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/bengesht/websocketClientStart.html"
    },
    {
      "name": "Wii Start",
      "id": "Wii*",
      "library": "Bengesht",
      "category": "Wii",
      "summary": "Connect to available wii controllers...",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/bengesht/wiiStart.html"
    },
    {
      "name": "WiiIn",
      "id": "Wii>>",
      "library": "Bengesht",
      "category": "Wii",
      "summary": "Read data from wii controller",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/wiiIn.html"
    },
    {
      "name": "WiiOut",
      "id": "Wii<<",
      "library": "Bengesht",
      "category": "Wii",
      "summary": "Send data to wii controller",
      "description": null,
      "iconCss": "background: url('icons/bengesht.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/bengesht/wiiOut.html"
    },
    {
      "name": "Biomorpher",
      "id": "Biomorpher",
      "library": "Biomorpher",
      "category": "Util",
      "summary": "Interactive Genetic Algorithms for Grasshopper",
      "description": null,
      "iconCss": "background: url('icons/biomorpher.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/biomorpher/biomorpher.html"
    },
    {
      "name": "BiomorpherReader",
      "id": "BiomorpherReader",
      "library": "Biomorpher",
      "category": "Util",
      "summary": "Uses Biomorpher data to display paramter states",
      "description": null,
      "iconCss": "background: url('icons/biomorpher.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/biomorpher/biomorpherReader.html"
    },
    {
      "name": "BB Section",
      "id": "BBSection",
      "library": "Bowerbird",
      "category": "Crafting",
      "summary": "Create a section model from a mesh<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBSection.html"
    },
    {
      "name": "BB Boolean",
      "id": "BBBool",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "Boolean operation between two sets of planar closed polylines<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBBoolean.html"
    },
    {
      "name": "BB Difference",
      "id": "BBDiff",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "Difference of a set of planar closed polylines<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBDifference.html"
    },
    {
      "name": "BB Intersection",
      "id": "BBInt",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "Intersection of a set of planar closed polylines<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBIntersection.html"
    },
    {
      "name": "BB Offset",
      "id": "BBOffset",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "Offset a polyline with a specified distance<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBOffset.html"
    },
    {
      "name": "BB Union",
      "id": "BBUnion",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "Union of a set of planar closed polylines<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBUnion.html"
    },
    {
      "name": "BB XOR",
      "id": "BBXor",
      "library": "Bowerbird",
      "category": "Polyline",
      "summary": "XOR of a set of planar closed polylines<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBXOR.html"
    },
    {
      "name": "BB Text",
      "id": "BBText",
      "library": "Bowerbird",
      "category": "Text",
      "summary": "Create a single line text<br>",
      "description": null,
      "iconCss": "background: url('icons/bowerbird.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/bowerbird/bBText.html"
    },
    {
      "name": "Box2DCircle",
      "id": "Box2DCir",
      "library": "Box2D",
      "category": "Geometries",
      "summary": "Generate Box2D Circle from Grasshopper Circle",
      "description": null,
      "iconCss": "background: url('icons/box2D.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/box2d/box2DCircle.html"
    },
    {
      "name": "Box2DPolygon",
      "id": "Box2DP",
      "library": "Box2D",
      "category": "Geometries",
      "summary": "Generate Box2D Polygon from Grasshopper Closed Polyline",
      "description": null,
      "iconCss": "background: url('icons/box2D.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/box2d/box2DPolygon.html"
    },
    {
      "name": "Box2DRectangle",
      "id": "Box2DRec",
      "library": "Box2D",
      "category": "Geometries",
      "summary": "Generate Box2D Rectangle from Grasshopper Rectangle",
      "description": null,
      "iconCss": "background: url('icons/box2D.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/box2d/box2DRectangle.html"
    },
    {
      "name": "Convex",
      "id": "Conv",
      "library": "Box2D",
      "category": "Utility",
      "summary": "Test if a polygon is convex.",
      "description": null,
      "iconCss": "background: url('icons/box2D.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/box2d/convex.html"
    },
    {
      "name": "Convex Decompose",
      "id": "CD",
      "library": "Box2D",
      "category": "Utility",
      "summary": "Decompose concave polygon into several smaller convex polygon. Based on Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)",
      "description": null,
      "iconCss": "background: url('icons/box2D.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/box2d/convexDecompose.html"
    },
    {
      "name": "Carve",
      "id": "Carve",
      "library": "CarveRhino",
      "category": "Util",
      "summary": "Perform boolean operations on two meshes using the Carve library.",
      "description": null,
      "iconCss": "background: url('icons/carveRhino.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/carverhino/carve.html"
    },
    {
      "name": "Centipede",
      "id": "Centi",
      "library": "Centipede",
      "category": "Centipede",
      "summary": "Animation Keyframe Timeline",
      "description": null,
      "iconCss": "background: url('icons/centipede.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/centipede/centipede.html"
    },
    {
      "name": "Export",
      "id": "Export",
      "library": "Centipede",
      "category": "Centipede",
      "summary": "Animation Keyframe Export",
      "description": null,
      "iconCss": "background: url('icons/centipede.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/centipede/export.html"
    },
    {
      "name": "Brep Charge",
      "id": "Brep Charge",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Metaball charge from Brep",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/brepCharge.html"
    },
    {
      "name": "Cocoon",
      "id": "Cocoon",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Wrap geometry with marching cubes",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/cocoon.html"
    },
    {
      "name": "Curve Charge",
      "id": "Curve Charge",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Metaball charge from curve",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/curveCharge.html"
    },
    {
      "name": "Curve Group Charge",
      "id": "Group Charge",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Metaball charge for group of curves",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/curveGroupCharge.html"
    },
    {
      "name": "Point Charge",
      "id": "Point Charge",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Metaball point charge",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/pointCharge.html"
    },
    {
      "name": "Refine",
      "id": "Refine",
      "library": "Cocoon",
      "category": "Cocoon",
      "summary": "Refine the output from cocoon",
      "description": null,
      "iconCss": "background: url('icons/cocoon.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/cocoon/refine.html"
    },
    {
      "name": "Anchor",
      "id": "Anchor",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Anchor constraints of between selected vertices and input points. Numbers of both list must be equal.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/crane/anchor.html"
    },
    {
      "name": "AnchorToGround",
      "id": "AnchorToGround",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Anchor to ground constraint of selected vertices",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/crane/anchorToGround.html"
    },
    {
      "name": "Developable",
      "id": "Developable",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Add Developability",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/crane/developable.html"
    },
    {
      "name": "EqualLength",
      "id": "EqualLength",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Equal length constraint between selected edges. You can also set length of selected edges",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/crane/equalLength.html"
    },
    {
      "name": "FlatFoldable",
      "id": "FlatFoldable",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Add FlatFoldability",
      "description": null,
      "iconCss": "background: url('icons/crane.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/crane/flatFoldable.html"
    },
    {
      "name": "GlueVertices",
      "id": "GlueVerts",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Glue selected vertices",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/crane/glueVertices.html"
    },
    {
      "name": "OnCurve",
      "id": "OnCurve",
      "library": "Crane",
      "category": "Constraints",
      "summary": "OnCurveConstraint",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/crane/onCurve.html"
    },
    {
      "name": "OnPlane",
      "id": "OnPlane",
      "library": "Crane",
      "category": "Constraints",
      "summary": "On plane constraint of selected vertices",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/crane/onPlane.html"
    },
    {
      "name": "OnSurface",
      "id": "OnSurface",
      "library": "Crane",
      "category": "Constraints",
      "summary": "On surface constraint of selected vertices",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/crane/onSurface.html"
    },
    {
      "name": "SetFoldAngles",
      "id": "SetFoldAngles",
      "library": "Crane",
      "category": "Constraints",
      "summary": "Equal fold angle constraint between selected edges. You can also set fold angle of selected edges",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/crane/setFoldAngles.html"
    },
    {
      "name": "AddTabs",
      "id": "AddTabs",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Add tabs on debeloped mesh.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/crane/addTabs.html"
    },
    {
      "name": "Cutting Line",
      "id": "Cut",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Draw cutting lines according to panel thickness and each folding angle.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/crane/cuttingLine.html"
    },
    {
      "name": "Double Hinge",
      "id": "Double Hinge",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Create double hinged solids.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/crane/doubleHinge.html"
    },
    {
      "name": "Finger Joint Cutting Lines",
      "id": "Finger Joint",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Draw finger joint cutting lines.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/crane/fingerJointCuttingLines.html"
    },
    {
      "name": "Panels with Thickness",
      "id": "Thick Panels",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Construct thick panels from a Mesh and its developed panel's polylines",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/crane/panelsWithThickness.html"
    },
    {
      "name": "Single Hinge",
      "id": "Single Hinge",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Create single hinged solids according to panel thickness and each folding angle..",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/crane/singleHinge.html"
    },
    {
      "name": "Tapered Solid with Thin Layer Hinge",
      "id": "Tapered Solid",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Create tapered solids with thin layer hinge",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/crane/taperedSolidWithThinLayerHinge.html"
    },
    {
      "name": "V-Cutting Lines",
      "id": "V-Cut",
      "library": "Crane",
      "category": "FabTools",
      "summary": "Draw V-cutting lines which allow folding until 90 degrees.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/crane/vCuttingLines.html"
    },
    {
      "name": "CMesh",
      "id": "CMesh",
      "library": "Crane",
      "category": "Inputs",
      "summary": "Generate CMesh from mesh",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/crane/cMesh.html"
    },
    {
      "name": "CMesh from Lines",
      "id": "CMesh from Lines",
      "library": "Crane",
      "category": "Inputs",
      "summary": "Create CMesh from boundary, mountain, and valley lines. (This component needs Weaver Bird's Mesh From Lines)",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/crane/cMeshFromLines.html"
    },
    {
      "name": "CMesh_MVlines",
      "id": "CMeshMVlines",
      "library": "Crane",
      "category": "Inputs",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/crane/cMeshMVlines.html"
    },
    {
      "name": "CMesh_MVTlines",
      "id": "CMeshMVTlines",
      "library": "Crane",
      "category": "Inputs",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/crane/cMeshMVTlines.html"
    },
    {
      "name": "PaperMesh",
      "id": "PaperMesh",
      "library": "Crane",
      "category": "Inputs",
      "summary": "Generate flat mesh from scanned img",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/crane/paperMesh.html"
    },
    {
      "name": "DeconstructCMesh",
      "id": "DeconstructCMesh",
      "library": "Crane",
      "category": "Previews",
      "summary": "Deconstruct CMesh into Mesh and information",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/crane/deconstructCMesh.html"
    },
    {
      "name": "EdgeCentor",
      "id": "EdgeCentor",
      "library": "Crane",
      "category": "Previews",
      "summary": "EdgeCentor",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/crane/edgeCentor.html"
    },
    {
      "name": "Preview Edge IDs",
      "id": "Preview Edge IDs",
      "library": "Crane",
      "category": "Previews",
      "summary": "Preview edge ids for CMesh",
      "description": null,
      "iconCss": "background: url('icons/crane.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/crane/previewEdgeIDs.html"
    },
    {
      "name": "Preview Tapered Panels",
      "id": "Preview Tapered Panels",
      "library": "Crane",
      "category": "Previews",
      "summary": "Preview tapered panels with thickness.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/crane/previewTaperedPanels.html"
    },
    {
      "name": "Preview Vertex IDs",
      "id": "Preview Vertex IDs",
      "library": "Crane",
      "category": "Previews",
      "summary": "Preview vertex ids for CMesh",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/crane/previewVertexIDs.html"
    },
    {
      "name": "PreviewCMesh",
      "id": "PreviewCMesh",
      "library": "Crane",
      "category": "Previews",
      "summary": "Preview CMesh",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/crane/previewCMesh.html"
    },
    {
      "name": "PreviewPanelsSelective",
      "id": "PrevPanSel",
      "library": "Crane",
      "category": "Previews",
      "summary": "Preview panels with selective directions.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/crane/previewPanelsSelective.html"
    },
    {
      "name": "CraneSolver",
      "id": "CraneSolver",
      "library": "Crane",
      "category": "Solver",
      "summary": "Solver for simulation and design",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/crane/craneSolver.html"
    },
    {
      "name": "CMesh_EdgeInfo",
      "id": "Nickname",
      "library": "Crane",
      "category": "Subcategory",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/crane/cMeshEdgeInfo.html"
    },
    {
      "name": "Chickenwire Pattern",
      "id": "Chickenwire",
      "library": "Crane",
      "category": "Tessellations",
      "summary": "Generate Chickenwire pattern",
      "description": null,
      "iconCss": "background: url('icons/crane.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/crane/chickenwirePattern.html"
    },
    {
      "name": "Eggbox Pattern",
      "id": "Eggbox",
      "library": "Crane",
      "category": "Tessellations",
      "summary": "Generate Eggbox pattern",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/crane/eggboxPattern.html"
    },
    {
      "name": "Miuraori Pattern",
      "id": "Miuraori",
      "library": "Crane",
      "category": "Tessellations",
      "summary": "Generate Miuraori pattern",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/crane/miuraoriPattern.html"
    },
    {
      "name": "Yoshimura Pattern",
      "id": "Yoshimura",
      "library": "Crane",
      "category": "Tessellations",
      "summary": "Generate Yoshimura pattern",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/crane/yoshimuraPattern.html"
    },
    {
      "name": "Auto Assign Mountain or Valley",
      "id": "Auto MV",
      "library": "Crane",
      "category": "Util",
      "summary": "Assign mountain or valley according to each folding angle sign",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/crane/autoAssignMountainOrValley.html"
    },
    {
      "name": "Develop Mesh",
      "id": "Develop Mesh",
      "library": "Crane",
      "category": "Util",
      "summary": "Develop input mesh.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/crane/developMesh.html"
    },
    {
      "name": "Folding Angles",
      "id": "Fold Angle",
      "library": "Crane",
      "category": "Util",
      "summary": "Get foding angles.",
      "description": null,
      "iconCss": "background: url('icons/crane.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/crane/foldingAngles.html"
    },
    {
      "name": "Box Spawn",
      "id": "BS",
      "library": "Culebra",
      "category": "01 | Spawn Types",
      "summary": "Uses a box to contain the creepers spawn area in 2D or 3D",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/boxSpawn.html"
    },
    {
      "name": "Point Spawn",
      "id": "PS",
      "library": "Culebra",
      "category": "01 | Spawn Types",
      "summary": "Uses a list of points as starting positions for the creepers in 2D or 3D",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/pointSpawn.html"
    },
    {
      "name": "Init Settings",
      "id": "IS",
      "library": "Culebra",
      "category": "02 | Initialize",
      "summary": "Sends the init settings to the Creeper Engine.",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/initSettings.html"
    },
    {
      "name": "Move Settings",
      "id": "MS",
      "library": "Culebra",
      "category": "02 | Initialize",
      "summary": "Sends the move settings to the Creeper Engine.",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/moveSettings.html"
    },
    {
      "name": "Controller",
      "id": "BC",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Behavior Merging Controller, you can add/remove/rearrange behaviors. The input order will be the behavior execution stack",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/controller.html"
    },
    {
      "name": "Flocking",
      "id": "FL",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Flocking Algorithm",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/flocking.html"
    },
    {
      "name": "Flocking Mapped",
      "id": "FM",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Flocking Algorithm with image color sampling override for any flocking attributes and remaping of color values",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/flockingMapped.html"
    },
    {
      "name": "Mesh Crawl",
      "id": "MC",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Mesh Crawling allows agent to move along a mesh object",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/meshCrawl.html"
    },
    {
      "name": "Mesh Crawl II",
      "id": "MC",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Mesh Crawling allows agent to move along a mesh object and is capable of spawning children",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/meshCrawlII.html"
    },
    {
      "name": "Multi Path Tracking",
      "id": "T",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Multi Path Following Algorithm",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/multiPathTracking.html"
    },
    {
      "name": "Multi Path Tracking II",
      "id": "TT",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "MultiShape Path Following Algorithm capable of spawning children - see example files",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/multiPathTrackingII.html"
    },
    {
      "name": "Multi Path Tracking II Mapped",
      "id": "TT",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "MultiShape Path Following Algorithm capable of spawning children with image color sampling override for any path attributes and remaping of color values - see example files",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/multiPathTrackingIIMapped.html"
    },
    {
      "name": "Noise",
      "id": "N",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "2D/3D Improved Perlin Noise",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/noise.html"
    },
    {
      "name": "Noise Mapped",
      "id": "NM",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "2D Improved Perlin Noise with image color sampling override for any behavior attribute",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/noiseMapped.html"
    },
    {
      "name": "Separation",
      "id": "SB",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Separation Behavior II - avoids crowding neighbors (short range repulsion)",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/separation.html"
    },
    {
      "name": "Stigmergy",
      "id": "ST",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "2D/3D Trail Chasing Algorithm - Agents will chase agents trails",
      "description": "2D/3D Trail Chasing Algorithm - Agents will chase agents trails. When using this algorithm in your main sketch use the overloaded move method, recommended values are move(6,100), in GH Trail Data TrailSet(6) Max Trails(100)",
      "iconCss": "background: url('icons/culebra.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/stigmergy.html"
    },
    {
      "name": "Wandering",
      "id": "WA",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "2D Wandering Algorithm, Wandering is a type of random steering which has some long term order. Force Values from Move Settings have a strong effect on behavior",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/culebra/wandering.html"
    },
    {
      "name": "Wandering Mapped",
      "id": "WM",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "2D Wandering Algorithm with image color sampling override for any wandering attributes and remaping of color values, Wandering is a type of random steering which has some long term order",
      "description": "2D Wandering Algorithm with image color sampling override for any wandering attributes and remaping of color values, Wandering is a type of random steering which has some long term order. Force Values from Move Settings have a strong effect on behavior",
      "iconCss": "background: url('icons/culebra.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/culebra/wanderingMapped.html"
    },
    {
      "name": "Weaving Wandering",
      "id": "SW",
      "library": "Culebra",
      "category": "03 | Behaviors",
      "summary": "Expanded 2D Wandering Algorithm using step triggers to create a weaving type movement 2D Wandering Algorithm, Wandering is a type of random steering which has some long term order",
      "description": "Expanded 2D Wandering Algorithm using step triggers to create a weaving type movement 2D Wandering Algorithm, Wandering is a type of random steering which has some long term order. Force Values from Move Settings have a strong effect on behavior",
      "iconCss": "background: url('icons/culebra.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/weavingWandering.html"
    },
    {
      "name": "Attraction Force",
      "id": "AF",
      "library": "Culebra",
      "category": "04 | Forces",
      "summary": "Attracts a object towards a set of targets. Differs from Seek",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/attractionForce.html"
    },
    {
      "name": "Bundling",
      "id": "B",
      "library": "Culebra",
      "category": "04 | Forces",
      "summary": "Settings for Self Organization of Curve Networks",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/bundling.html"
    },
    {
      "name": "Bundling II",
      "id": "BM",
      "library": "Culebra",
      "category": "04 | Forces",
      "summary": "Settings for Self Organization of Curve Networks with image color sampling override for bundling attributes and remaping of color values",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/bundlingII.html"
    },
    {
      "name": "Repulsion Force",
      "id": "RF",
      "library": "Culebra",
      "category": "04 | Forces",
      "summary": "Repels a object away from a set of targets",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/repulsionForce.html"
    },
    {
      "name": "Bundling_Engine",
      "id": "Nickname",
      "library": "Culebra",
      "category": "05 | Engine",
      "summary": "Engine for Self Organization of Curve Networks",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/bundlingEngine.html"
    },
    {
      "name": "Creeper_Engine",
      "id": "CE",
      "library": "Culebra",
      "category": "05 | Engine",
      "summary": "Culebra Objects Engine",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/creeperEngine.html"
    },
    {
      "name": "Creeper_Engine_Dual",
      "id": "CED",
      "library": "Culebra",
      "category": "05 | Engine",
      "summary": "Culebra Multi Object Engine",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/creeperEngineDual.html"
    },
    {
      "name": "Creeper_ZombieEngine",
      "id": "CZE",
      "library": "Culebra",
      "category": "05 | Engine",
      "summary": "Culebra Object Zombie Engine",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/creeperZombieEngine.html"
    },
    {
      "name": "Disco_Color",
      "id": "DC",
      "library": "Culebra",
      "category": "06 | Display",
      "summary": "Controls the Disco Color trail options for the Visual Settings Component",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/culebra/discoColor.html"
    },
    {
      "name": "Gradient_Color",
      "id": "GC",
      "library": "Culebra",
      "category": "06 | Display",
      "summary": "Controls the Gradient Color trail options for the Visual Settings Component",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/gradientColor.html"
    },
    {
      "name": "Graphic_Polyline",
      "id": "GP",
      "library": "Culebra",
      "category": "06 | Display",
      "summary": "Controls the Graphic Polyline Color trail options for the Visual Settings Component",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/culebra/graphicPolyline.html"
    },
    {
      "name": "Trail Data",
      "id": "TD",
      "library": "Culebra",
      "category": "06 | Display",
      "summary": "Controls the Trail Data for the Visual Settings Component",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/trailData.html"
    },
    {
      "name": "Visual Settings",
      "id": "VS",
      "library": "Culebra",
      "category": "06 | Display",
      "summary": "Controls the visual settings for the Creeper Engine Outputs",
      "description": null,
      "iconCss": "background: url('icons/culebra.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/culebra/visualSettings.html"
    },
    {
      "name": "Create Settings",
      "id": "vSettings",
      "library": "Dendro",
      "category": "Convert",
      "summary": "Settings for converting different geometry types to and from volumes",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/createSettings.html"
    },
    {
      "name": "Curve To Volume",
      "id": "vCurve",
      "library": "Dendro",
      "category": "Convert",
      "summary": "Create a volume from a list of curves",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/curveToVolume.html"
    },
    {
      "name": "Mesh to Volume",
      "id": "vMesh",
      "library": "Dendro",
      "category": "Convert",
      "summary": "Create a volume that approximates mesh geometry",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/meshToVolume.html"
    },
    {
      "name": "Points To Volume",
      "id": "vPoints",
      "library": "Dendro",
      "category": "Convert",
      "summary": "Create a volume from a point set",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/pointsToVolume.html"
    },
    {
      "name": "Volume to Mesh",
      "id": "mVolume",
      "library": "Dendro",
      "category": "Convert",
      "summary": "Create a mesh that approximates volume geometry",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/dendro/volumeToMesh.html"
    },
    {
      "name": "Create Mask",
      "id": "Mask",
      "library": "Dendro",
      "category": "Filters",
      "summary": "Create a mask from a volume to be used in volume filter operations",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/createMask.html"
    },
    {
      "name": "Offset Volume",
      "id": "vOffset",
      "library": "Dendro",
      "category": "Filters",
      "summary": "Offset a volume by a fixed amount",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/offsetVolume.html"
    },
    {
      "name": "Smooth Volume",
      "id": "vSmooth",
      "library": "Dendro",
      "category": "Filters",
      "summary": "Apply smoothing to volume",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/dendro/smoothVolume.html"
    },
    {
      "name": "Volume Blend",
      "id": "vBlend",
      "library": "Dendro",
      "category": "Filters",
      "summary": "Blend between two volumes",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/volumeBlend.html"
    },
    {
      "name": "Volume Difference",
      "id": "vDiff",
      "library": "Dendro",
      "category": "Intersect",
      "summary": "Perform a diference operation on a set of volumes",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/volumeDifference.html"
    },
    {
      "name": "Volume Intersection",
      "id": "vInt",
      "library": "Dendro",
      "category": "Intersect",
      "summary": "Perform a intersection operation on a set of volumes",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/volumeIntersection.html"
    },
    {
      "name": "Volume Union",
      "id": "vUnion",
      "library": "Dendro",
      "category": "Intersect",
      "summary": "Perform a union operation on a set of volumes",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/dendro/volumeUnion.html"
    },
    {
      "name": "Read Volume",
      "id": "vRead",
      "library": "Dendro",
      "category": "IO",
      "summary": "Read a volume file and create a volume",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/dendro/readVolume.html"
    },
    {
      "name": "Write Volume",
      "id": "vWrite",
      "library": "Dendro",
      "category": "IO",
      "summary": "Write a Volume to a file",
      "description": null,
      "iconCss": "background: url('icons/dendro.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/dendro/writeVolume.html"
    },
    {
      "name": "BatchRunner",
      "id": "Batch",
      "library": "DIVA",
      "category": ".Simulation",
      "summary": "Creates and launches a multi-run batch file",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/diva/batchRunner.html"
    },
    {
      "name": "IntegrateIndicators",
      "id": "IntegrateIndicators",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "IntegrateIndicators",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/diva/integrateIndicators.html"
    },
    {
      "name": "Load result file",
      "id": "Results",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "Load result file and filter columns by tags",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/diva/loadResultFile.html"
    },
    {
      "name": "Load Zone Results",
      "id": "Load Zone Results",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "Load Zone Results",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/diva/loadZoneResults.html"
    },
    {
      "name": "SurfaceAnalysis",
      "id": "SurfaceAnalysis",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "SurfaceAnalysis",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/diva/surfaceAnalysis.html"
    },
    {
      "name": "UTCI",
      "id": "UTCI",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "Universal Thermal Climate Index, http://www.utci.org/",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/diva/uTCI.html"
    },
    {
      "name": "Weather",
      "id": "Weather",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "Weather",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/diva/weather.html"
    },
    {
      "name": "XYPlot",
      "id": "XYPlot",
      "library": "DIVA",
      "category": "Analysis",
      "summary": "Creates 2D plots",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/diva/xYPlot.html"
    },
    {
      "name": "Hour Of Year",
      "id": "HOY",
      "library": "DIVA",
      "category": "Data",
      "summary": "Gets hour of year and day of year from month/day/hour inputs",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/diva/hourOfYear.html"
    },
    {
      "name": "Image Viewer",
      "id": "Image Viewer",
      "library": "DIVA",
      "category": "Data",
      "summary": "Displays an image file",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/diva/imageViewer.html"
    },
    {
      "name": "AS_GetObjNameLayer",
      "id": "AS_GetObjNameLayer",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "AS_GetObjNameLayer",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/diva/aSGetObjNameLayer.html"
    },
    {
      "name": "Daylight Model",
      "id": "Daylight",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "Convert opaque thermal model geometry to daylight model geometry",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/diva/daylightModel.html"
    },
    {
      "name": "Floor cutter",
      "id": "Floor cutter",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "Floor cutter",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/diva/floorCutter.html"
    },
    {
      "name": "FromRhinoDoc",
      "id": "FromRhDoc",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "Load from Rhino Doc",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/diva/fromRhinoDoc.html"
    },
    {
      "name": "GeometryFilter",
      "id": "GeometryFilter",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "GeometryFilter",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/diva/geometryFilter.html"
    },
    {
      "name": "Intersector",
      "id": "Intersector",
      "library": "DIVA",
      "category": "Geometry",
      "summary": "Intersect Breps with each other",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/diva/intersector.html"
    },
    {
      "name": "Apply indicators",
      "id": "Indicators",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Apply indicators",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/diva/applyIndicators.html"
    },
    {
      "name": "Construction",
      "id": "Construction",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Construction",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/diva/construction.html"
    },
    {
      "name": "Gas material",
      "id": "Gas",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Gas material for glazing constructions",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/diva/gasMaterial.html"
    },
    {
      "name": "Glazing Material",
      "id": "Glazing Material",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Glazing Material",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/diva/glazingMaterial.html"
    },
    {
      "name": "Layer",
      "id": "Layer",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Creates a construction layer",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/diva/layer.html"
    },
    {
      "name": "Library",
      "id": "Library",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Launches the library editor",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/diva/library.html"
    },
    {
      "name": "Opaque Material",
      "id": "Opaque Material",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Opaque Material",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/diva/opaqueMaterial.html"
    },
    {
      "name": "Simple Window",
      "id": "Simple Window",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Simple Window",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/diva/simpleWindow.html"
    },
    {
      "name": "Thermal Bridge",
      "id": "Bridge",
      "library": "DIVA",
      "category": "Materials",
      "summary": "Generates an equivalent construction based on the primary costruction provided",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/diva/thermalBridge.html"
    },
    {
      "name": "Runs a PV simulation",
      "id": "PV",
      "library": "DIVA",
      "category": "PV",
      "summary": "Runs a PV simulation",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/diva/runsAPVSimulation.html"
    },
    {
      "name": "Takes surfaces, generates PV panels",
      "id": "PV",
      "library": "DIVA",
      "category": "PV",
      "summary": "Takes surfaces, generates PV simulation IDF",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/diva/takesSurfacesGeneratesPVPanels.html"
    },
    {
      "name": "Array Schedule",
      "id": "Schedule",
      "library": "DIVA",
      "category": "Schedules",
      "summary": "Creates schedules based on number arrays",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/diva/arraySchedule.html"
    },
    {
      "name": "Day Schedule",
      "id": "Day Schedule",
      "library": "DIVA",
      "category": "Schedules",
      "summary": "Day Schedule",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/diva/daySchedule.html"
    },
    {
      "name": "Week Schedule",
      "id": "Week Schedule",
      "library": "DIVA",
      "category": "Schedules",
      "summary": "Week Schedule",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/diva/weekSchedule.html"
    },
    {
      "name": "Year Schedule",
      "id": "Year Schedule",
      "library": "DIVA",
      "category": "Schedules",
      "summary": "Year Schedule",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/diva/yearSchedule.html"
    },
    {
      "name": "Floor settings",
      "id": "Floor settings",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Floor settings",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/diva/floorSettings.html"
    },
    {
      "name": "Window settings",
      "id": "Window settings",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Window settings",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/diva/windowSettings.html"
    },
    {
      "name": "Zone conditioning",
      "id": "Zone conditioning",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone conditioning",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/diva/zoneConditioning.html"
    },
    {
      "name": "Zone constructions",
      "id": "Zone constructions",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone constructions",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/diva/zoneConstructions.html"
    },
    {
      "name": "Zone domestic hot water",
      "id": "Zone DHW",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone domestic hot water",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/diva/zoneDomesticHotWater.html"
    },
    {
      "name": "Zone loads",
      "id": "Zone loads",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone loads",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/diva/zoneLoads.html"
    },
    {
      "name": "Zone settings",
      "id": "Zone settings",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone settings",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/diva/zoneSettings.html"
    },
    {
      "name": "Zone ventilation",
      "id": "Zone ventilation",
      "library": "DIVA",
      "category": "Settings",
      "summary": "Zone ventilation",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/diva/zoneVentilation.html"
    },
    {
      "name": "Solar Envelope",
      "id": "Envelope",
      "library": "DIVA",
      "category": "Sun",
      "summary": "Creates a buildable envelope for a given boundary curve based on the latitude and time of solar access for an entire year",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/diva/solarEnvelope.html"
    },
    {
      "name": "Solar Fan",
      "id": "Fan",
      "library": "DIVA",
      "category": "Sun",
      "summary": "Creates a no-obstruction envelope which ensures solar access for sites like parks, landscaping, etc...",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/diva/solarFan.html"
    },
    {
      "name": "Boundary condition object",
      "id": "Bc",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a boundary condition object that can be used to attach special boundary conditions to the thermal model",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/diva/boundaryConditionObject.html"
    },
    {
      "name": "Building",
      "id": "Bldg",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Automatically translates Breps describing a building into a thermal model",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/diva/building.html"
    },
    {
      "name": "Face",
      "id": "Face",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a Thermal Zone Face",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/diva/face.html"
    },
    {
      "name": "Shading Surface",
      "id": "Shading",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a Shading Surface",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/diva/shadingSurface.html"
    },
    {
      "name": "Simulation Engine",
      "id": "Run E+",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Takes thermal model and runs Energy Plus",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/diva/simulationEngine.html"
    },
    {
      "name": "Thermal Zone",
      "id": "Zone",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a Thermal Zone",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/diva/thermalZone.html"
    },
    {
      "name": "Window",
      "id": "Window",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a thermal zone window",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/diva/window.html"
    },
    {
      "name": "Zone Connectivity Network",
      "id": "Networker",
      "library": "DIVA",
      "category": "Thermal Model",
      "summary": "Creates a connectivity network between thermal zones",
      "description": null,
      "iconCss": "background: url('icons/dIVA.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/diva/zoneConnectivityNetwork.html"
    },
    {
      "name": "Random Forest",
      "id": "RandomForest",
      "library": "Dodo",
      "category": "Artificial Intelligence",
      "summary": "Trains using a random forest algorithm",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/randomForest.html"
    },
    {
      "name": "Run Neural Network",
      "id": "RunNN",
      "library": "Dodo",
      "category": "Artificial Intelligence",
      "summary": "Run data through a trained neural network",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/runNeuralNetwork.html"
    },
    {
      "name": "Supervised Training NN",
      "id": "SupTrainNN",
      "library": "Dodo",
      "category": "Artificial Intelligence",
      "summary": "Supervised training",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/supervisedTrainingNN.html"
    },
    {
      "name": "Unsupervised Training NN",
      "id": "UnsupTrainNN",
      "library": "Dodo",
      "category": "Artificial Intelligence",
      "summary": "Unsupervised training",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/unsupervisedTrainingNN.html"
    },
    {
      "name": "Vector From Numbers",
      "id": "DVect2",
      "library": "Dodo",
      "category": "Dodo",
      "summary": "Construct a DVector from complex numbers",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/vectorFromNumbers.html"
    },
    {
      "name": "Construct Tensor Field",
      "id": "ConstructTF",
      "library": "Dodo",
      "category": "Field",
      "summary": "Constructs a tensor field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/constructTensorField.html"
    },
    {
      "name": "Custom Field",
      "id": "CustomField",
      "library": "Dodo",
      "category": "Field",
      "summary": "Generate a user-defined vector field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/customField.html"
    },
    {
      "name": "Deconstruct Tensor Field",
      "id": "DeconstructTensField",
      "library": "Dodo",
      "category": "Field",
      "summary": "Deconstruct a tensor field into a connectivity mesh and a list of tensors",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/deconstructTensorField.html"
    },
    {
      "name": "Discrete Field",
      "id": "DiscrField",
      "library": "Dodo",
      "category": "Field",
      "summary": "Generate a continuous field from a discrete vector set",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/discreteField.html"
    },
    {
      "name": "Field From Mesh",
      "id": "FieldFromMesh",
      "library": "Dodo",
      "category": "Field",
      "summary": "Generates a field based on a mesh's principal curvature",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/fieldFromMesh.html"
    },
    {
      "name": "Field From Surface",
      "id": "FieldFromSurface",
      "library": "Dodo",
      "category": "Field",
      "summary": "Generates a field based on a surface's principal curvature",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/fieldFromSurface.html"
    },
    {
      "name": "Field Potential",
      "id": "FieldPotential",
      "library": "Dodo",
      "category": "Field",
      "summary": "Provided the field is conservative, this calculates the potential in each pointas the negative of the work done by a particle from the sampling point (A) to the source (B)",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/fieldPotential.html"
    },
    {
      "name": "Image Charge",
      "id": "ImageCharge",
      "library": "Dodo",
      "category": "Field",
      "summary": "Create a field due to an image charge",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/imageCharge.html"
    },
    {
      "name": "Integrate Tensor Field",
      "id": "IntegrateTFMesh",
      "library": "Dodo",
      "category": "Field",
      "summary": "Integrate Tensor Field on Mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/integrateTensorField.html"
    },
    {
      "name": "Integrate Vector Field",
      "id": "IntegrateVectField",
      "library": "Dodo",
      "category": "Field",
      "summary": "Integrate a given vector field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/integrateVectorField.html"
    },
    {
      "name": "Iso-Potential Surface",
      "id": "IsoPotSurf",
      "library": "Dodo",
      "category": "Field",
      "summary": "Calculates the iso-potential surfaces of a field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/isoPotentialSurface.html"
    },
    {
      "name": "Path on Object",
      "id": "PathOnObj",
      "library": "Dodo",
      "category": "Field",
      "summary": "Integrate a field using an object as a constraint",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/pathOnObject.html"
    },
    {
      "name": "Point Trajectory",
      "id": "IntegFieldPoint",
      "library": "Dodo",
      "category": "Field",
      "summary": "Find the trajectory of a point in a field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/pointTrajectory.html"
    },
    {
      "name": "Rotate Tensor Field",
      "id": "RotateTF",
      "library": "Dodo",
      "category": "Field",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/rotateTensorField.html"
    },
    {
      "name": "Smoothen Field",
      "id": "Smoothen a field",
      "library": "Dodo",
      "category": "Field",
      "summary": "See html help in the component",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/smoothenField.html"
    },
    {
      "name": "Tensor Field - Component",
      "id": "TFtoVF2",
      "library": "Dodo",
      "category": "Field",
      "summary": "Creates a vector field by choosing a component of the Tensor Field. By default it takes the first direction. Right-click on the component to change that.",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/tensorFieldComponent.html"
    },
    {
      "name": "Tensor Field - Vector",
      "id": "TFtoVF",
      "library": "Dodo",
      "category": "Field",
      "summary": "Calculate a vector field from a tensor field and a single direction. The resulting vector will be V(x) = TF(x) * D, where M is the tensor field in a point and D the direction given",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/tensorFieldVector.html"
    },
    {
      "name": "Find Path",
      "id": "PathGraph",
      "library": "Dodo",
      "category": "Graph",
      "summary": "Visualize the shortest path",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/findPath.html"
    },
    {
      "name": "Generate Graph",
      "id": "GenGraph",
      "library": "Dodo",
      "category": "Graph",
      "summary": "Create graph from curves",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/generateGraph.html"
    },
    {
      "name": "Generate Network",
      "id": "GenGraph",
      "library": "Dodo",
      "category": "Graph",
      "summary": "Create graph from curves",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/generateNetwork.html"
    },
    {
      "name": "Graph search",
      "id": "GraphSrch",
      "library": "Dodo",
      "category": "Graph",
      "summary": "Find distances in a graph",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/graphSearch.html"
    },
    {
      "name": "Construct Node",
      "id": "ConKDNode",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Construct a kd-Node",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/constructNode.html"
    },
    {
      "name": "Construct Node Value",
      "id": "ConKDNodeVal",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Construct a kd-Node with a value associated to it",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/constructNodeValue.html"
    },
    {
      "name": "Construct Tree",
      "id": "ConKDTree",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Construct a kd-Tree",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/constructTree.html"
    },
    {
      "name": "Deconstruct Node",
      "id": "DeConKDNode",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Deconstruct a kd-Node",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/deconstructNode.html"
    },
    {
      "name": "Nearest Neighbours Distance",
      "id": "NearKDNNum",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Finds kdNode within a certain distance from a given one",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/nearestNeighboursDistance.html"
    },
    {
      "name": "Nearest Neighbours Hypercube",
      "id": "NearKDNCube",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Finds kdNodes in a hypercube",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/nearestNeighboursHypercube.html"
    },
    {
      "name": "Nearest Neighbours Number",
      "id": "NearKDNNum",
      "library": "Dodo",
      "category": "kd-Tree",
      "summary": "Finds n nearest neighbours to the specified kdNode",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/nearestNeighboursNumber.html"
    },
    {
      "name": "Statistics",
      "id": "Stats",
      "library": "Dodo",
      "category": "MathNet",
      "summary": "Calculate statistics for a series of numbers",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/statistics.html"
    },
    {
      "name": "Convex Hull 3D",
      "id": "ConvexHull3D",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Create a convex hull 3d from a poiont cloud",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/convexHull3D.html"
    },
    {
      "name": "Geodesic",
      "id": "GeodesicMesh",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Geodesic on a mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/geodesic.html"
    },
    {
      "name": "Integrate Mesh Curvature",
      "id": "IntegrateMshCrv",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Integrates the principal directions field of a mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/integrateMeshCurvature.html"
    },
    {
      "name": "Iso Mesh",
      "id": "IsoMesh",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Creates and Iso Mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/isoMesh.html"
    },
    {
      "name": "Mesh Curvature",
      "id": "MeshCrv",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Find the curvature field of a mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/meshCurvature.html"
    },
    {
      "name": "Umbilic Points",
      "id": "UmbilicPoints",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Find umbilc points on a mesh",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/umbilicPoints.html"
    },
    {
      "name": "Voxels",
      "id": "Voxels",
      "library": "Dodo",
      "category": "Mesh",
      "summary": "Samples the field for creating the Voxels",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/dodo/voxels.html"
    },
    {
      "name": "Dancing Banana",
      "id": "Banana",
      "library": "Dodo",
      "category": "Other",
      "summary": "A funny dancing banana",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/dancingBanana.html"
    },
    {
      "name": "Group Numbers",
      "id": "GroupNums",
      "library": "Dodo",
      "category": "Other",
      "summary": "Group numbers",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/dodo/groupNumbers.html"
    },
    {
      "name": "Run Executable",
      "id": "RunExec",
      "library": "Dodo",
      "category": "Other",
      "summary": "Run an executable with attributes",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/runExecutable.html"
    },
    {
      "name": "Series from List",
      "id": "SeriesList",
      "library": "Dodo",
      "category": "Other",
      "summary": "Create a series of numbers having the same length of the given list",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/dodo/seriesFromList.html"
    },
    {
      "name": "Sort Curves",
      "id": "Sort curves",
      "library": "Dodo",
      "category": "Other",
      "summary": "Sort curves along a given curve",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/dodo/sortCurves.html"
    },
    {
      "name": "Integrate Curvature Field",
      "id": "Integrate Curvature Field",
      "library": "Dodo",
      "category": "Surface",
      "summary": "Integrate Curvature Field",
      "description": null,
      "iconCss": "background: url('icons/dodo.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/dodo/integrateCurvatureField.html"
    },
    {
      "name": "Bring Layer To Front",
      "id": "BringToFront",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Bring Layer to Front",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/bringLayerToFront.html"
    },
    {
      "name": "Close Document",
      "id": "CloseDoc",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Close a specified document",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/closeDocument.html"
    },
    {
      "name": "Create Text on Layer",
      "id": "CreateText",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Use this component to create text items on a layer. Specify points for point text, or a rectangle for area text.",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/createTextOnLayer.html"
    },
    {
      "name": "Curve To Path",
      "id": "CrvToPath",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Convert a Rhino Curve to a bezier curve path in Illustrator",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/curveToPath.html"
    },
    {
      "name": "Curves To Paths",
      "id": "CrvsToPaths",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Convert Rhino Curves to bezier curve paths in Illustrator",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/curvesToPaths.html"
    },
    {
      "name": "Document Bounds",
      "id": "DocBounds",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Get the rectangle representing the document bounds",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/documentBounds.html"
    },
    {
      "name": "Documents",
      "id": "Docs",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Get Open Illustrator Documents",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/documents.html"
    },
    {
      "name": "Export Document",
      "id": "Export",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Export a document to a specified location",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/exportDocument.html"
    },
    {
      "name": "Get Paths on Layer",
      "id": "LayPaths",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Gets the Path items on a layer",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/getPathsOnLayer.html"
    },
    {
      "name": "Layer By Name",
      "id": "LayByName",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Get a layer from a document by name",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/doodlebug/layerByName.html"
    },
    {
      "name": "Layers",
      "id": "Layers",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Get/Create Document Layers",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/layers.html"
    },
    {
      "name": "New Document",
      "id": "NewDoc",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Create a new Illustrator Document",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/newDocument.html"
    },
    {
      "name": "Open File",
      "id": "OpenFile",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Open an Illustrator Document",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/openFile.html"
    },
    {
      "name": "Open Illustrator",
      "id": "Illustrator",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Opens Illustrator and retrieves the running app.",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/openIllustrator.html"
    },
    {
      "name": "Path Geometry",
      "id": "PathGeom",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Get the curve / polyline geometry of the path items",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/pathGeometry.html"
    },
    {
      "name": "Run Script",
      "id": "Script",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Run script (written in javascript) in Illustrator",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/runScript.html"
    },
    {
      "name": "Scale Transforms",
      "id": "ScaleXForms",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Map to and from Illustrator document scale. All Doodlebug components take / output points, so this lets you smartly map to and from other units.",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/scaleTransforms.html"
    },
    {
      "name": "Send Layer To Back",
      "id": "SendToBack",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Send a layer to back of the document",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/sendLayerToBack.html"
    },
    {
      "name": "Set Layer Order",
      "id": "LayOrder",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Set the desired layer order for a document",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/setLayerOrder.html"
    },
    {
      "name": "Set Layer Properties",
      "id": "SetLay",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Sets the opacity and blend mode of a layer",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/doodlebug/setLayerProperties.html"
    },
    {
      "name": "Set Path Properties",
      "id": "SetPathProp",
      "library": "Doodlebug",
      "category": "Doodlebug",
      "summary": "Set the display properties of Paths",
      "description": null,
      "iconCss": "background: url('icons/doodlebug.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/doodlebug/setPathProperties.html"
    },
    {
      "name": "Sort Brep X",
      "id": "Sort Brep X",
      "library": "Duck",
      "category": "Brep",
      "summary": "Sorting a list of Breps according to the X coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortBrepX.html"
    },
    {
      "name": "Sort Breps Point",
      "id": "Sort Breps Point",
      "library": "Duck",
      "category": "Brep",
      "summary": "Sorting a list of breps according to the distance  from the reference point to the center points of the closed brpes",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortBrepsPoint.html"
    },
    {
      "name": "Sort Breps Volume",
      "id": "Sort Breps Volume",
      "library": "Duck",
      "category": "Brep",
      "summary": "Sorting a list of breps according to the volumes",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortBrepsVolume.html"
    },
    {
      "name": "Sort Breps Y",
      "id": "Sort Breps Y",
      "library": "Duck",
      "category": "Brep",
      "summary": "Sorting a list of Breps according to the Y coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortBrepsY.html"
    },
    {
      "name": "Sort Breps Z",
      "id": "Sort Breps Z",
      "library": "Duck",
      "category": "Brep",
      "summary": "Sorting a list of Breps according to the Z coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortBrepsZ.html"
    },
    {
      "name": "Sort Curves Length",
      "id": "Sort Curves Length",
      "library": "Duck",
      "category": "Curve",
      "summary": "Sorting a list of curves according to the length",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortCurvesLength.html"
    },
    {
      "name": "Sort Curves Point",
      "id": "Sort Curves Point",
      "library": "Duck",
      "category": "Curve",
      "summary": "Sorting a list of curves according to the distance from the reference point to the evaluated point",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortCurvesPoint.html"
    },
    {
      "name": "Sort Curves X",
      "id": "Sort Curves X",
      "library": "Duck",
      "category": "Curve",
      "summary": "Sorting a list of curves according to the X coordinates of the evaluated points.",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortCurvesX.html"
    },
    {
      "name": "Sort Curves Y",
      "id": "Sort Curves Y",
      "library": "Duck",
      "category": "Curve",
      "summary": "Sorting a list curves according to the Y coordinates of the evaluated points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortCurvesY.html"
    },
    {
      "name": "Sort Curves Z",
      "id": "Sort Curves Z",
      "library": "Duck",
      "category": "Curve",
      "summary": "Sorting a list curves according to the Z coordinates of the evaluated point",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/duck/sortCurvesZ.html"
    },
    {
      "name": "Sort Mesh Area",
      "id": "Sort Mesh Area",
      "library": "Duck",
      "category": "Mesh",
      "summary": "Sorting a list of meshes according to the area",
      "description": null,
      "iconCss": "background: url('icons/duck.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortMeshArea.html"
    },
    {
      "name": "Sort Mesh Point",
      "id": "Sort Mesh Point",
      "library": "Duck",
      "category": "Mesh",
      "summary": "Sorting a list of meshes according to the distance from the reference point to the center points of the meshes.",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortMeshPoint.html"
    },
    {
      "name": "Sort Mesh X",
      "id": "Sort Mesh X",
      "library": "Duck",
      "category": "Mesh",
      "summary": "Sorting a list of meshes according to the X coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortMeshX.html"
    },
    {
      "name": "Sort Mesh Y",
      "id": "Sort Mesh Y",
      "library": "Duck",
      "category": "Mesh",
      "summary": "Sorting a list of meshes according to the Y coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortMeshY.html"
    },
    {
      "name": "Sort Mesh Z",
      "id": "Sort Mesh Z",
      "library": "Duck",
      "category": "Mesh",
      "summary": "Sorting a list of meshes according to the Z coordinate of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortMeshZ.html"
    },
    {
      "name": "Sort Points X",
      "id": "Sort Points X",
      "library": "Duck",
      "category": "Point",
      "summary": "Sorting a list of points according to the X coordinate of the poins",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortPointsX.html"
    },
    {
      "name": "Sort Points Y",
      "id": "Sort Points Y",
      "library": "Duck",
      "category": "Point",
      "summary": "Sorting a list of points according to the Y coordinate of the points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortPointsY.html"
    },
    {
      "name": "Sort Points Z",
      "id": "Sort Points Z",
      "library": "Duck",
      "category": "Point",
      "summary": "Sorting a list of points according to the Z coordinate of the points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortPointsZ.html"
    },
    {
      "name": "SortPointsPoint",
      "id": "SortPointsPoint",
      "library": "Duck",
      "category": "Point",
      "summary": "Sorting a list of points according to the distance  from the reference point",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sortPointsPoint.html"
    },
    {
      "name": "Sort Surface Area",
      "id": "Sort Surface Area",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the surface area",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfaceArea.html"
    },
    {
      "name": "Sort Surface UV",
      "id": "Sort Surface UV",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the distance from the reference point to the point on the surfaces by assigning UV parameters",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfaceUV.html"
    },
    {
      "name": "Sort Surface X",
      "id": "Sort Surface X",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the X coordinate sequences of the center points <br>",
      "description": null,
      "iconCss": "background: url('icons/duck.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfaceX.html"
    },
    {
      "name": "Sort Surface Y",
      "id": "Sort Surface Y",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the Y coordinate sequences of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfaceY.html"
    },
    {
      "name": "Sort Surface Z",
      "id": "Sort Surface Z",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the Z coordinate sequences of the center points",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfaceZ.html"
    },
    {
      "name": "Sort Surfaces Point",
      "id": "Sort Surfaces Point",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of surfaces according to the distance to the reference point",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sortSurfacesPoint.html"
    },
    {
      "name": "SSUV",
      "id": "SortSurfaceUV",
      "library": "Duck",
      "category": "Surface",
      "summary": "Sorting a list of sub-surfaces in a correct order by UV<br>srf: the original untrimmed surface<br>srfs : the messed up sub-surfaces waiting to be sorted<br>u: number of branches( int required)<br>v: number of items in one branch( int required)",
      "description": null,
      "iconCss": "background: url('icons/duck.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/duck/sSUV.html"
    },
    {
      "name": "Divide List",
      "id": "Divide List",
      "library": "EdiTree",
      "category": "EdiTree",
      "summary": "Divide a list into sub-lists by the predefined number (divisor).",
      "description": null,
      "iconCss": "background: url('icons/ediTree.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/editree/divideList.html"
    },
    {
      "name": "Partition List Adv",
      "id": "Partition",
      "library": "EdiTree",
      "category": "EdiTree",
      "summary": "Partition a list into sub-lists by partition size",
      "description": null,
      "iconCss": "background: url('icons/ediTree.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/editree/partitionListAdv.html"
    },
    {
      "name": "Split List Multi",
      "id": "Split Multi",
      "library": "EdiTree",
      "category": "EdiTree",
      "summary": "Split a list into separate parts at a specified index number. Similar to the existing Split List Component, each index indicates the first item in each list.",
      "description": null,
      "iconCss": "background: url('icons/ediTree.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/editree/splitListMulti.html"
    },
    {
      "name": "SubTree",
      "id": "SubTree",
      "library": "EdiTree",
      "category": "EdiTree",
      "summary": "Retrieve a specific branch / sub-branches from a data tree.",
      "description": null,
      "iconCss": "background: url('icons/ediTree.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/editree/subTree.html"
    },
    {
      "name": "",
      "id": "",
      "library": "Elefront",
      "category": "",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/.html"
    },
    {
      "name": "*",
      "id": "*",
      "library": "Elefront",
      "category": "",
      "summary": "*",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/.html"
    },
    {
      "name": "Reference by BakeName",
      "id": "RefBake",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference objects based on Bake Name and User Attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByBakeName.html"
    },
    {
      "name": "Reference by Color",
      "id": "RefCol",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference Rhino Objects by Color. Also from worksessions",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByColor.html"
    },
    {
      "name": "Reference by Layer",
      "id": "RefLay",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference Rhino objects by layer. Also from worksessions",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByLayer.html"
    },
    {
      "name": "Reference by Name",
      "id": "RefName",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference Rhino objects by name. Also from worksessions",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByName.html"
    },
    {
      "name": "Reference by Type",
      "id": "refType",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference Rhino Objects by type, also from worksession files",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByType.html"
    },
    {
      "name": "Reference by User Atributes",
      "id": "RefUA",
      "library": "Elefront",
      "category": "01 Reference",
      "summary": "Reference objects from Rhino based on Key-Value attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceByUserAtributes.html"
    },
    {
      "name": "Filter By Color",
      "id": "FilterColor",
      "library": "Elefront",
      "category": "02 Filter",
      "summary": "Filter Objects by their Color",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByColor.html"
    },
    {
      "name": "Filter By Layer",
      "id": "FilterLay",
      "library": "Elefront",
      "category": "02 Filter",
      "summary": "Filter Objects by their Layer",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByLayer.html"
    },
    {
      "name": "Filter By Name",
      "id": "FilterName",
      "library": "Elefront",
      "category": "02 Filter",
      "summary": "Filter Objects by their Name",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByName.html"
    },
    {
      "name": "Filter By Type",
      "id": "FilterType",
      "library": "Elefront",
      "category": "02 Filter",
      "summary": "Filter Objects by their Object Type",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByType.html"
    },
    {
      "name": "Filter by User Attributes",
      "id": "FilterAtt",
      "library": "Elefront",
      "category": "02 Filter",
      "summary": "Filter objects by their User Attributes or filter attributes with objects in parallel",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByUserAttributes.html"
    },
    {
      "name": "Deconstruct Attributes",
      "id": "DeAtt",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Deconstruct Elefront attributes into its constituent parts",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/deconstructAttributes.html"
    },
    {
      "name": "Define Color",
      "id": "Color",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Define Color",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/defineColor.html"
    },
    {
      "name": "Define Layer",
      "id": "Layer",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Define Layer. It can be assigned to Object attributes, or baked with \"Bake Layer\"",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/defineLayer.html"
    },
    {
      "name": "Define Object Attributes",
      "id": "Attributes",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Define a set of attributes to bake with objects",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/defineObjectAttributes.html"
    },
    {
      "name": "Filter By Setting",
      "id": "FilterSetting",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Filter Objects by Setting",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/filterBySetting.html"
    },
    {
      "name": "Get Elefront Attributes",
      "id": "GetAtt",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Extract all Elefront attributes from an object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/getElefrontAttributes.html"
    },
    {
      "name": "Get Rhino Attributes",
      "id": "RHAtt",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Read native Rhino attributes from referenced object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/getRhinoAttributes.html"
    },
    {
      "name": "Get User Attributes",
      "id": "GetUA",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Returns User Attributes.Works on either referenced geometry or Elefront Attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/getUserAttributes.html"
    },
    {
      "name": "Get User Value",
      "id": "GetUV",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Returns a User Attributes value corresponding to a User Attributes key. Works on either referenced geometry or Elefront Attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/getUserValue.html"
    },
    {
      "name": "Modify Elefront Attributes",
      "id": "ModAtt",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Modify attributes of either Referenced Geometry or Elefront Attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/modifyElefrontAttributes.html"
    },
    {
      "name": "Modify RhinoObject Attributes",
      "id": "ModifyAtt",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Modify Rhino object attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/modifyRhinoObjectAttributes.html"
    },
    {
      "name": "Remove User Attributes",
      "id": "RemUA",
      "library": "Elefront",
      "category": "03 Attributes",
      "summary": "Remove all user attributes from Rhino Object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/removeUserAttributes.html"
    },
    {
      "name": "Deconstruct Dimension",
      "id": "DeDim",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Deconstruct dimension object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/deconstructDimension.html"
    },
    {
      "name": "Deconstruct Hatch",
      "id": "DeHatch",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Deconstruct Hatch Object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/deconstructHatch.html"
    },
    {
      "name": "Deconstruct Text",
      "id": "DeText",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Deconstruct text object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/deconstructText.html"
    },
    {
      "name": "Define angular dimension",
      "id": "AngularDim",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define angular dimension object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineAngularDimension.html"
    },
    {
      "name": "Define Hatch",
      "id": "Hatch",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define hatch object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineHatch.html"
    },
    {
      "name": "Define Leader",
      "id": "Leader",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define Leader object to Rhino document",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineLeader.html"
    },
    {
      "name": "Define Linear Dimension",
      "id": "LinearDim",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define linear dimension object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineLinearDimension.html"
    },
    {
      "name": "Define Radial Dimension",
      "id": "RadialDim",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define radial dimension object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineRadialDimension.html"
    },
    {
      "name": "Define Text",
      "id": "Text",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define text object. Right click for more options.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineText.html"
    },
    {
      "name": "Define Text Dot",
      "id": "TextDot",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define text dot object",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineTextDot.html"
    },
    {
      "name": "Define Text Object",
      "id": "Text",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Define text object.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/defineTextObject.html"
    },
    {
      "name": "Export objects",
      "id": "Export",
      "library": "Elefront",
      "category": "04 Annotations",
      "summary": "Export Objects from Rhino. Each tree branch will be output as one file. Objects have to be in the active Rhino model and can not be from a referenced model",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/exportObjects.html"
    },
    {
      "name": "Deconstruct Block",
      "id": "DeBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Deconstruct Blocks into constituent parts, plane and block name",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/deconstructBlock.html"
    },
    {
      "name": "Define Block",
      "id": "Block",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Define a Block. Block will be created when baked.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/defineBlock.html"
    },
    {
      "name": "Define Linked Block",
      "id": "LinkedBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Define a linked Block. Block will be created when baked.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/defineLinkedBlock.html"
    },
    {
      "name": "Export as External Block",
      "id": "ExBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Export geometry as external linked block",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/exportAsExternalBlock.html"
    },
    {
      "name": "Import Linked Block",
      "id": "InLnkBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Import Linked Blocks by File Name. Output can be Tansformed using regular Grasshopper component and baked with Grasshopper Bake operation and Elefront Bake Component.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/importLinkedBlock.html"
    },
    {
      "name": "Insert Block",
      "id": "InBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Insert Blocks by Block Name. Output can be Tansformed using regular Grasshopper component and baked with Grasshopper Bake operation and Elefront Bake Component.",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/insertBlock.html"
    },
    {
      "name": "List Block Document",
      "id": "ListBlockD",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "List all block names from the rhino document",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/listBlockDocument.html"
    },
    {
      "name": "List Block Folder",
      "id": "ListBlockF",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "List all block names from the specified folder",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/listBlockFolder.html"
    },
    {
      "name": "Reference Block by Name",
      "id": "RefBlock",
      "library": "Elefront",
      "category": "05 Block",
      "summary": "Reference Block Instance by Block Name",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/elefront/referenceBlockByName.html"
    },
    {
      "name": "Bake Objects",
      "id": "Bake",
      "library": "Elefront",
      "category": "06 Bake",
      "summary": "Bake objects to Rhino with Rhino attributes and user attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/bakeObjects.html"
    },
    {
      "name": "Bake to File",
      "id": "BakeToFile",
      "library": "Elefront",
      "category": "06 Bake",
      "summary": "Bake objects to external Rhino file",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/bakeToFile.html"
    },
    {
      "name": "Bake/Modify Layer",
      "id": "BakeLayer",
      "library": "Elefront",
      "category": "06 Bake",
      "summary": "Bake or modify Layers to current document",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/bakeModifyLayer.html"
    },
    {
      "name": "Clean Parallel",
      "id": "Clean",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Clean the primary data tree and clean all respective secondary trees in parallel",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/cleanParallel.html"
    },
    {
      "name": "Create Tree",
      "id": "Tree",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Create tree by specifying a branch path for each item",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/createTree.html"
    },
    {
      "name": "Duplicate Data Match",
      "id": "Dup",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Duplicate data based on source data tree",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/elefront/duplicateDataMatch.html"
    },
    {
      "name": "Graft Parallel",
      "id": "GraftP",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Graft the primary data tree and output all respective secondary objects per item",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/elefront/graftParallel.html"
    },
    {
      "name": "ShiftMatch",
      "id": "ShiftM",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Shift a data tree to match the structure with a guide tree",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/shiftMatch.html"
    },
    {
      "name": "Shortest List Clean",
      "id": "Shortest",
      "library": "Elefront",
      "category": "07 Data",
      "summary": "Shrink a collection of lists to the shortest length amongst them. Empty lists have length 0",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/shortestListClean.html"
    },
    {
      "name": "Create Text",
      "id": "Text",
      "library": "Elefront",
      "category": "Annotations",
      "summary": "Create text or text dot object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/createText.html"
    },
    {
      "name": "Create Text Dot",
      "id": "TextDot",
      "library": "Elefront",
      "category": "Annotations",
      "summary": "Create text or text dot object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/elefront/createTextDot.html"
    },
    {
      "name": "Create Text Dot [Obsolete]",
      "id": "TextDot",
      "library": "Elefront",
      "category": "Annotations",
      "summary": "Create text or text dot object to send to Elefront bake component",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/createTextDotObsolete.html"
    },
    {
      "name": "Create Attributed Geometry",
      "id": "AttGeo",
      "library": "Elefront",
      "category": "Attributes",
      "summary": "Create objects with attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/elefront/createAttributedGeometry.html"
    },
    {
      "name": "Filter By User Attributes",
      "id": "FilterUA",
      "library": "Elefront",
      "category": "Attributes",
      "summary": "Filter objects by their User Attributes",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/elefront/filterByUserAttributes.html"
    },
    {
      "name": "Object Attributes",
      "id": "Attributes",
      "library": "Elefront",
      "category": "Attributes",
      "summary": "Create a set of attributes to bake with objects",
      "description": null,
      "iconCss": "background: url('icons/elefront.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/elefront/objectAttributes.html"
    },
    {
      "name": "Location",
      "id": "Loc",
      "library": "Elk",
      "category": "Elk2",
      "summary": "OpenStreetMap and Topograhy",
      "description": null,
      "iconCss": "background: url('icons/elk.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/elk/location.html"
    },
    {
      "name": "OSM Data",
      "id": "OSM",
      "library": "Elk",
      "category": "Elk2",
      "summary": "Get Point and Tag data from an OSM file.",
      "description": null,
      "iconCss": "background: url('icons/elk.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/elk/oSMData.html"
    },
    {
      "name": "Topography",
      "id": "Topo",
      "library": "Elk",
      "category": "Elk2",
      "summary": "Generate Topography surfaces from USGS IMG Raster files or from SRTM HGT files.",
      "description": null,
      "iconCss": "background: url('icons/elk.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/elk/topography.html"
    },
    {
      "name": "Aligned Dimension",
      "id": "AlignedDimension",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component ceates aligned dimensions",
      "description": "This component ceates aligned dimensions. Provide a line to create a single aligned dimension. By providing a polyline or curve multiple dimensions are created. The resulting LinearDimension object can be baked with the Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "iconCss": "background: url('icons/fabTools.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/alignedDimension.html"
    },
    {
      "name": "Angular Dimension",
      "id": "AngularDimension",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component creates an angular dimension from circles and arcs.<br>The resulting AngularDimension object can be baked with the Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/angularDimension.html"
    },
    {
      "name": "Diameter Dimension",
      "id": "DiameterDimension",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component creates a diameter dimension from circles and arcs.<br>The resulting RadialDimension object can be baked with the Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/diameterDimension.html"
    },
    {
      "name": "Dimensional Chain",
      "id": "DimensionalChain",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component ceates a single dimension or a dimensional chain, when more than 2 points are provided",
      "description": "This component ceates a single dimension or a dimensional chain, when more than 2 points are provided. The resulting LinearDimension object can be baked with the Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "iconCss": "background: url('icons/fabTools.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/dimensionalChain.html"
    },
    {
      "name": "Edit Dimension",
      "id": "EditDimension",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component extracts the numerical value, plane and text from the dimension object",
      "description": "This component extracts the numerical value, plane and text from the dimension object. You can also set a plane and text to manipulate the dimension object.<br>The resulting object can be baked with Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "iconCss": "background: url('icons/fabTools.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/editDimension.html"
    },
    {
      "name": "Hatch",
      "id": "Hatch",
      "library": "FabTools",
      "category": "Annotation",
      "summary": "This component creates a hatch from closed planar curves.<br>The resulting Hatch object can be baked with the Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/hatch.html"
    },
    {
      "name": "Advanced Bake",
      "id": "AdvancedBake",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Advanced Bake allows to bake all kinds of geometry Objects with attributes (see BakeAttributes and PlotAttributes by blickfeld7",
      "description": "Advanced Bake allows to bake all kinds of geometry Objects with attributes (see BakeAttributes and PlotAttributes by blickfeld7.com). You can bake PointClouds and group geometry when you provide a Grasshopper group. You can also bake TextEntities created with Advanced Text3D (by blickfeld7.com)<br>Version 0.92",
      "iconCss": "background: url('icons/fabTools.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/advancedBake.html"
    },
    {
      "name": "BakeArrows",
      "id": "BakeArrow",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Add arrowheads as bake attributes to curves. This only works with Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/bakeArrows.html"
    },
    {
      "name": "Layer Attributes",
      "id": "LayerAttributes",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Layer attributes (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/layerAttributes.html"
    },
    {
      "name": "Object Attributes for Bake",
      "id": "BakeAttributes",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Bake attributes for Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/objectAttributesForBake.html"
    },
    {
      "name": "Object Attributes for Plot",
      "id": "PlotAttributes",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Bake attributes for Advanced Bake (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/objectAttributesForPlot.html"
    },
    {
      "name": "View Bake and Plot Attributes",
      "id": "ViewAttributes",
      "library": "FabTools",
      "category": "Bake",
      "summary": "Prints out all the bake and plot attributes from your geometry.<br>To assign Attributes see BakeAttributes and PlotAttributes by blickfeld7.com<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/viewBakeAndPlotAttributes.html"
    },
    {
      "name": "Engrave Text",
      "id": "EngraveText",
      "library": "FabTools",
      "category": "Text",
      "summary": "Creates text as a single line curve, ideal for engraving purposes.<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/fabtools/engraveText.html"
    },
    {
      "name": "Text 3D Advanced",
      "id": "3D Text",
      "library": "FabTools",
      "category": "Text",
      "summary": "Creates 3D Text with custom color, font and alignment.<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/text3DAdvanced.html"
    },
    {
      "name": "Text Contour",
      "id": "TextContour",
      "library": "FabTools",
      "category": "Text",
      "summary": "This creates Contours from TextEntitys. To make TextEntitys see Text3d Advanced by blickfeld7.com<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/textContour.html"
    },
    {
      "name": "Text Dot",
      "id": "TextDot",
      "library": "FabTools",
      "category": "Text",
      "summary": "This component creates a TextDot from location and text.<br>The TextDot object can be baked with the Advanced Bake component (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/textDot.html"
    },
    {
      "name": "Unroll",
      "id": "Unroll",
      "library": "FabTools",
      "category": "Utils",
      "summary": "Unrolls Breps and Surfaces with additional curves and points.<br>by blickfeld7.com",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/unroll.html"
    },
    {
      "name": "View Direction",
      "id": "ViewDir",
      "library": "FabTools",
      "category": "Utils",
      "summary": "Gets the vector of the view direction from the active viewport or a specified view. (by blickfeld7.com)<br>Version 0.92",
      "description": null,
      "iconCss": "background: url('icons/fabTools.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/fabtools/viewDirection.html"
    },
    {
      "name": "Code Generator",
      "id": "CodeGen",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will attempt to convert a Grasshopper<br>definition into Arduino compatible code.  The code can be<br>simultaneously saved as a .ino file to be opened in the<br>Arduino IDE.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/codeGenerator.html"
    },
    {
      "name": "COM Ports Available",
      "id": "Ports Available",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Check to see which COM Ports are curretly available",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/cOMPortsAvailable.html"
    },
    {
      "name": "Convert Degrees To Steps",
      "id": "Convert To Steps",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Convert an angle value in degrees to the appropriate amount of steps to move a Stepper Motor.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/convertDegreesToSteps.html"
    },
    {
      "name": "Due Read",
      "id": "Due Read",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will read values to all corresponding digital<br>and analog pins on an Arduino Mega board",
      "description": "This component will read values to all corresponding digital<br>and analog pins on an Arduino Mega board. Use the Timer<br>component (Parameters/Special/Timer) to update the<br>sensor values in real-time. Note: This component is meant<br>to be used in tandem with the Firefly Firmata Arduino<br>Sketch which can be downloaded from the Firefly website<br>at: http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/dueRead.html"
    },
    {
      "name": "Due Write",
      "id": "Due Write",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will write values to all corresponding digital<br>pins on an Arduino Due board.",
      "description": "This component will write values to all corresponding digital<br>pins on an Arduino Due board. Note: This component is<br>meant to be used in tandem with the Firefly Firmata Arduino<br>Sketch which can be downloaded from the Firefly website<br>at: http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/dueWrite.html"
    },
    {
      "name": "Mega Read",
      "id": "Mega Read",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will read values to all corresponding digital<br>and analog pins on an Arduino Mega board",
      "description": "This component will read values to all corresponding digital<br>and analog pins on an Arduino Mega board. Use the Timer<br>component (Parameters/Special/Timer) to update the<br>sensor values in real-time. Note: This component is meant<br>to be used in tandem with the Firefly Firmata Arduino<br>Sketch which can be downloaded from the Firefly website<br>at: http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/megaRead.html"
    },
    {
      "name": "Mega Write",
      "id": "Mega Write",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will write values to all corresponding digital<br>pins on an Arduino Mega board.",
      "description": "This component will write values to all corresponding digital<br>pins on an Arduino Mega board.  Note: This component is<br>meant to be used in tandem with the Firefly Firmata Arduino<br>Sketch which can be downloaded from the Firefly website<br>at: http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/megaWrite.html"
    },
    {
      "name": "Open/Close Port",
      "id": "Open Port",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Open or Close the Serial Port Connection",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/openClosePort.html"
    },
    {
      "name": "Quad Stepper Motor Stream",
      "id": "Stepper Motor",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will stream data to control up to four<br>stepper motors.",
      "description": "This component will stream data to control up to four<br>stepper motors. Note: This component will format the data<br>according to the Firefly Stepper Arduino sketch.",
      "iconCss": "background: url('icons/firefly.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/quadStepperMotorStream.html"
    },
    {
      "name": "Serial Read (Generic)",
      "id": "Read",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Retrieve a value coming over the serial port. Use the Timer<br>component (Parameters/Special/Timer) to update the sensor values.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/serialReadGeneric.html"
    },
    {
      "name": "Serial Write (Generic)",
      "id": "Write",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Write a string value to the Serial Port.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/serialWriteGeneric.html"
    },
    {
      "name": "Stepper Angle Setup",
      "id": "Setup",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This utility component formats the direction and stepper angle values to work with the Firefly Stepper Firmata.",
      "description": "This utility component formats the direction and stepper angle values to work with the Firefly Stepper Firmata.  Note: this component (and the Firefly Stepper Firmata) has been setup for use with the Easy Stepper Driver by Brian Schmalz.  For more information visit: http://schmalzhaus.com/EasyDriver/",
      "iconCss": "background: url('icons/firefly.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/stepperAngleSetup.html"
    },
    {
      "name": "Uno Read",
      "id": "Uno Read",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will read values to all corresponding digital<br>and analog pins on the Arduino Uno board",
      "description": "This component will read values to all corresponding digital<br>and analog pins on the Arduino Uno board. This component<br>will also work with older Arduino Duemilanove, Diecimilla,<br>or Lillypad board.  Use the Timer component to update the<br>sensor values in real-time. Note: This component<br>is meant to be used in tandem with the Firefly Firmata<br>Arduino Sketch which can be downloaded from the Firefly<br>website at: http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/unoRead.html"
    },
    {
      "name": "Uno Write",
      "id": "Uno Write",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will write values to all corresponding digital<br>pins on an Arduino Uno board",
      "description": "This component will write values to all corresponding digital<br>pins on an Arduino Uno board.  This component will also<br>work on older boards like Arduino Duemilanove, Diecimilla,<br> or Lillypad board.  Note: This component is meant to be<br>used in tandem with the Firefly Uno Arduino Sketch which<br>can be downloaded from the Firefly website at:<br>http://www.fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/unoWrite.html"
    },
    {
      "name": "Upload To I/O Board",
      "id": "Upload I/O",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "Upload an Arduino sketch to an I/O board",
      "description": "Upload an Arduino sketch to an I/O board.  This component requires WinAVR to be installed on your computer in order to properly upload a file to your board.  You can download the latest version of WinAVR at http://winavr.sourceforge.net/index.html",
      "iconCss": "background: url('icons/firefly.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/uploadToIOBoard.html"
    },
    {
      "name": "Wii Nunchuck",
      "id": "Wii Nunchuck",
      "library": "Firefly",
      "category": "Arduino & I/O Boards",
      "summary": "This component will read all of the sensor values from<br>the Wii Nunchuck.",
      "description": "This component will read all of the sensor values from<br>the Wii Nunchuck. Note: This component is meant to<br>be used in tandem with the Wii Nunchuck Arduino Sketch<br>which can be downloaded from the Firefly website at:<br>http://www.Fireflyexperiments.com.",
      "iconCss": "background: url('icons/firefly.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/wiiNunchuck.html"
    },
    {
      "name": "Frequency Spectrum",
      "id": "Spectrum",
      "library": "Firefly",
      "category": "Audio",
      "summary": "Map the incoming frequency spectrum",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/frequencySpectrum.html"
    },
    {
      "name": "Note To Frequency",
      "id": "Notes",
      "library": "Firefly",
      "category": "Audio",
      "summary": "Generate frequency from notes.  For more information visit http://en.wikipedia.org/wiki/Piano_key_frequencies",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/noteToFrequency.html"
    },
    {
      "name": "Sound Capture",
      "id": "Capture",
      "library": "Firefly",
      "category": "Audio",
      "summary": "Capture the audio frequencies from the left and right channel from an input (eg. microphone).",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/soundCapture.html"
    },
    {
      "name": "Tone Generator",
      "id": "Tones",
      "library": "Firefly",
      "category": "Audio",
      "summary": "Create tones based on incoming frequencies",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/toneGenerator.html"
    },
    {
      "name": "Waveform Generator",
      "id": "Waveform",
      "library": "Firefly",
      "category": "Audio",
      "summary": "Generate different types of waveform patterns.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/waveformGenerator.html"
    },
    {
      "name": "Kinect Depth To Point",
      "id": "Depth",
      "library": "Firefly",
      "category": "FireflyVision",
      "summary": "Get Points from Kinect Depth Map",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectDepthToPoint.html"
    },
    {
      "name": "Kinect V1 Color Stream",
      "id": "Video Stream",
      "library": "Firefly",
      "category": "FireflyVision",
      "summary": "Kinect Color Video Stream",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV1ColorStream.html"
    },
    {
      "name": "Kinect V1 Depth Stream",
      "id": "Depth Stream",
      "library": "Firefly",
      "category": "FireflyVision",
      "summary": "Kinect Depth Video Stream",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV1DepthStream.html"
    },
    {
      "name": "Kinect V1 Depth To Point",
      "id": "Depth",
      "library": "Firefly",
      "category": "FireflyVision",
      "summary": "Get Points from Kinect Depth Map",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV1DepthToPoint.html"
    },
    {
      "name": "Kinect V1 Skeletal Tracker",
      "id": "Skeleton",
      "library": "Firefly",
      "category": "FireflyVision",
      "summary": "The Kinect V1 Skeletal Tracker will allow tracking of up to two people at a time.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV1SkeletalTracker.html"
    },
    {
      "name": "JSON Parser",
      "id": "JSON",
      "library": "Firefly",
      "category": "JSON",
      "summary": "Parse through a JSON file",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/jSONParser.html"
    },
    {
      "name": "Key/Value Search",
      "id": "Search",
      "library": "Firefly",
      "category": "Networking",
      "summary": "Searches the array for a given key and returns the corresponding value if successful.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/keyValueSearch.html"
    },
    {
      "name": "OSC Listener",
      "id": "OSC Listener",
      "library": "Firefly",
      "category": "Networking",
      "summary": "OSC Listener.",
      "description": "OSC Listener.  Note: This listener needs an external timer to update properly (use Grasshopper Timer).",
      "iconCss": "background: url('icons/firefly.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/oSCListener.html"
    },
    {
      "name": "OSC Sender",
      "id": "OSC Sender",
      "library": "Firefly",
      "category": "Networking",
      "summary": "OSC Sender.  The OSC Sender will automatically format incoming data into the appropriate OSC format and send the message over a UDP port to a specified IP address.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/oSCSender.html"
    },
    {
      "name": "Pachube/Cosm Read",
      "id": "Cosm Read",
      "library": "Firefly",
      "category": "Networking",
      "summary": "Read a file from a Pachube/Cosm feed",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/pachubeCosmRead.html"
    },
    {
      "name": "UDP Listener",
      "id": "UDP Listener",
      "library": "Firefly",
      "category": "Networking",
      "summary": "UDP Listener.",
      "description": "UDP Listener.  Note: This listener needs an external timer to update properly (use Grasshopper Timer).",
      "iconCss": "background: url('icons/firefly.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/uDPListener.html"
    },
    {
      "name": "UDP Sender",
      "id": "UDP Sender",
      "library": "Firefly",
      "category": "Networking",
      "summary": "UDP Sender.  The UDP Sender will automatically send any message (string) over a UDP port to a specified IP address.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/uDPSender.html"
    },
    {
      "name": "XML Search",
      "id": "XML Search",
      "library": "Firefly",
      "category": "Networking",
      "summary": "Search an XML file (either from the web or from a local directory) for a specific element tag",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/xMLSearch.html"
    },
    {
      "name": "AND Flip Flop",
      "id": "AND FlipFlop",
      "library": "Firefly",
      "category": "Utility",
      "summary": "The AND flip-flop differs from the NOR flip-flop in the sense that the output gate is determined by its present output state as well the states of both of its inputs",
      "description": "The AND flip-flop differs from the NOR flip-flop in the sense that the output gate is determined by its present output state as well the states of both of its inputs. Thus, in a AND flip-flop, the output will not change if both S and R are false, but will toggle to its complement if both inputs are set to true.",
      "iconCss": "background: url('icons/firefly.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/aNDFlipFlop.html"
    },
    {
      "name": "Bang",
      "id": "Bang",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Detects when an input boolean has switched states. The equivalent of a 'Bang' component in other programs like MAX/MSP, Pd, and VVVV.",
      "description": "Detects when an input boolean has switched states. The equivalent of a 'Bang' component in other programs like MAX/MSP, Pd, and VVVV. Note: This component requires the use of the GH_Timer component.",
      "iconCss": "background: url('icons/firefly.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bang.html"
    },
    {
      "name": "Binary Blink",
      "id": "Blink",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Oscillates 0's and 1's based on an incoming pattern of integers",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/binaryBlink.html"
    },
    {
      "name": "Data Log",
      "id": "Log",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Create a log of incoming data.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/dataLog.html"
    },
    {
      "name": "Fader One Way",
      "id": "Fader1",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Fade between one value to another based on a time interval (ms). Use the GH_Timer component (Parameters/Special/Timer) to update the Fader values in real-time.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/faderOneWay.html"
    },
    {
      "name": "Fader Two Way",
      "id": "Fader2",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Fade between a minimum and maximum value based on the fade in and fade out time interval (ms). Use the GH_Timer component (Parameters/Special/Timer) to update the Fader values in real-time.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/firefly/faderTwoWay.html"
    },
    {
      "name": "Frame Rate",
      "id": "FrameRate",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Time in milliseconds since the data was updated.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/frameRate.html"
    },
    {
      "name": "Is Geometry Selected",
      "id": "Selected",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Test whether or not some Rhino geometry is selected.",
      "description": "Test whether or not some Rhino geometry is selected. Note: This component requires the use of the GH_Timer component (Params/Special/Timer).",
      "iconCss": "background: url('icons/firefly.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/isGeometrySelected.html"
    },
    {
      "name": "Is Key Pressed",
      "id": "Pressed",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Test whether or not a specified key has been pressed on the keyboard.",
      "description": "Test whether or not a specified key has been pressed on the keyboard. Note: This component requires the use of the GH_Timer component (Params/Special/Timer).",
      "iconCss": "background: url('icons/firefly.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/isKeyPressed.html"
    },
    {
      "name": "NOR Flip Flop",
      "id": "NOR FlipFlop",
      "library": "Firefly",
      "category": "Utility",
      "summary": "The NOR flip-flop has two inputs, namely, a Set input (S) and a Reset (R) input",
      "description": "The NOR flip-flop has two inputs, namely, a Set input (S) and a Reset (R) input. A simple representation of an S-R flip-flop is a pair of cross-coupled NOR gates, i.e, the output of one gate is tied to one of the two inputs of the other gate and vice versa. Thus, setting the output gate to false requires R=true and S=false, while setting the output gate to true requires S=true and R=false.",
      "iconCss": "background: url('icons/firefly.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/nORFlipFlop.html"
    },
    {
      "name": "PID",
      "id": "PID",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Calculates the error value as the difference between a measured process variable and a desired set point.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/pID.html"
    },
    {
      "name": "Playback",
      "id": "Playback",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Retrieve a text file and return individual lines at a given frame rate.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/playback.html"
    },
    {
      "name": "Smoothing Moving Average",
      "id": "Smooth",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Find the Mean Smoothing value (or average) based on a sampling level (number of samples to average).  Larger sample sizes result in greater smoothing",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/smoothingMovingAverage.html"
    },
    {
      "name": "Smoothing Temporal",
      "id": "Smoothing",
      "library": "Firefly",
      "category": "Utility",
      "summary": "This smoothing algorithm returns a smoothed value that is the sum of the weighted average of the previous observations and the current value.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/smoothingTemporal.html"
    },
    {
      "name": "State Detection",
      "id": "Detect",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Used when you want to detect when something has switched from LOW to HIGH (0 or 1) or vice versa.  For more information see: http://arduino.cc/en/Tutorial/ButtonStateChange",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/stateDetection.html"
    },
    {
      "name": "Stop Watch",
      "id": "Elapsed",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Elapsed time in milliseconds since the stop watch was started",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/stopWatch.html"
    },
    {
      "name": "Time Line",
      "id": "Time Line",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Time Line",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/timeLine.html"
    },
    {
      "name": "Wave Sculpt",
      "id": "Wave",
      "library": "Firefly",
      "category": "Utility",
      "summary": "Create a sinusoidal waveform output",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/waveSculpt.html"
    },
    {
      "name": "Additive Time Lapse",
      "id": "Time Lapse",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Additive Time Lapse",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/additiveTimeLapse.html"
    },
    {
      "name": "Bitmap Decompose",
      "id": "Decompose",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Decompose a bitmap into its constituent channels",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapDecompose.html"
    },
    {
      "name": "Bitmap Info",
      "id": "Info",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Statistics about a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapInfo.html"
    },
    {
      "name": "Bitmap Layers",
      "id": "Layers",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Bitmap Layers",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapLayers.html"
    },
    {
      "name": "Bitmap Painter",
      "id": "Painter",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Bitmap Painter",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapPainter.html"
    },
    {
      "name": "Bitmap Recompose",
      "id": "Recompose",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Recompose a bitmap from its constituent channels",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapRecompose.html"
    },
    {
      "name": "Bitmap Sampler",
      "id": "Sample",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Sample a Firefly Bitmap based on an incoming set of points for a specified filter type.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapSampler.html"
    },
    {
      "name": "Bitmap Threshold",
      "id": "Threshold",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Using the Average Dithering, find the threshold color quantization of an image.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/bitmapThreshold.html"
    },
    {
      "name": "Blur",
      "id": "Blur",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Blur a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/blur.html"
    },
    {
      "name": "Brightness and Saturation",
      "id": "Saturation",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Modify the brightness and saturation properties of a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/brightnessAndSaturation.html"
    },
    {
      "name": "Color Correction",
      "id": "Color",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Modify the color properties (red, green, blue) for a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/colorCorrection.html"
    },
    {
      "name": "Contrast",
      "id": "Contrast",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Modify the contrast of a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/contrast.html"
    },
    {
      "name": "Convolution Filter",
      "id": "Convolver",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Create your own filter based on a 3x3 convolution matrix (kernel).",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/convolutionFilter.html"
    },
    {
      "name": "Edge Detection",
      "id": "Edge",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Find edges in a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/edgeDetection.html"
    },
    {
      "name": "Emboss",
      "id": "Emboss",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Emboss a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/emboss.html"
    },
    {
      "name": "Exposure (Accumulative)",
      "id": "Exposure",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Temporally add color information to a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/exposureAccumulative.html"
    },
    {
      "name": "Exposure (Movement)",
      "id": "Exposure",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Temporally add movement information (in greyscale) to a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/exposureMovement.html"
    },
    {
      "name": "Flip Image",
      "id": "Flip",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Flip or Mirror a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/flipImage.html"
    },
    {
      "name": "Gamma Correction",
      "id": "Gamma",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Specify the Gamma Correction for a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/gammaCorrection.html"
    },
    {
      "name": "Invert",
      "id": "Invert",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Invert a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/invert.html"
    },
    {
      "name": "Kinect V2 Mesh Reconstruction",
      "id": "Mesh Reconstruction",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Returns a reconstructed colored mesh based on the color/depth information from the Kienct sensor.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV2MeshReconstruction.html"
    },
    {
      "name": "Kinect V2 Skeleton Tracker",
      "id": "Skeleton",
      "library": "Firefly",
      "category": "Vision",
      "summary": "The Kinect V2 Skeletal Tracker will allow tracking of up to six people at a time.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV2SkeletonTracker.html"
    },
    {
      "name": "Kinect V2 Video Stream",
      "id": "Video Stream",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Stream video data from the Kinect sensor.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/firefly/kinectV2VideoStream.html"
    },
    {
      "name": "Laplacian",
      "id": "Laplacian",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Apply a Laplacian filter to a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/laplacian.html"
    },
    {
      "name": "Load Bitmap",
      "id": "Load Bitmap",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Load Bitmap",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/loadBitmap.html"
    },
    {
      "name": "Load Video File",
      "id": "Load Video",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Load a video file.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/firefly/loadVideoFile.html"
    },
    {
      "name": "Posterize",
      "id": "Posterize",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Posterize a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/posterize.html"
    },
    {
      "name": "reacTIVision Listener",
      "id": "reacTIVision",
      "library": "Firefly",
      "category": "Vision",
      "summary": "The reacTIVision Listener draws the position and rotation of each fiducial marker",
      "description": "The reacTIVision Listener draws the position and rotation of each fiducial marker.  This component is meant to be used in tandem with the reacTIVision software, available for free from http://www.reactivision.com/downloads.  Fiducial marker set available from http://reactivision.sourceforge.net/#files.  Note: You must have the reacTIVision software and working camera enabled to use this component.",
      "iconCss": "background: url('icons/firefly.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/firefly/reacTIVisionListener.html"
    },
    {
      "name": "Replace Color",
      "id": "Replace",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Replace a color in a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/replaceColor.html"
    },
    {
      "name": "Resize Bitmap",
      "id": "Resize",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Change the resolution of a Firefly Bitmap",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/firefly/resizeBitmap.html"
    },
    {
      "name": "Sharpen",
      "id": "Sharpen",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Sharpen a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/sharpen.html"
    },
    {
      "name": "Snapshot",
      "id": "Snapshot",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Save a snapshot of a Firefly Bitmap",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/snapshot.html"
    },
    {
      "name": "Snapshot Sequence",
      "id": "Sequence",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Create a sequence of image snapshots",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/firefly/snapshotSequence.html"
    },
    {
      "name": "Sobel",
      "id": "Sobel",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Apply a Sobel filter to a Firefly Bitmap.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/firefly/sobel.html"
    },
    {
      "name": "Test Color",
      "id": "Test Color",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Test whether a color is included within a second list of colors",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/testColor.html"
    },
    {
      "name": "Video Player",
      "id": "Video Player",
      "library": "Firefly",
      "category": "Vision",
      "summary": "Load or play a movie or video file.",
      "description": null,
      "iconCss": "background: url('icons/firefly.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/firefly/videoPlayer.html"
    },
    {
      "name": "Cloth From Mesh",
      "id": "Cloth",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/clothFromMesh.html"
    },
    {
      "name": "Constraint: Shape Matching Constraint",
      "id": "Shape Matching",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Group particles into shapes where they try to remain in their current formation",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/constraintShapeMatchingConstraint.html"
    },
    {
      "name": "Constraints: Anchors",
      "id": "Anchor",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Flex anchor by index",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/constraintsAnchors.html"
    },
    {
      "name": "Constraints: Springs",
      "id": "Springs",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Add spring constraints by particle indices.",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/constraintsSprings.html"
    },
    {
      "name": "Constraints: Triangles",
      "id": "Triangles",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Add triangle constraints by particle indices.",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/constraintsTriangles.html"
    },
    {
      "name": "Inflatable From Cloth",
      "id": "Inflatable",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Inflatable from Flex Cloth Object",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/inflatableFromCloth.html"
    },
    {
      "name": "Particle Fountain",
      "id": "Fountain",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "Connect a timer to me and make sure to not be in Lock Mode (Flex Engine component).",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/particleFountain.html"
    },
    {
      "name": "Particles From Points",
      "id": "Particles",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/particlesFromPoints.html"
    },
    {
      "name": "Spring System From Lines / Meshes",
      "id": "Springs",
      "library": "FlexHopper",
      "category": "Composition",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/flexhopper/springSystemFromLinesMeshes.html"
    },
    {
      "name": "Get All Particles",
      "id": "AllParts",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "Get all particles from engine object",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getAllParticles.html"
    },
    {
      "name": "Get All Springs",
      "id": "AllSprings",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "Get all springs from engine object",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getAllSprings.html"
    },
    {
      "name": "Get Particle Description",
      "id": "Particles",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "<",
      "description": "<WARNING: This will slow down simulation significantly><br>Retrieve information about every single particle in the simulation.",
      "iconCss": "background: url('icons/flexHopper.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getParticleDescription.html"
    },
    {
      "name": "Get Rigid Tranformations",
      "id": "Transform",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "Get the transformation matrices of all rigid bodies in the simulation. This includes shape matching constraints in soft bodies.",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getRigidTranformations.html"
    },
    {
      "name": "Get Soft Bodies",
      "id": "Softs",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "Get soft bodies from engine object",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getSoftBodies.html"
    },
    {
      "name": "Get Spring Systems",
      "id": "Springs",
      "library": "FlexHopper",
      "category": "Decomposition",
      "summary": "Get all particles that are parts of springs from engine object",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/getSpringSystems.html"
    },
    {
      "name": "Flex Engine",
      "id": "Flex",
      "library": "FlexHopper",
      "category": "Engine",
      "summary": "Main component",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexEngine.html"
    },
    {
      "name": "Flex Solver Options",
      "id": "Opts",
      "library": "FlexHopper",
      "category": "Engine",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexSolverOptions.html"
    },
    {
      "name": "Flex Collision Geometry",
      "id": "CollGeometry",
      "library": "FlexHopper",
      "category": "Setup",
      "summary": "Specifiy static geometry as colliding objects",
      "description": "Specifiy static geometry as colliding objects. Flex supports certain objects (Plane, Sphere and Box) more efficiently. If you want to register such objects as collision geometry, use the respective object input rather than meshes.",
      "iconCss": "background: url('icons/flexHopper.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexCollisionGeometry.html"
    },
    {
      "name": "Flex Force Field",
      "id": "Force Field",
      "library": "FlexHopper",
      "category": "Setup",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexForceField.html"
    },
    {
      "name": "Flex Parameters from .xml file",
      "id": "Params",
      "library": "FlexHopper",
      "category": "Setup",
      "summary": "Set environmental parameters for your simulation. Link a .xml file (INFO: Auto update doesn't work yet, so if you change you .xml file you'll have to manually recompute the component.",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexParametersFromxmlFile.html"
    },
    {
      "name": "Flex Scene",
      "id": "Scene",
      "library": "FlexHopper",
      "category": "Setup",
      "summary": "Create a scene object containing all moving geometry.",
      "description": null,
      "iconCss": "background: url('icons/flexHopper.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/flexhopper/flexScene.html"
    },
    {
      "name": "Equi2D",
      "id": "Equi2D",
      "library": "FlowLines",
      "category": "FlowL",
      "summary": "Calculates 2D equipotentiallines of a vectorfield projected onto World_xy_plane (implementation of RK4)",
      "description": null,
      "iconCss": "background: url('icons/flowLines.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/flowlines/equi2D.html"
    },
    {
      "name": "StreamLines2D",
      "id": "StreamLines2D",
      "library": "FlowLines",
      "category": "FlowL",
      "summary": "Calculates 2D streamlines of a vectorfield projected onto World_xy_plane (implementation of RK4)",
      "description": null,
      "iconCss": "background: url('icons/flowLines.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/flowlines/streamLines2D.html"
    },
    {
      "name": "StreamLines2DVortex",
      "id": "StreamLines2DVortex",
      "library": "FlowLines",
      "category": "FlowL",
      "summary": "Calculates 2D streamlines of a vectorfield projected onto World_xy_plane (implementation of RK4)with optional vortexes",
      "description": null,
      "iconCss": "background: url('icons/flowLines.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/flowlines/streamLines2DVortex.html"
    },
    {
      "name": "StreamLines3D",
      "id": "StreamLines3D",
      "library": "FlowLines",
      "category": "FlowL",
      "summary": "Calculates 3D streamlines of a vectorfield (implementation of RK4).Streamlines are everywhere tangent to the vectorfield",
      "description": null,
      "iconCss": "background: url('icons/flowLines.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/flowlines/streamLines3D.html"
    },
    {
      "name": "Fitness Landscape",
      "id": "LScape",
      "library": "Galapagos",
      "category": "Util",
      "summary": "Display a 2.5D fitness landscape",
      "description": null,
      "iconCss": "background: url('icons/galapagos.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/galapagos/fitnessLandscape.html"
    },
    {
      "name": "ExcelDynamicRead",
      "id": "ExDRead",
      "library": "GhExcel",
      "category": "ExcelReadWrite",
      "summary": "Read data dynamically from excel",
      "description": null,
      "iconCss": "background: url('icons/ghExcel.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/ghexcel/excelDynamicRead.html"
    },
    {
      "name": "ExcelStaticRead",
      "id": "ExSRead",
      "library": "GhExcel",
      "category": "ExcelReadWrite",
      "summary": "Read data statically from excel",
      "description": null,
      "iconCss": "background: url('icons/ghExcel.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/ghexcel/excelStaticRead.html"
    },
    {
      "name": "ExcelWrite",
      "id": "ExWrite",
      "library": "GhExcel",
      "category": "ExcelReadWrite",
      "summary": "Write data to excel",
      "description": null,
      "iconCss": "background: url('icons/ghExcel.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/ghexcel/excelWrite.html"
    },
    {
      "name": "Spreadsheet Reader",
      "id": "#R",
      "library": "gHowl",
      "category": "#",
      "summary": "Import spreadsheet data to GH",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/spreadsheetReader.html"
    },
    {
      "name": "Spreadsheet Writer",
      "id": "#W",
      "library": "gHowl",
      "category": "#",
      "summary": "Write GH Data to a Spreadsheet",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/spreadsheetWriter.html"
    },
    {
      "name": "XYZ to Geo",
      "id": "XYZ->Geo",
      "library": "gHowl",
      "category": "Geo",
      "summary": "Map XYZ Coordinates to WSG84",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/xYZToGeo.html"
    },
    {
      "name": "Format Geo",
      "id": "DMs -> DD",
      "library": "gHowl",
      "category": "GEO",
      "summary": "Formats WSG84 coordinates",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/formatGeo.html"
    },
    {
      "name": "Geo to XYZ",
      "id": "Geo->XYZ",
      "library": "gHowl",
      "category": "GEO",
      "summary": "Map WSG84 Coordinates to XYZ",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/geoToXYZ.html"
    },
    {
      "name": "Get Elevation",
      "id": "E",
      "library": "gHowl",
      "category": "GEO",
      "summary": "Given WGS84 coordinates, this component will return the elevation(s)",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/getElevation.html"
    },
    {
      "name": "KML Exporter",
      "id": "KML Out",
      "library": "gHowl",
      "category": "KML",
      "summary": "Export from Rhino model to KML format",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/kMLExporter.html"
    },
    {
      "name": "KML Style",
      "id": "S",
      "library": "gHowl",
      "category": "KML",
      "summary": "KML Object Attributes: Fill Color, Line Color, Line Width",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/kMLStyle.html"
    },
    {
      "name": "Network Source",
      "id": "NetSource",
      "library": "gHowl",
      "category": "UDP",
      "summary": "Discovers an external internet connection, and retrieve name and properties if one is available",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/networkSource.html"
    },
    {
      "name": "OSC Channel",
      "id": "OSC_C",
      "library": "gHowl",
      "category": "UDP",
      "summary": "Store OSC data from a single source",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/oSCChannel.html"
    },
    {
      "name": "OSC Dispatch",
      "id": "OSC_D",
      "library": "gHowl",
      "category": "UDP",
      "summary": "Store OSC data from multiple sources",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/oSCDispatch.html"
    },
    {
      "name": "UDP Receiver",
      "id": ">UDP<",
      "library": "gHowl",
      "category": "UDP",
      "summary": "Allows to receive data on the network",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/uDPReceiver.html"
    },
    {
      "name": "UDP Sender",
      "id": "<UDP>",
      "library": "gHowl",
      "category": "UDP",
      "summary": "Allows to send data through the network to any computer",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/uDPSender.html"
    },
    {
      "name": "Pachube Update",
      "id": "Update Pachube",
      "library": "gHowl",
      "category": "XML",
      "summary": "Updates a Pachube Feed",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/pachubeUpdate.html"
    },
    {
      "name": "Read Pachube",
      "id": "Pachube",
      "library": "gHowl",
      "category": "XML",
      "summary": "This component reads a Pachube Feed",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/ghowl/readPachube.html"
    },
    {
      "name": "Write XML",
      "id": "XML",
      "library": "gHowl",
      "category": "XML",
      "summary": "Writes a data in a Grasshopper Tree to an XML file",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/writeXML.html"
    },
    {
      "name": "Xml Parser",
      "id": "XML",
      "library": "gHowl",
      "category": "XML",
      "summary": "Parses an XML File",
      "description": null,
      "iconCss": "background: url('icons/gHowl.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/ghowl/xmlParser.html"
    },
    {
      "name": "Address To Location",
      "id": "AddressToLocation",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to find coordinates of a specific location using an address.<br>It uses Nominatim API<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/addressToLocation.html"
    },
    {
      "name": "Create Location",
      "id": "CreateLocation",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to construct a location based on latitude, longitude coordinates.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/createLocation.html"
    },
    {
      "name": "Deconstruct Location",
      "id": "DeconstructLocation",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to exlode an epw location to its parts: locationName, latitude, longitude, timeZone, elevation.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/deconstructLocation.html"
    },
    {
      "name": "DMS To DD",
      "id": "DMSToDD",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to convert a coordinate in degrees, minutes and seconds (DMS) format to decimal degrees (DD) format",
      "description": "Use this component to convert a coordinate in degrees, minutes and seconds (DMS) format to decimal degrees (DD) format.<br>This can be useful for Gismo component's \"Create Location\" inputs in case you have latitude/longitude coordinates in DMS instead of DD format.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/dMSToDD.html"
    },
    {
      "name": "Gismo",
      "id": "Gismo",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "This component contains all Gismo classes",
      "description": "This component contains all Gismo classes. Other Gismo components are being run by referencing these classes.<br>So in order for any other Gismo component to work, you need to run this component first. If this component is ran successfully you will hear the Gismo penquin peeping!!<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/gismo.html"
    },
    {
      "name": "Location To XY",
      "id": "LocationToXY",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to calculate the point in Rhino scene based on latitude and longitude coordinates (_location input)",
      "description": "Use this component to calculate the point in Rhino scene based on latitude and longitude coordinates (_location input).<br>For example: you created some building shapes with Gismo \"OSM Shapes\" component, and now you would like to check where among those shapes does particular latitude, longitude location lies.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/locationToXY.html"
    },
    {
      "name": "XY To Location",
      "id": "XYtoLocation",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to calculate latitude and longitude coordinates of the _point in Rhino scene",
      "description": "Use this component to calculate latitude and longitude coordinates of the _point in Rhino scene.<br>For example: you created some building shapes with Gismo \"OSM Shapes\" component, and now you would like to check what are the latitude and longtitude coordinates of particular part of the building.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/gismo/xYToLocation.html"
    },
    {
      "name": "Z To Elevation",
      "id": "ZtoElevation",
      "library": "Gismo",
      "category": "0 | Gismo",
      "summary": "Use this component to calculate the elevation height of particular point",
      "description": "Use this component to calculate the elevation height of particular point.<br>For example: you have a terrain made by Gismo or Ladybug \"Terrain Generator\" component, and you would like to know what is the elevation height of particular point on the terrain.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/gismo/zToElevation.html"
    },
    {
      "name": "OSM 3D",
      "id": "OSM3D",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to create 3d geometry of structures/building and tree shapes created with Gismo \"OSM shapes\" component",
      "description": "Use this component to create 3d geometry of structures/building and tree shapes created with Gismo \"OSM shapes\" component.<br>Creation of 3d shapes can be done in three ways:<br>1) If there is a valid value (not equal to \"\") for the \"height\" key, then the shape will always be extruded according to this value.<br>2) If this value is lacking (equal to \"\"), then the shape can be extruded according to the \"building:levels\" key value.<br>3) If both of these two values are lacking (equal to \"\"), or the very keys are lacking, and there is a valid value (\"True\") for the \"building\" key, then the shape will be extruded, according to the supplied domain generated from the randomHeightRange_ input.<br>If neither of these three ways are fulfilled, then no creation of 3d shapes will be performed.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSM3D.html"
    },
    {
      "name": "OSM 3D Forest",
      "id": "OSM3Dforest",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to create 3d trees geometry on inputed surfaces",
      "description": "Use this component to create 3d trees geometry on inputed surfaces.<br>OSM 3D component can create 3d trees. However, there are areas where trees should be located but they do not exist in openstreetmap database, so OSM 3D component will not create them.<br>These areas are forests for example. You can find a forest area with the use of \"OSM Search\" component and add its \"foundShapes\" ouput to this component's \"_forestSrfs\" input. Or any other surface you wish to add trees to.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSM3DForest.html"
    },
    {
      "name": "OSM 3D Road",
      "id": "OSM3Droad",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to create 3d roads geometry",
      "description": "Use this component to create 3d roads geometry.<br>If terrain is used then 3d roads are created for the purpose of visualization. They do not represent the actual terrains roadfilled roads!<br>-<br>If you notice some inconsistency in the final 3d road geometry, lower the value of Rhino's tolerance (Tools->Options->Units->Absolute tolerance). Then rerun the grasshopper definition (Solution->Recompute).<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSM3DRoad.html"
    },
    {
      "name": "OSM 3D Roof",
      "id": "OSM3Droof",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to create 3d roofs geometry",
      "description": "Use this component to create 3d roofs geometry.<br>They can be created in two ways:<br>1) If there is a valid value (not equal to \"\") for the \"roof:shape=hipped\" and \"roof:angle\" key, then the 3d roof will be created according to this angle.<br>2) If this value is lacking (equal to \"\"), then pitched, hipped roof can be created with random angle. Or parapet wall for flat roof, with random height. This requires a domain to be added to the \"randomRange_\" input.<br>If neither of these two ways are fulfilled, then no creation of 3d roof will be performed.<br>-<br>Component is experimental! In some cases the pitched roof may fail to be created, or it may create an invalid roof geometry!<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSM3DRoof.html"
    },
    {
      "name": "OSM Clean Values",
      "id": "OSMcleanValues",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "A lot of times the items coming from the \"values\" output of OSM components may have empty data (<empty>)",
      "description": "A lot of times the items coming from the \"values\" output of OSM components may have empty data (<empty>).<br>Use this component to clean all that empty data, or to replace it with some other value.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMCleanValues.html"
    },
    {
      "name": "OSM Ids",
      "id": "OSMids",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to define lists of Open Street Map ids",
      "description": "Use this component to define lists of Open Street Map ids.<br>These lists can be used to define:<br>1) only those ids which will be included (isolated) when \"OSM shapes\" component is ran (use \"osm_id_Only\" and \"osm_way_id_Only\" inputs for this)<br>2) ids which will be removed when \"OSM shapes\" component is ran (use \"osm_id_Remove\" and \"osm_way_id_Remove\" inputs for this)<br>3) you can combine 1) and 2) and both define the: included and removed ids.<br>-<br>Additional info:<br>Sometimes \"OSM shapes\" can output invalid or unwanted shapes. In that case the purpose of this component is to remove those shapes by adding their ids to the \"osm_id_Remove_\" and/or \"osm_way_id_Remove_\" inputs.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMIds.html"
    },
    {
      "name": "OSM Keys",
      "id": "OSMKeys",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to generate a list of keys for the \"requiredKeys_\" input of \"OSM shapes\" component",
      "description": "Use this component to generate a list of keys for the \"requiredKeys_\" input of \"OSM shapes\" component.<br>A list of keys depends on the chosen OSM object name (_OSMobjectName). Use \"OSM Objects\" dropdown list to generate the appropriate _OSMobjectName.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMKeys.html"
    },
    {
      "name": "OSM Objects",
      "id": "OSMobjects",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this dropdown list to chose an OSM object.<br>-<br><br>Provided by Gismo 0.0.3, JAN_29_2019",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMObjects.html"
    },
    {
      "name": "OSM Render Mesh",
      "id": "OSMrenderMesh",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to create a render mesh from the 3d shapes generated by the \"OSM 3D\" component",
      "description": "Use this component to create a render mesh from the 3d shapes generated by the \"OSM 3D\" component.<br>The component will also create the texture image (material diffuse map file) for the render mesh.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMRenderMesh.html"
    },
    {
      "name": "OSM Search",
      "id": "OSMsearch",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to search through OSM 2D and 3D shapes",
      "description": "Use this component to search through OSM 2D and 3D shapes. Shapes will be searched by the use of _requiredTag input. To generate _requiredTag input use \"OSM tag\" component.<br>-<br>1) If you would like to search OSM 2D shapes, add data to _shapes, _keys, _values inputs.  Or<br>2) If you would like to search OSM 3D shapes, then additionally add data to threeDeeShapes_, threeDeeValues_ inputs.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMSearch.html"
    },
    {
      "name": "OSM Shapes",
      "id": "OSMshapes",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to generate Open Street Map shapes for the chosen _location and radius_",
      "description": "Use this component to generate Open Street Map shapes for the chosen _location and radius_.<br>OSM shapes represent linear or point map elements from openstreetmap.org service - the largest free map online service.<br>Linear OSM shapes include: buildings footprints, park footprints, roads axes, rivers, lake boundaries, and any other linear map element ...<br>Point OSM shapes include: trees, bus stations, restaurants, pubs, markets, address plates ...<br>-<br>Component requires that you are connected to the Internet, as it has to download osm data.<br>It also requires MapWinGIS application to be installed in order for it to work. Download the MapWinGIS from:<br>https://github.com/MapWindow/MapWinGIS/releases<br>If you are using Rhino 5 x86, then download the \"Win32\" version.<br>If you are using Rhino 5 x64, then download the \"x64\" version.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMShapes.html"
    },
    {
      "name": "OSM Tag",
      "id": "OSMtag",
      "library": "Gismo",
      "category": "1 | OpenStreetMap",
      "summary": "Use this component to generate \"requiredTag\" output",
      "description": "Use this component to generate \"requiredTag\" output. This output is used as input for \"OSM search\" component. It represents a combination of a key and value(s) for which search at \"OSM search\" component will be performed.<br>-<br>Search for any OSM tag at: http://taginfo.openstreetmap.org/tags<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/oSMTag.html"
    },
    {
      "name": "Flow Paths",
      "id": "FlowPaths",
      "library": "Gismo",
      "category": "2 | Terrain",
      "summary": "Use this component to perform the analysis of gravitational water flow",
      "description": "Use this component to perform the analysis of gravitational water flow.<br>It can be a useful indicator of drainage analysis of a building, terrain, landscape or any other sort of geometry.<br>-<br>Component based on:<br>\"Finding the downhill direction vector when given a plane defined by a normal and a point\", stackoverflow.com topic by Zach Helms, 2016<br>http://stackoverflow.com/q/14369233/3137724<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/flowPaths.html"
    },
    {
      "name": "Horizon Angles",
      "id": "HorizonAngles",
      "library": "Gismo",
      "category": "2 | Terrain",
      "summary": "Use this component to create a horizon file (",
      "description": "Use this component to create a horizon file (.hor) and visualize horizon angles.<br>-<br>Component based on:<br>\"Solmetric SunEye 210 User’s Guide\", Solmetric Corporation, 2011<br>http://resources.solmetric.com/get/Solmetric%20SunEye%20200%20Series%20Users%20Guide_en.pdf<br>\"PVsyst 6 Help\", PVsyst SA<br>http://files.pvsyst.com/help/index.html?horizon_import.htm<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/horizonAngles.html"
    },
    {
      "name": "Terrain Analysis",
      "id": "TerrainAnalysis",
      "library": "Gismo",
      "category": "2 | Terrain",
      "summary": "Use this component to perform the following terrain analysis types:<br>-<br>- Slope<br>- Grade<br>- Aspect<br>- Elevation<br>- Visibility<br>- Hillshade<br>- TRI (Terrain Ruggedness Index by Riley)<br>- TRI categories (Terrain Ruggedness Index categories by Riley)<br>- SRF (Surface Roughness Factor by Hobson)<br>- TPI (Topographic Position Index)<br>- Mean curvature<br>------<br>Component mainly based on:<br>\"DEM Surface Tools for ArcGIS\", Jenness Enterprises, 2013",
      "description": "Use this component to perform the following terrain analysis types:<br>-<br>- Slope<br>- Grade<br>- Aspect<br>- Elevation<br>- Visibility<br>- Hillshade<br>- TRI (Terrain Ruggedness Index by Riley)<br>- TRI categories (Terrain Ruggedness Index categories by Riley)<br>- SRF (Surface Roughness Factor by Hobson)<br>- TPI (Topographic Position Index)<br>- Mean curvature<br>------<br>Component mainly based on:<br>\"DEM Surface Tools for ArcGIS\", Jenness Enterprises, 2013.<br>\"How Hillshade works\" article from Esri Developer Network<br>\"How to calculate Topographic Ruggedness Index in ArcGIS Desktop\" article from gis.stackexchange.com<br>\"Terrain Roughness – 13 Ways\" article from gis4geomorphology.com<br>TopoToolbox \"roughness\" function by Wolfgang Schwanghart<br>-<br>http://www.jennessent.com/downloads/DEM%20Surface%20Tools%20for%20ArcGIS_A4.pdf<br>http://edndoc.esri.com/arcobjects/9.2/net/shared/geoprocessing/spatial_analyst_tools/how_hillshade_works.htm<br>http://gis.stackexchange.com/a/6059/65002<br>http://gis4geomorphology.com/roughness-topographic-position<br>https://github.com/wschwanghart/topotoolbox/blob/master/@GRIDobj/roughness.m<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/terrainAnalysis.html"
    },
    {
      "name": "Terrain Generator",
      "id": "TerrainGenerator",
      "library": "Gismo",
      "category": "2 | Terrain",
      "summary": "Use this component to create a geometry of the terrain surrounding the chosen location",
      "description": "Use this component to create a geometry of the terrain surrounding the chosen location.<br>Terrain will be created with ALOS 1 arc-second (20 to 30 meters depending on the latitude) grid precision.<br>-<br>Component requires that you are connected to the Internet, as it has to download the topography data.<br>It also requires MapWinGIS application to be installed.<br>Download and install either 32 bit or 64 bit (depending on your Rhino 5 version) version of MapWinGIS from here:<br>https://github.com/MapWindow/MapWinGIS/releases<br>-<br>Component mainly based on:<br>\"Mathematical cartography\", V. Jovanovic, VGI 1983.<br>\"Vincenty solutions of geodesics on the ellipsoid\" article by Chris Veness<br>https://books.google.rs/books/about/Matemati%C4%8Dka_kartografija.html?id=GcXEMgEACAAJ&redir_esc=y<br>http://www.movable-type.co.uk/scripts/latlong-vincenty.html<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/terrainGenerator.html"
    },
    {
      "name": "Terrain Shading Mask",
      "id": "TerrainShadingMask",
      "library": "Gismo",
      "category": "2 | Terrain",
      "summary": "Use this component to create a 3D Terrain shading mask for a particular location",
      "description": "Use this component to create a 3D Terrain shading mask for a particular location.<br>It's a diagram which maps the silhouette of the surrounding terrain (hills, valleys, mountains, tree tops...) in 360 degrees directions seen from above the astronomical horizon.<br>It can be used as a \"context_\" input in mountainous or higher latitude regions for any kind of sun related analysis: sunlight hours analysis, solar radiation analysis, view analysis, photovoltaics/solar water heating sunpath shading ...<br>-<br>!!! ATTENTION !!!   This component may crash Rhino 5 application due to requirement to generate large topography data! To prevent this, it is suggested to own a 64 bit version of Rhino 5 and have strong enough PC configuration. If you do not have either of these two, it is recommended to keep the maxVisibilityRadius_ value to default value of 100 to prevent the crash of Rhino.<br>Also try saving your .gh definition before running this component!<br>-<br>Component requires that you are connected to the Internet, as it has to download the topography data.<br>It also requires MapWinGIS application to be installed.<br>Download and install either 32 bit or 64 bit (depending on your Rhino 5 version) version of MapWinGIS from here:<br>https://github.com/MapWindow/MapWinGIS/releases<br>-<br>Component mainly based on:<br>\"Mathematical cartography\", V. Jovanovic, VGI 1983.<br>\"Surveying and Levelling Second Edition\", Tata McGraw-Hill Education Pvt. Ltd., 5.7 Corrections to be applied, N.N. Basak, 2004<br>\"Vincenty solutions of geodesics on the ellipsoid\" article by Chris Veness<br>https://books.google.rs/books/about/Matemati%C4%8Dka_kartografija.html?id=GcXEMgEACAAJ&redir_esc=y<br>https://books.google.rs/books?id=fIvvAwAAQBAJ&printsec=frontcover#v=onepage&q&f=false<br>http://www.movable-type.co.uk/scripts/latlong-vincenty.html<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/gismo/terrainShadingMask.html"
    },
    {
      "name": "Color Palette",
      "id": "ColorPalette",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Use this component define color palette (gradient colors) for the Gismo's \"Legend Bake Parameters\" component<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/colorPalette.html"
    },
    {
      "name": "Create Legend",
      "id": "CreateLegend",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Use this component to create a legend for particular geometry and recolor the geometry based on that legend.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/createLegend.html"
    },
    {
      "name": "Legend Bake Parameters",
      "id": "LegendBakeParameters",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Use this component to define the parameters important for legend and baking.<br>Any component which has a \"legendBakePar_\" input can be used to define these.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/gismo/legendBakeParameters.html"
    },
    {
      "name": "New Component Example",
      "id": "NewComponentExample",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "[Gismo welcomes new developers",
      "description": "[Gismo welcomes new developers. Even a single new component can benefit and make Gismo a better plugin.]<br>[New components are welcome as long as they follow the code template.]<br>[This component provides the code template for possible new Gismo component which calculates the distance between a point (\"_point\" input) and a sphere.]<br>[There will be explanations of parts of code, like how to check inputs, how to create a title, a legend... Explanations are written in square brackets. For example: [this is explanation].]<br>[Rhinoscriptsyntax is used as more friendly, but you can also write directly in RhinoCommon, if you want to. Still rhinoscriptsyntax is fine.]<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/gismo/newComponentExample.html"
    },
    {
      "name": "Rhino Boolean Union",
      "id": "RhinoBooleanUnion",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Grasshopper's \"Solid Union\" component may sometimes fail to perform boolean union of the 3d buildings coming from Gismo \"OSM shapes\" component",
      "description": "Grasshopper's \"Solid Union\" component may sometimes fail to perform boolean union of the 3d buildings coming from Gismo \"OSM shapes\" component.<br>In that case use this component, which replicated Rhino's _BooleanUnion command.<br>-<br>However, this component works much better on Rhino 5, as Rhino 5 allowed creation of soldis with non-manifold edges!<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/rhinoBooleanUnion.html"
    },
    {
      "name": "Rhino Text To Number",
      "id": "RhinoTextToNumber",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Use this component to convert Rhino text (representing number) to Grasshopper number.<br>-<br>This can be useful in creating terrain or coordinate points from text.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/rhinoTextToNumber.html"
    },
    {
      "name": "Rhino Unit To Meters",
      "id": "RhinoUnitToMeters",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "Use this component to convert values from Rhino units to meters",
      "description": "Use this component to convert values from Rhino units to meters. This can be useful for Gismo component's \"radius_\" inputs, as all of them use values in meters, regardless of what the Rhino units have been set at.<br>-<br>Provided by Gismo 0.0.3",
      "iconCss": "background: url('icons/gismo.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/rhinoUnitToMeters.html"
    },
    {
      "name": "Support Gismo",
      "id": "SupportGismo",
      "library": "Gismo",
      "category": "3 | More",
      "summary": "If you like Gismo, use this component to see in which ways you can contribute and support it.<br>-<br>Provided by Gismo 0.0.3",
      "description": null,
      "iconCss": "background: url('icons/gismo.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/gismo/supportGismo.html"
    },
    {
      "name": "Closed",
      "id": "Cls",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Test if a curve is closed or periodic.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/closed.html"
    },
    {
      "name": "Control Points",
      "id": "CP",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Extract the nurbs control points and knots of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/controlPoints.html"
    },
    {
      "name": "Control Polygon",
      "id": "CPoly",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Extract the nurbs control polygon of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/controlPolygon.html"
    },
    {
      "name": "Curvature",
      "id": "Curvature",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Evaluate the curvature of a curve at a specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curvature.html"
    },
    {
      "name": "Curvature Graph",
      "id": "CrvGraph",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Draws Rhino Curvature Graphs.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curvatureGraph.html"
    },
    {
      "name": "Curve Closest Point",
      "id": "Crv CP",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find the closest point on a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveClosestPoint.html"
    },
    {
      "name": "Curve Depth",
      "id": "Depth",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Measure the depth of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveDepth.html"
    },
    {
      "name": "Curve Domain",
      "id": "CrvDom",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Measure and set the curve domain",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveDomain.html"
    },
    {
      "name": "Curve Frame",
      "id": "Frame",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Get the curvature frame of a curve at a specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveFrame.html"
    },
    {
      "name": "Curve Middle",
      "id": "MidPt",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Get the point in the middle of a curve",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveMiddle.html"
    },
    {
      "name": "Curve Nearest Object",
      "id": "CrvNear",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find the object nearest to a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveNearestObject.html"
    },
    {
      "name": "Curve Proximity",
      "id": "CrvProx",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find the pair of closest points between two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveProximity.html"
    },
    {
      "name": "Curve Side",
      "id": "Side",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find on which side of a curve a point exists",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveSide.html"
    },
    {
      "name": "Deconstruct Arc",
      "id": "DArc",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Retrieve the base plane, radius and angle domain of an arc.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/deconstructArc.html"
    },
    {
      "name": "Deconstuct Rectangle",
      "id": "DRec",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Retrieve the base plane and side intervals of a rectangle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/deconstuctRectangle.html"
    },
    {
      "name": "Derivatives",
      "id": "CDiv",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Evaluate the derivatives of a curve at a specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/derivatives.html"
    },
    {
      "name": "Discontinuity",
      "id": "Disc",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find all discontinuities along a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/discontinuity.html"
    },
    {
      "name": "End Points",
      "id": "End",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Extract the end points of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/endPoints.html"
    },
    {
      "name": "Evaluate Curve",
      "id": "Eval",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Evaluate a curve at the specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/evaluateCurve.html"
    },
    {
      "name": "Evaluate Length",
      "id": "Eval",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Evaluate a curve at a certain factor along its length. Length factors can be supplied both in curve units and normalized units. Change the [N] parameter to toggle between the two modes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/evaluateLength.html"
    },
    {
      "name": "Extremes",
      "id": "X-tremez",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find the extremes (highest and lowest points) on a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/extremes.html"
    },
    {
      "name": "Horizontal Frame",
      "id": "HFrame",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Get a horizontally aligned frame along a curve at a specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/horizontalFrame.html"
    },
    {
      "name": "Length",
      "id": "Len",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Measure the length of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/length.html"
    },
    {
      "name": "Length Domain",
      "id": "LenD",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Measure the length of a curve subdomain.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/lengthDomain.html"
    },
    {
      "name": "Length Parameter",
      "id": "LenP",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Measure the length of a curve to and from a parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/lengthParameter.html"
    },
    {
      "name": "Perp Frame",
      "id": "PFrame",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Solve the perpendicular (zero-twisting) frame at a specified curve parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/perpFrame.html"
    },
    {
      "name": "Planar",
      "id": "Planar",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Test a curve for planarity.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/planar.html"
    },
    {
      "name": "Point In Curve",
      "id": "InCurve",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Test a point for closed curve containment.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/pointInCurve.html"
    },
    {
      "name": "Point in Curves",
      "id": "InCurves",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Test a point for multiple closed curve containment.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/pointInCurves.html"
    },
    {
      "name": "Polygon Center",
      "id": "PCen",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Find the center point (average) for a polyline.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polygonCenter.html"
    },
    {
      "name": "Segment Lengths",
      "id": "LenSeg",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Finds the shortest and longest segments of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/segmentLengths.html"
    },
    {
      "name": "Torsion",
      "id": "Torsion",
      "library": "Grasshopper Curve",
      "category": "Analysis",
      "summary": "Evaluate the torsion of a curve at a specified parameter.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/torsion.html"
    },
    {
      "name": "Contour",
      "id": "Contour",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Create a set of Curve contours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/contour.html"
    },
    {
      "name": "Contour (ex)",
      "id": "Contour",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Create a set of Curve contours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/contourex.html"
    },
    {
      "name": "Curve Frames",
      "id": "Frames",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Generate a number of equally spaced curve frames.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveFrames.html"
    },
    {
      "name": "Dash Pattern",
      "id": "Dash",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Convert a curve to a dash pattern.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/dashPattern.html"
    },
    {
      "name": "Divide By Deviation",
      "id": "DivideDev",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Divide a curve into segments with equal deviation",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/divideByDeviation.html"
    },
    {
      "name": "Divide Curve",
      "id": "Divide",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Divide a curve into equal length segments",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/divideCurve.html"
    },
    {
      "name": "Divide Distance",
      "id": "DivDist",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Divide a curve with a preset distance between points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/divideDistance.html"
    },
    {
      "name": "Divide Length",
      "id": "DivLength",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Divide a curve into segments with a preset length",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/divideLength.html"
    },
    {
      "name": "Horizontal Frames",
      "id": "HFrames",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Generate a number of equally spaced, horizontally aligned curve frames.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/horizontalFrames.html"
    },
    {
      "name": "Perp Frames",
      "id": "PFrames",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Generate a number of equally spaced, perpendicular frames along a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/perpFrames.html"
    },
    {
      "name": "Shatter",
      "id": "Shatter",
      "library": "Grasshopper Curve",
      "category": "Division",
      "summary": "Shatter a curve into segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/shatter.html"
    },
    {
      "name": "Arc",
      "id": "Arc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create an arc defined by base plane, radius and angle domain.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/arc.html"
    },
    {
      "name": "Arc 3Pt",
      "id": "Arc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create an arc through three points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/arc3Pt.html"
    },
    {
      "name": "Arc SED",
      "id": "Arc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create an arc defined by start point, end point and a tangent vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/arcSED.html"
    },
    {
      "name": "BiArc",
      "id": "BiArc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a bi-arc based on endpoints and tangents.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/biArc.html"
    },
    {
      "name": "Circle",
      "id": "Cir",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a circle defined by base plane and radius.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circle.html"
    },
    {
      "name": "Circle 3Pt",
      "id": "Circle",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a circle defined by three points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circle3Pt.html"
    },
    {
      "name": "Circle CNR",
      "id": "Circle",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a circle defined by center, normal and radius.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circleCNR.html"
    },
    {
      "name": "Circle Fit",
      "id": "FCircle",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Fit a circle to a collection of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circleFit.html"
    },
    {
      "name": "Circle TanTan",
      "id": "CircleTT",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a circle tangent to two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circleTanTan.html"
    },
    {
      "name": "Circle TanTanTan",
      "id": "CircleTTT",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a circle tangent to three curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/circleTanTanTan.html"
    },
    {
      "name": "Ellipse",
      "id": "Ellipse",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create an ellipse defined by base plane and two radii.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/ellipse.html"
    },
    {
      "name": "Fit Line",
      "id": "FLine",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Fit a line to a collection of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/fitLine.html"
    },
    {
      "name": "InCircle",
      "id": "InCircle",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create the incircle of a triangle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/inCircle.html"
    },
    {
      "name": "InEllipse",
      "id": "InEllipse",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create the inscribed ellipse (Steiner ellipse) of a triangle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/inEllipse.html"
    },
    {
      "name": "Line",
      "id": "Ln",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a line between two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/line.html"
    },
    {
      "name": "Line 2Plane",
      "id": "Ln2Pl",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a line between two planes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/line2Plane.html"
    },
    {
      "name": "Line 4Pt",
      "id": "Ln4Pt",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a line from four points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/line4Pt.html"
    },
    {
      "name": "Line SDL",
      "id": "Line",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a line segment defined by start point, tangent and length.}",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/lineSDL.html"
    },
    {
      "name": "Modified Arc",
      "id": "ModArc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create an arc based on another arc.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/modifiedArc.html"
    },
    {
      "name": "Polygon",
      "id": "Polygon",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a polygon with optional round edges.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polygon.html"
    },
    {
      "name": "Polygon Edge",
      "id": "PolEdge",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a polygon from a single edge.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polygonEdge.html"
    },
    {
      "name": "Rectangle",
      "id": "Rectangle",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a rectangle on a plane",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/rectangle.html"
    },
    {
      "name": "Rectangle 2Pt",
      "id": "Rec 2Pt",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a rectangle from a base plane and two points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/rectangle2Pt.html"
    },
    {
      "name": "Rectangle 3Pt",
      "id": "Rec 3Pt",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create a rectangle from three points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/rectangle3Pt.html"
    },
    {
      "name": "Tangent Arcs",
      "id": "TArc",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create tangent arcs between circles",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tangentArcs.html"
    },
    {
      "name": "Tangent Lines",
      "id": "Tan",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create tangent lines between a point and a circle",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tangentLines.html"
    },
    {
      "name": "Tangent Lines (Ex)",
      "id": "TanEx",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create external tangent lines between circles",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tangentLinesEx.html"
    },
    {
      "name": "Tangent Lines (In)",
      "id": "TanIn",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Create internal tangent lines between circles",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tangentLinesIn.html"
    },
    {
      "name": "TwoByFourJam",
      "id": "2x4 Jam",
      "library": "Grasshopper Curve",
      "category": "Primitive",
      "summary": "Jam a two-by-four into a crooked room",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/twoByFourJam.html"
    },
    {
      "name": "Bezier Span",
      "id": "BzSpan",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a bezier span from endpoints and tangents.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/bezierSpan.html"
    },
    {
      "name": "Blend Curve",
      "id": "BlendC",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a blend curve between two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/blendCurve.html"
    },
    {
      "name": "Blend Curve Pt",
      "id": "BlendCPt",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a blend curve between two curves that intersects a point.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/blendCurvePt.html"
    },
    {
      "name": "Catenary",
      "id": "Cat",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a catenary chain between two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/catenary.html"
    },
    {
      "name": "Catenary Ex",
      "id": "CatEx",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a variable catenary chain between two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/catenaryEx.html"
    },
    {
      "name": "Connect Curves",
      "id": "Connect",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Connect a sequence of curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/connectCurves.html"
    },
    {
      "name": "Curve On Surface",
      "id": "CrvSrf",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create an interpolated curve through a set of points on a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveOnSurface.html"
    },
    {
      "name": "Geodesic",
      "id": "Geodesic",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a surface geodesic between two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/geodesic.html"
    },
    {
      "name": "Interpolate",
      "id": "IntCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create an interpolated curve through a set of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/interpolate.html"
    },
    {
      "name": "Interpolate (t)",
      "id": "IntCrv(t)",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create an interpolated curve through a set of points with tangents.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/interpolatet.html"
    },
    {
      "name": "Iso Curve",
      "id": "Iso",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct {uv} isocurves on a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/isoCurve.html"
    },
    {
      "name": "Kinky Curve",
      "id": "KinkCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct an interpolated curve through a set of points with a kink angle threshold.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/kinkyCurve.html"
    },
    {
      "name": "Knot Vector",
      "id": "Knots",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a nurbs curve knot vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/knotVector.html"
    },
    {
      "name": "Match Curve",
      "id": "MatchCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Match two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/matchCurve.html"
    },
    {
      "name": "Nurbs Curve",
      "id": "Nurbs",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a nurbs curve from control points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/nurbsCurve.html"
    },
    {
      "name": "Nurbs Curve PWK",
      "id": "NurbCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a nurbs curve from control points, weights and knots.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/nurbsCurvePWK.html"
    },
    {
      "name": "PolyArc",
      "id": "PArc",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a polycurve consisting of arc and line segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polyArc.html"
    },
    {
      "name": "PolyLine",
      "id": "PLine",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a polyline connecting a number of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polyLine.html"
    },
    {
      "name": "Sub Curve",
      "id": "SubCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Construct a curve from the sub-domain of a base curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/subCurve.html"
    },
    {
      "name": "Swing Arc",
      "id": "Swing",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a polycurve consisting of arcs defined by center points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/swingArc.html"
    },
    {
      "name": "Tangent Curve",
      "id": "TanCurve",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Create a curve through a set of points with tangents.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tangentCurve.html"
    },
    {
      "name": "Tween Curve",
      "id": "TweenCrv",
      "library": "Grasshopper Curve",
      "category": "Spline",
      "summary": "Tween between two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/tweenCurve.html"
    },
    {
      "name": "Curve To Polyline",
      "id": "ToPoly",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Convert a curve to a polyline.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/curveToPolyline.html"
    },
    {
      "name": "Explode",
      "id": "Explode",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Explode a curve into smaller segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/explode.html"
    },
    {
      "name": "Extend Curve",
      "id": "Ext",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Extend a curve by a specified distance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/extendCurve.html"
    },
    {
      "name": "Fillet",
      "id": "Fillet",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Fillet the sharp corners of a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/fillet.html"
    },
    {
      "name": "Fillet Distance",
      "id": "Fillet",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Fillet the sharp corners of a curve by distance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/filletDistance.html"
    },
    {
      "name": "Fit Curve",
      "id": "Fit",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Fit a curve along another curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/fitCurve.html"
    },
    {
      "name": "Flip Curve",
      "id": "Flip",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Flip a curve using an optional guide curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/flipCurve.html"
    },
    {
      "name": "Join Curves",
      "id": "Join",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Join as many curves as possible",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/joinCurves.html"
    },
    {
      "name": "Offset Curve",
      "id": "Offset",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Offset a curve with a specified distance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/offsetCurve.html"
    },
    {
      "name": "Offset Curve Loose",
      "id": "Offset (L)",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Offset the control-points of a curve with a specified distance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/offsetCurveLoose.html"
    },
    {
      "name": "Offset Loose 3D",
      "id": "Offset (3D)",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Offset the control-points of a curve with a specified distance in 3D.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/offsetLoose3D.html"
    },
    {
      "name": "Offset on Srf",
      "id": "OffsetS",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Offset a curve on a surface with a specified distance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/offsetOnSrf.html"
    },
    {
      "name": "Offset Polyline",
      "id": "OP",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Offset a 2D polyline",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/offsetPolyline.html"
    },
    {
      "name": "Polyline Collapse",
      "id": "PCol",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Collapse short segments in a polyline curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/polylineCollapse.html"
    },
    {
      "name": "Project",
      "id": "Project",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Project a curve onto a Brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/project.html"
    },
    {
      "name": "Pull Curve",
      "id": "Pull",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Pull a curve onto a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/pullCurve.html"
    },
    {
      "name": "Rebuild Curve",
      "id": "ReB",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Rebuild a curve with a specific number of control-points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/rebuildCurve.html"
    },
    {
      "name": "Reduce",
      "id": "RedPLine",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Reduce a polyline by removing least significant vertices.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/reduce.html"
    },
    {
      "name": "Seam",
      "id": "Seam",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Adjust the seam of a closed curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/seam.html"
    },
    {
      "name": "Simplify Curve",
      "id": "Simplify",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Simplify a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/simplifyCurve.html"
    },
    {
      "name": "Smooth Polyline",
      "id": "SmoothPLine",
      "library": "Grasshopper Curve",
      "category": "Util",
      "summary": "Smooth the vertices of a polyline curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperCurve.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppercurve/smoothPolyline.html"
    },
    {
      "name": "Colour CMYK",
      "id": "CMYK",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {CMYK} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourCMYK.html"
    },
    {
      "name": "Colour HSL",
      "id": "HSL",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {HSL} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourHSL.html"
    },
    {
      "name": "Colour HSV",
      "id": "HSV",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {HSV} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourHSV.html"
    },
    {
      "name": "Colour L*ab",
      "id": "L*AB",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {CIE L*ab} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourLab.html"
    },
    {
      "name": "Colour LCH",
      "id": "LCH",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {CIE LCH} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourLCH.html"
    },
    {
      "name": "Colour RGB",
      "id": "RGB",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from {RGB} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourRGB.html"
    },
    {
      "name": "Colour RGB (f)",
      "id": "fRGB",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {RGB} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourRGBf.html"
    },
    {
      "name": "Colour XYZ",
      "id": "XYZ",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Create a colour from floating point {XYZ} channels (CIE 1931 spec).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/colourXYZ.html"
    },
    {
      "name": "Split AHSL",
      "id": "AHSL",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Split a colour into floating point {AHSL} channels",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/splitAHSL.html"
    },
    {
      "name": "Split AHSV",
      "id": "AHSV",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Split a colour into floating point {AHSV} channels",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/splitAHSV.html"
    },
    {
      "name": "Split ARGB",
      "id": "ARGB",
      "library": "Grasshopper Display",
      "category": "Colour",
      "summary": "Split a colour into floating point {ARGB} channels.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/splitARGB.html"
    },
    {
      "name": "Aligned Dimension",
      "id": "AlignDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a distance annotation between two points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/alignedDimension.html"
    },
    {
      "name": "Angular Dimension",
      "id": "AngleDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create an angle annotation between points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/angularDimension.html"
    },
    {
      "name": "Angular Dimensions (Mesh)",
      "id": "AngleDimMesh",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create angle annotations for all mesh corners.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/angularDimensionsMesh.html"
    },
    {
      "name": "Arc Dimension",
      "id": "ArcDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create an angle annotation based on an arc.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/arcDimension.html"
    },
    {
      "name": "Circular Dimension",
      "id": "CircleDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create an angle annotation projected to a circle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/circularDimension.html"
    },
    {
      "name": "Line Dimension",
      "id": "LineDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a distance annotation along a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/lineDimension.html"
    },
    {
      "name": "Linear Dimension",
      "id": "LinearDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a distance annotation between points, projected to a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/linearDimension.html"
    },
    {
      "name": "Make2D",
      "id": "Make2D",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a hidden line drawing from geometry",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/make2D.html"
    },
    {
      "name": "Make2D Parallel View",
      "id": "M2D Parallel",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Define a parallel view for a Make2D solution",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/make2DParallelView.html"
    },
    {
      "name": "Make2D Perspective View",
      "id": "M2D Perspective",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Define a perspective view for a Make2D solution",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/make2DPerspectiveView.html"
    },
    {
      "name": "Make2D Rhino View",
      "id": "M2D Rhino",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Import a Rhino view for a Make2D solution",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/make2DRhinoView.html"
    },
    {
      "name": "Marker Dimension",
      "id": "MarkDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a text annotation at a point",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/markerDimension.html"
    },
    {
      "name": "Serial Dimension",
      "id": "SerialDim",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Create a distance annotation between multiple points, projected to a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/serialDimension.html"
    },
    {
      "name": "Text Tag",
      "id": "Tag",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Represents a list of text tags in a Rhino viewport",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/textTag.html"
    },
    {
      "name": "Text Tag 3D",
      "id": "Tag",
      "library": "Grasshopper Display",
      "category": "Dimensions",
      "summary": "Represents a list of 3D text tags in a Rhino viewport",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/textTag3D.html"
    },
    {
      "name": "Legend",
      "id": "Legend",
      "library": "Grasshopper Display",
      "category": "Graphs",
      "summary": "Display a legend consisting of Tags and Colours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/legend.html"
    },
    {
      "name": "Cloud Display",
      "id": "Cloud",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Draw a collection of points as a fuzzy cloud",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/cloudDisplay.html"
    },
    {
      "name": "Create Material",
      "id": "Material",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Create an OpenGL material.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/createMaterial.html"
    },
    {
      "name": "Dot Display",
      "id": "Dots",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Draw a collection of coloured dots",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/dotDisplay.html"
    },
    {
      "name": "Symbol (Advanced)",
      "id": "SymAdv",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Advanced symbol display properties",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/symbolAdvanced.html"
    },
    {
      "name": "Symbol (Simple)",
      "id": "SymSim",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Simple symbol display properties",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/symbolSimple.html"
    },
    {
      "name": "Symbol Display",
      "id": "Symbol",
      "library": "Grasshopper Display",
      "category": "Preview",
      "summary": "Display symbols",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/symbolDisplay.html"
    },
    {
      "name": "Test Crash",
      "id": "Test Crash",
      "library": "Grasshopper Display",
      "category": "Test",
      "summary": "Test crashing of GH",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/testCrash.html"
    },
    {
      "name": "Point List",
      "id": "Points",
      "library": "Grasshopper Display",
      "category": "Vector",
      "summary": "Displays details about lists of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/pointList.html"
    },
    {
      "name": "Point Order",
      "id": "Order",
      "library": "Grasshopper Display",
      "category": "Vector",
      "summary": "Displays the order of a list of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/pointOrder.html"
    },
    {
      "name": "Vector Display",
      "id": "VDis",
      "library": "Grasshopper Display",
      "category": "Vector",
      "summary": "Preview vectors in the viewport",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/vectorDisplay.html"
    },
    {
      "name": "Vector Display Ex",
      "id": "VDisEx",
      "library": "Grasshopper Display",
      "category": "Vector",
      "summary": "Preview vectors in the viewport",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/vectorDisplayEx.html"
    },
    {
      "name": "Viewport Display",
      "id": "Viewport Display",
      "library": "Grasshopper Display",
      "category": "Viewport",
      "summary": "Display viewport on canvas",
      "description": null,
      "iconCss": "background: url('icons/grasshopperDisplay.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperdisplay/viewportDisplay.html"
    },
    {
      "name": "Brep | Line",
      "id": "BLX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a Brep and a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/brepLine.html"
    },
    {
      "name": "Brep | Plane",
      "id": "Sec",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a Brep and a plane (otherwise known as section).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/brepPlane.html"
    },
    {
      "name": "Contour",
      "id": "Contour",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Create a set of Brep or Mesh contours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/contour.html"
    },
    {
      "name": "Contour (ex)",
      "id": "Contour",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Create a set of Brep or Mesh contours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/contourex.html"
    },
    {
      "name": "Curve | Line",
      "id": "CLX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a curve and a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/curveLine.html"
    },
    {
      "name": "Curve | Plane",
      "id": "PCX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a curve and a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/curvePlane.html"
    },
    {
      "name": "IsoVist",
      "id": "IVist",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Compute an isovist sampling at a location",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/isoVist.html"
    },
    {
      "name": "IsoVist Ray",
      "id": "IVRay",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Compute a single isovist sample at a location",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/isoVistRay.html"
    },
    {
      "name": "Line | Line",
      "id": "LLX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for two lines.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/lineLine.html"
    },
    {
      "name": "Line | Plane",
      "id": "PLX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection event for a line and a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/linePlane.html"
    },
    {
      "name": "Mesh | Plane",
      "id": "Sec",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a Mesh and a Plane (otherwise known as section).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshPlane.html"
    },
    {
      "name": "Mesh | Ray",
      "id": "MeshRay",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Intersect a mesh with a semi-infinite ray",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshRay.html"
    },
    {
      "name": "Plane | Plane",
      "id": "PPX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve the intersection event of two planes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/planePlane.html"
    },
    {
      "name": "Plane | Plane | Plane",
      "id": "3PX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve the intersection events of three planes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/planePlanePlane.html"
    },
    {
      "name": "Plane Region",
      "id": "PlReg",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Create a bounded region from intersecting planes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/planeRegion.html"
    },
    {
      "name": "Surface | Line",
      "id": "SLX",
      "library": "Grasshopper Intersect",
      "category": "Mathematical",
      "summary": "Solve intersection events for a surface and a line.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/surfaceLine.html"
    },
    {
      "name": "Brep | Brep",
      "id": "BBX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve intersection events for two Breps.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/brepBrep.html"
    },
    {
      "name": "Brep | Curve",
      "id": "BCX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve intersection events for a Brep and a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/brepCurve.html"
    },
    {
      "name": "Collision Many|Many",
      "id": "ColMM",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Test for many|many collision between objects",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/collisionManyMany.html"
    },
    {
      "name": "Collision One|Many",
      "id": "ColOM",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Test for one|many collision between objects",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/collisionOneMany.html"
    },
    {
      "name": "Curve | Curve",
      "id": "CCX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve intersection events for two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/curveCurve.html"
    },
    {
      "name": "Curve | Self",
      "id": "CX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve all self intersection events for a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/curveSelf.html"
    },
    {
      "name": "Mesh | Curve",
      "id": "MCX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Mesh Curve intersection",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshCurve.html"
    },
    {
      "name": "Mesh | Mesh",
      "id": "MMX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Mesh Mesh intersection",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshMesh.html"
    },
    {
      "name": "Multiple Curves",
      "id": "MCX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve intersection events for multiple curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/multipleCurves.html"
    },
    {
      "name": "Surface | Curve",
      "id": "SCX",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Solve intersection events for a surface and a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/surfaceCurve.html"
    },
    {
      "name": "Surface Split",
      "id": "SrfSplit",
      "library": "Grasshopper Intersect",
      "category": "Physical",
      "summary": "Split a surface with a bunch of curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/surfaceSplit.html"
    },
    {
      "name": "Split with Brep",
      "id": "Split",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Split a curve with a Brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/splitWithBrep.html"
    },
    {
      "name": "Split with Breps",
      "id": "Split",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Split a curve with multiple Breps.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/splitWithBreps.html"
    },
    {
      "name": "Trim with Brep",
      "id": "Trim",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Trim a curve with a Brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/trimWithBrep.html"
    },
    {
      "name": "Trim with Breps",
      "id": "Trim",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Trim a curve with multiple Breps.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/trimWithBreps.html"
    },
    {
      "name": "Trim with Region",
      "id": "Trim",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Trim a curve with a region.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/trimWithRegion.html"
    },
    {
      "name": "Trim with Regions",
      "id": "Trim",
      "library": "Grasshopper Intersect",
      "category": "Region",
      "summary": "Trim a curve with multiple regions.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/trimWithRegions.html"
    },
    {
      "name": "Boundary Volume",
      "id": "BVol",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Create a closed polysurface from boundary surfaces",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/boundaryVolume.html"
    },
    {
      "name": "Box Slits",
      "id": "Slits",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Add slits to a collection of intersecting boxes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/boxSlits.html"
    },
    {
      "name": "Mesh Difference",
      "id": "MDif",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid difference on two sets of meshes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshDifference.html"
    },
    {
      "name": "Mesh Intersection",
      "id": "MInt",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid intersection on a set of meshes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshIntersection.html"
    },
    {
      "name": "Mesh Split",
      "id": "MSplit",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Mesh Mesh split",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshSplit.html"
    },
    {
      "name": "Mesh Union",
      "id": "MUnion",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid union on a set of meshes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/meshUnion.html"
    },
    {
      "name": "Region Difference",
      "id": "RDiff",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Difference between two sets of planar closed curves (regions)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/regionDifference.html"
    },
    {
      "name": "Region Intersection",
      "id": "RInt",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Intersection between two sets of planar closed curves (regions)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/regionIntersection.html"
    },
    {
      "name": "Region Slits",
      "id": "RSlits",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Add slits to a collection of intersecting planar regions",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/regionSlits.html"
    },
    {
      "name": "Region Union",
      "id": "RUnion",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Union of a set of planar closed curves (regions)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/regionUnion.html"
    },
    {
      "name": "Solid Difference",
      "id": "SDiff",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid difference on two Brep sets.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/solidDifference.html"
    },
    {
      "name": "Solid Intersection",
      "id": "SInt",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid intersection on two Brep sets.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/solidIntersection.html"
    },
    {
      "name": "Solid Union",
      "id": "SUnion",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Perform a solid union on a set of Breps.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/solidUnion.html"
    },
    {
      "name": "Split Brep",
      "id": "Split",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Split one brep with another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/splitBrep.html"
    },
    {
      "name": "Split Brep Multiple",
      "id": "SplitMul",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Split one brep with a bunch of others.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/splitBrepMultiple.html"
    },
    {
      "name": "Trim Solid",
      "id": "Trim",
      "library": "Grasshopper Intersect",
      "category": "Shape",
      "summary": "Cut holes into a shape with a set of solid cutters.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperIntersect.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperintersect/trimSolid.html"
    },
    {
      "name": "Bounds",
      "id": "Bnd",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Create a numeric domain which encompasses a list of numbers.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/bounds.html"
    },
    {
      "name": "Bounds 2D",
      "id": "Bnd",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Create a numeric two-dimensional domain which encompasses a list of coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/bounds2D.html"
    },
    {
      "name": "Consecutive Domains",
      "id": "Consec",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Create consecutive domains from a list of numbers",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/consecutiveDomains.html"
    },
    {
      "name": "Construct Domain",
      "id": "Dom",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Create a numeric domain from two numeric extremes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructDomain.html"
    },
    {
      "name": "Construct Domain²",
      "id": "Dom²",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Create a two-dimensional domain from two simple domains.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructDomain.html"
    },
    {
      "name": "Deconstruct Domain",
      "id": "DeDomain",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Deconstruct a numeric domain into its component parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/deconstructDomain.html"
    },
    {
      "name": "Deconstruct Domain²",
      "id": "DeDom2",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Deconstruct a two-dimensional domain into its component parts",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/deconstructDomain.html"
    },
    {
      "name": "Divide Domain",
      "id": "Div",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Divide a domain into equal segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/divideDomain.html"
    },
    {
      "name": "Divide Domain²",
      "id": "Divide",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Divides a two-dimensional domain into equal segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/divideDomain.html"
    },
    {
      "name": "Find Domain",
      "id": "FDom",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Find the first domain that contains a specific value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/findDomain.html"
    },
    {
      "name": "Includes",
      "id": "Inc",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Test a numeric value to see if it is included in the domain",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/includes.html"
    },
    {
      "name": "Remap Numbers",
      "id": "ReMap",
      "library": "Grasshopper Maths",
      "category": "Domain",
      "summary": "Remap numbers into a new numeric domain",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/remapNumbers.html"
    },
    {
      "name": "Construct Matrix",
      "id": "Matrix",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Construct a matrix from initial values",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructMatrix.html"
    },
    {
      "name": "Deconstruct Matrix",
      "id": "DeMatrix",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Deconstruct a matrix into its component parts",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/deconstructMatrix.html"
    },
    {
      "name": "Invert Matrix",
      "id": "MInvert",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Invert a matrix",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/invertMatrix.html"
    },
    {
      "name": "Swap Columns",
      "id": "SwapC",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Swap two columns in a matrix",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/swapColumns.html"
    },
    {
      "name": "Swap Rows",
      "id": "SwapR",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Swap two rows in a matrix",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/swapRows.html"
    },
    {
      "name": "Transpose Matrix",
      "id": "Transpose",
      "library": "Grasshopper Maths",
      "category": "Matrix",
      "summary": "Transpose a matrix (swap rows and columns)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/transposeMatrix.html"
    },
    {
      "name": "Absolute",
      "id": "Abs",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Compute the absolute of a value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/absolute.html"
    },
    {
      "name": "Addition",
      "id": "A+B",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Mathematical addition",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/addition.html"
    },
    {
      "name": "Division",
      "id": "A/B",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Mathematical division",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/division.html"
    },
    {
      "name": "Equality",
      "id": "Equals",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Test for (in)equality of two numbers",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/equality.html"
    },
    {
      "name": "Factorial",
      "id": "Fac",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Returns the factorial of an integer.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/factorial.html"
    },
    {
      "name": "Gate And",
      "id": "And",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean conjunction (AND gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateAnd.html"
    },
    {
      "name": "Gate Majority",
      "id": "Vote",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Calculates the majority vote among three booleans.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateMajority.html"
    },
    {
      "name": "Gate Nand",
      "id": "Nand",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean alternative denial (NAND gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateNand.html"
    },
    {
      "name": "Gate Nor",
      "id": "Nor",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean joint denial (NOR gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateNor.html"
    },
    {
      "name": "Gate Not",
      "id": "Not",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean negation (NOT gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateNot.html"
    },
    {
      "name": "Gate Or",
      "id": "Or",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean disjunction (OR gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateOr.html"
    },
    {
      "name": "Gate Xnor",
      "id": "Xnor",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean biconditional (XNOR gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateXnor.html"
    },
    {
      "name": "Gate Xor",
      "id": "Xor",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform boolean exclusive disjunction (XOR gate).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/gateXor.html"
    },
    {
      "name": "Integer Division",
      "id": "A\\B",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Mathematical integer division",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/integerDivision.html"
    },
    {
      "name": "Larger Than",
      "id": "Larger",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Larger than (or equal to)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/largerThan.html"
    },
    {
      "name": "Mass Addition",
      "id": "MA",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform mass addition of a list of items",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/massAddition.html"
    },
    {
      "name": "Mass Multiplication",
      "id": "MM",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform mass multiplication of a list of items",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/massMultiplication.html"
    },
    {
      "name": "Modulus",
      "id": "Mod",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Divides two numbers and returns only the remainder.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/modulus.html"
    },
    {
      "name": "Multiplication",
      "id": "A×B",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Mathematical multiplication",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/multiplication.html"
    },
    {
      "name": "Negative",
      "id": "Neg",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Compute the negative of a value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/negative.html"
    },
    {
      "name": "Power",
      "id": "Pow",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Raise a value to a power.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/power.html"
    },
    {
      "name": "Relative Differences",
      "id": "RelDif",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Compute relative differences for a list of data",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/relativeDifferences.html"
    },
    {
      "name": "Series Addition",
      "id": "SA",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Perform serial addition until a goal has been reached",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/seriesAddition.html"
    },
    {
      "name": "Similarity",
      "id": "Similar",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Test for similarity of two numbers",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/similarity.html"
    },
    {
      "name": "Smaller Than",
      "id": "Smaller",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Smaller than (or equal to)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/smallerThan.html"
    },
    {
      "name": "Subtraction",
      "id": "A-B",
      "library": "Grasshopper Maths",
      "category": "Operators",
      "summary": "Mathematical subtraction",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/subtraction.html"
    },
    {
      "name": "Cube",
      "id": "Cube",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute the cube of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/cube.html"
    },
    {
      "name": "Cube Root",
      "id": "Cbrt",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute the cube root of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/cubeRoot.html"
    },
    {
      "name": "Log N",
      "id": "LogN",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Return the N-base logarithm of a number.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/logN.html"
    },
    {
      "name": "Logarithm",
      "id": "Log",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute the Base-10 logarithm of a value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/logarithm.html"
    },
    {
      "name": "One Over X",
      "id": "1/x",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute one over x.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/oneOverX.html"
    },
    {
      "name": "Power of 10",
      "id": "10º",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Raise 10 to the power of N.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/powerOf10.html"
    },
    {
      "name": "Power of 2",
      "id": "2º",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Raise 2 to the power of N.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/powerOf2.html"
    },
    {
      "name": "Power of E",
      "id": "Eº",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Raise E to the power of N.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/powerOfE.html"
    },
    {
      "name": "Square",
      "id": "Sqr",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute the square of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/square.html"
    },
    {
      "name": "Square Root",
      "id": "Sqrt",
      "library": "Grasshopper Maths",
      "category": "Polynomials",
      "summary": "Compute the square root of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/squareRoot.html"
    },
    {
      "name": "C# Script",
      "id": "C#",
      "library": "Grasshopper Maths",
      "category": "Script",
      "summary": "A C#.NET scriptable component",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/cScript.html"
    },
    {
      "name": "Evaluate",
      "id": "Eval",
      "library": "Grasshopper Maths",
      "category": "Script",
      "summary": "Evaluate an expression with a flexible number of variables.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/evaluate.html"
    },
    {
      "name": "Expression",
      "id": "Expression",
      "library": "Grasshopper Maths",
      "category": "Script",
      "summary": "Evaluate an expression",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/expression.html"
    },
    {
      "name": "GhPython Script",
      "id": "Python",
      "library": "Grasshopper Maths",
      "category": "Script",
      "summary": "GhPython provides a Python script component",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/ghPythonScript.html"
    },
    {
      "name": "VB Script",
      "id": "VB",
      "library": "Grasshopper Maths",
      "category": "Script",
      "summary": "A VB.NET scriptable component",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/vBScript.html"
    },
    {
      "name": "Combine Date & Time",
      "id": "CDate",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Combine a pure date and a pure time into a single date",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/combineDateTime.html"
    },
    {
      "name": "Construct Date",
      "id": "Date",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Construct a date and time instance.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructDate.html"
    },
    {
      "name": "Construct Exotic Date",
      "id": "DateEx",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Construct a date using a specific calendar",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructExoticDate.html"
    },
    {
      "name": "Construct Smooth Time",
      "id": "SmTime",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Construct a time instance from smooth components",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructSmoothTime.html"
    },
    {
      "name": "Construct Time",
      "id": "Time",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Construct a time instance",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/constructTime.html"
    },
    {
      "name": "Date Range",
      "id": "RDate",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Create a range of successive dates or times",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/dateRange.html"
    },
    {
      "name": "Deconstruct Date",
      "id": "DDate",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Deconstruct a date into years, months, days, hours, minutes and seconds",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/deconstructDate.html"
    },
    {
      "name": "Interpolate Date",
      "id": "IntDate",
      "library": "Grasshopper Maths",
      "category": "Time",
      "summary": "Interpolate between two dates or times.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/interpolateDate.html"
    },
    {
      "name": "ArcCosine",
      "id": "ACos",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the angle whose cosine is the specified value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/arcCosine.html"
    },
    {
      "name": "ArcSine",
      "id": "ASin",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the angle whose sine is the specified value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/arcSine.html"
    },
    {
      "name": "ArcTangent",
      "id": "ATan",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the angle whose tangent is the specified value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/arcTangent.html"
    },
    {
      "name": "Centroid",
      "id": "Centroid",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Generate the triangle centroid from medians.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/centroid.html"
    },
    {
      "name": "Circumcentre",
      "id": "CCentre",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Generate the triangle circumcentre from perpendicular bisectors.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/circumcentre.html"
    },
    {
      "name": "CoSecant",
      "id": "Csc",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the co-secant (reciprocal of the Sine) of an angle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/coSecant.html"
    },
    {
      "name": "Cosine",
      "id": "Cos",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the cosine of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/cosine.html"
    },
    {
      "name": "CoTangent",
      "id": "Cot",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the co-tangent (reciprocal of the Tangent) of an angle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/coTangent.html"
    },
    {
      "name": "Degrees",
      "id": "Deg",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Convert an angle specified in radians to degrees",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/degrees.html"
    },
    {
      "name": "Incentre",
      "id": "ICentre",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Generate the triangle incentre from angle bisectors.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/incentre.html"
    },
    {
      "name": "Orthocentre",
      "id": "OCentre",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Generate the triangle orthocentre from altitudes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/orthocentre.html"
    },
    {
      "name": "Radians",
      "id": "Rad",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Convert an angle specified in degrees to radians",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/radians.html"
    },
    {
      "name": "Right Trigonometry",
      "id": "RTrig",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Right triangle trigonometry",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/rightTrigonometry.html"
    },
    {
      "name": "Secant",
      "id": "Sec",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the secant (reciprocal of the Cosine) of an angle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/secant.html"
    },
    {
      "name": "Sinc",
      "id": "Sinc",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the sinc (Sinus Cardinalis) of a value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/sinc.html"
    },
    {
      "name": "Sine",
      "id": "Sin",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the sine of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/sine.html"
    },
    {
      "name": "Tangent",
      "id": "Tan",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Compute the tangent of a value",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/tangent.html"
    },
    {
      "name": "Triangle Trigonometry",
      "id": "Trig",
      "library": "Grasshopper Maths",
      "category": "Trig",
      "summary": "Generic triangle trigonometry",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/triangleTrigonometry.html"
    },
    {
      "name": "Average",
      "id": "Avr",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Solve the arithmetic average for a set of items",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/average.html"
    },
    {
      "name": "Blur Numbers",
      "id": "NBlur",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Blur a list of numbers by averaging neighbours",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/blurNumbers.html"
    },
    {
      "name": "Complex Argument",
      "id": "Arg",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Get the argument of a Complex number",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/complexArgument.html"
    },
    {
      "name": "Complex Components",
      "id": "Complex",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Extract the Real and Imaginary components from a complex number",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/complexComponents.html"
    },
    {
      "name": "Complex Conjugate",
      "id": "z*",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Create the conjugate of a Complex number",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/complexConjugate.html"
    },
    {
      "name": "Complex Modulus",
      "id": "CMod",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Get the modulus of a Complex number",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/complexModulus.html"
    },
    {
      "name": "Create Complex",
      "id": "Complex",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Create a complex number from a Real and an Imaginary component",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/createComplex.html"
    },
    {
      "name": "Epsilon",
      "id": "Eps",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Returns a factor of double precision floating point epsilon.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/epsilon.html"
    },
    {
      "name": "Extremes",
      "id": "Extrz",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Find the extremes in a list of values",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/extremes.html"
    },
    {
      "name": "Golden Ratio",
      "id": "Phi",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Returns a factor of the golden ratio (Phi).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/goldenRatio.html"
    },
    {
      "name": "Interpolate data",
      "id": "Interp",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Interpolate a collection of data.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/interpolateData.html"
    },
    {
      "name": "Maximum",
      "id": "Max",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Return the greater of two items.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/maximum.html"
    },
    {
      "name": "Minimum",
      "id": "Min",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Return the lesser of two items.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/minimum.html"
    },
    {
      "name": "Natural logarithm",
      "id": "E",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Returns a factor of the natural number (e).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/naturalLogarithm.html"
    },
    {
      "name": "Pi",
      "id": "Pi",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Returns a factor of Pi.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/pi.html"
    },
    {
      "name": "Round",
      "id": "Round",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Round a floating point value.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/round.html"
    },
    {
      "name": "Smooth Numbers",
      "id": "Smooth",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Smooth out changing numbers over time",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/smoothNumbers.html"
    },
    {
      "name": "Truncate",
      "id": "Trunc",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Perform truncation of numerical extremes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/truncate.html"
    },
    {
      "name": "Weighted Average",
      "id": "Wav",
      "library": "Grasshopper Maths",
      "category": "Util",
      "summary": "Solve the arithmetic weighted average for a set of items",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMaths.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppermaths/weightedAverage.html"
    },
    {
      "name": "Deconstruct Face",
      "id": "DeFace",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Deconstruct a mesh face into its four corner indices.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/deconstructFace.html"
    },
    {
      "name": "Deconstruct Mesh",
      "id": "DeMesh",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Deconstruct a mesh into its component parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/deconstructMesh.html"
    },
    {
      "name": "Face Boundaries",
      "id": "FaceB",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Convert all mesh faces to polylines",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/faceBoundaries.html"
    },
    {
      "name": "Face Circles",
      "id": "FaceC",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Solve the circumscribed circles for all mesh faces",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/faceCircles.html"
    },
    {
      "name": "Face Normals",
      "id": "FaceN",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Extract the normals and center points of all faces in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/faceNormals.html"
    },
    {
      "name": "Mesh Closest Point",
      "id": "MeshCP",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Finds the closest point on a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshClosestPoint.html"
    },
    {
      "name": "Mesh Depth",
      "id": "MDepth",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Validate the depth of a mesh.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshDepth.html"
    },
    {
      "name": "Mesh Edges",
      "id": "MEdges",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Get all the edges of a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshEdges.html"
    },
    {
      "name": "Mesh Eval",
      "id": "MEval",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Evaluate a mesh at a given parameter",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshEval.html"
    },
    {
      "name": "Mesh Inclusion",
      "id": "MInc",
      "library": "Grasshopper Mesh",
      "category": "Analysis",
      "summary": "Test a point for Mesh inclusion",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshInclusion.html"
    },
    {
      "name": "Construct Mesh",
      "id": "ConMesh",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Construct a mesh from vertices, faces and optional colours.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/constructMesh.html"
    },
    {
      "name": "Mesh Colours",
      "id": "MCol",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Assign a repeating colour pattern to a mesh object.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshColours.html"
    },
    {
      "name": "Mesh Plane",
      "id": "MPlane",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Create a mesh plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshPlane.html"
    },
    {
      "name": "Mesh Quad",
      "id": "Quad",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Create a mesh quad.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshQuad.html"
    },
    {
      "name": "Mesh Sphere",
      "id": "MSphere",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Create a mesh sphere.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshSphere.html"
    },
    {
      "name": "Mesh Sphere Ex",
      "id": "MSphereEx",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Create a mesh sphere from square patches.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshSphereEx.html"
    },
    {
      "name": "Mesh Spray",
      "id": "MSpray",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Assign colours to a mesh based on spray points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshSpray.html"
    },
    {
      "name": "Mesh Triangle",
      "id": "Triangle",
      "library": "Grasshopper Mesh",
      "category": "Primitive",
      "summary": "Create a mesh triangle.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshTriangle.html"
    },
    {
      "name": "Convex Hull",
      "id": "Hull",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Compute the planar, convex hull for a collection of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/convexHull.html"
    },
    {
      "name": "Delaunay Edges",
      "id": "Con",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Delaunay connectivity",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/delaunayEdges.html"
    },
    {
      "name": "Delaunay Mesh",
      "id": "Del",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Delaunay triangulation",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/delaunayMesh.html"
    },
    {
      "name": "Facet Dome",
      "id": "Facet",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Create a facetted dome",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/facetDome.html"
    },
    {
      "name": "MetaBall",
      "id": "MetaBall",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "2D Metaball isocurve through point",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/metaBall.html"
    },
    {
      "name": "MetaBall(t)",
      "id": "MetaBall(t)",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "2D Metaball isosurface by threshold",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/metaBallt.html"
    },
    {
      "name": "MetaBall(t) Custom",
      "id": "MetaBall(t)",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "2D Metaball isosurface by threshold and custom charge values",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/metaBalltCustom.html"
    },
    {
      "name": "OcTree",
      "id": "OcT",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "A three-dimensional oc-tree structure",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/ocTree.html"
    },
    {
      "name": "Proximity 2D",
      "id": "Prox",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Search for two-dimensional proximity within a point list",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/proximity2D.html"
    },
    {
      "name": "Proximity 3D",
      "id": "Prox",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Search for three-dimensional proximity within a point list",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/proximity3D.html"
    },
    {
      "name": "QuadTree",
      "id": "QT",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "A two-dimensional quadtree structure",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/quadTree.html"
    },
    {
      "name": "Substrate",
      "id": "Substrate",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Substrate algorithm inspired by Jared Tarbell (Complexification.net)",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/substrate.html"
    },
    {
      "name": "Voronoi",
      "id": "Voronoi",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Planar voronoi diagram for a collection of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/voronoi.html"
    },
    {
      "name": "Voronoi 3D",
      "id": "Voronoi³",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Volumetric voronoi diagram for a collection of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/voronoi3D.html"
    },
    {
      "name": "Voronoi Cell",
      "id": "VCell",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Compute a single 3D Voronoi cell",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/voronoiCell.html"
    },
    {
      "name": "Voronoi Groups",
      "id": "VorGroup",
      "library": "Grasshopper Mesh",
      "category": "Triangulation",
      "summary": "Compute a custom set of nested voronoi diagrams.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/voronoiGroups.html"
    },
    {
      "name": "Align Vertices",
      "id": "AlignVert",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Align nearby vertices in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/alignVertices.html"
    },
    {
      "name": "Blur Mesh",
      "id": "MBlur",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Blur the colours on a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/blurMesh.html"
    },
    {
      "name": "Cull Faces",
      "id": "CullF",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Cull faces from a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/cullFaces.html"
    },
    {
      "name": "Cull Vertices",
      "id": "CullV",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Cull vertices from a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/cullVertices.html"
    },
    {
      "name": "Delete Faces",
      "id": "DeleteF",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Delete faces from a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/deleteFaces.html"
    },
    {
      "name": "Delete Vertices",
      "id": "DeleteV",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Delete vertices from a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/deleteVertices.html"
    },
    {
      "name": "Disjoint Mesh",
      "id": "Disjoint",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Split a mesh into disjoint pieces.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/disjointMesh.html"
    },
    {
      "name": "Exposure",
      "id": "Exposure",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Solve mesh exposure for a collection of energy rays and obstructions.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/exposure.html"
    },
    {
      "name": "Flip Mesh",
      "id": "FlipM",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Flip the normal vectors of a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/flipMesh.html"
    },
    {
      "name": "Mesh Join",
      "id": "MJoin",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Join a set of meshes into a single mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshJoin.html"
    },
    {
      "name": "Mesh Shadow",
      "id": "MShadow",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Compute the shadow outline for a mesh object",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshShadow.html"
    },
    {
      "name": "Mesh Split Plane",
      "id": "MSplit",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Split a mesh with an infinite plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshSplitPlane.html"
    },
    {
      "name": "Mesh Surface",
      "id": "Mesh UV",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Create a Surface UV mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/meshSurface.html"
    },
    {
      "name": "Occlusion",
      "id": "Occ",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Solve occlusion for a collection of view rays and obstructions.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/occlusion.html"
    },
    {
      "name": "Quadrangulate",
      "id": "Quad",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Quadrangulate as many triangles as possible in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/quadrangulate.html"
    },
    {
      "name": "Settings (Custom)",
      "id": "Custom Mesh Settings",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Represents custom mesh settings.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/settingsCustom.html"
    },
    {
      "name": "Settings (Quality)",
      "id": "Smooth",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Represents 'Smooth & slower' mesh settings.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/settingsQuality.html"
    },
    {
      "name": "Settings (Speed)",
      "id": "Jagged",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Represents 'Jagged & faster' mesh settings.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/settingsSpeed.html"
    },
    {
      "name": "Simple Mesh",
      "id": "SMesh",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Create a mesh that represents a Brep as simply as possible",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/simpleMesh.html"
    },
    {
      "name": "Smooth Mesh",
      "id": "MSmooth",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Smooth the vertices of a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/smoothMesh.html"
    },
    {
      "name": "Triangulate",
      "id": "Tri",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Triangulate all quads in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/triangulate.html"
    },
    {
      "name": "Unify Mesh",
      "id": "UniM",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Unify the normals of a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/unifyMesh.html"
    },
    {
      "name": "Unweld Mesh",
      "id": "Unweld",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Unweld (split) creases in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/unweldMesh.html"
    },
    {
      "name": "Weld Mesh",
      "id": "Weld",
      "library": "Grasshopper Mesh",
      "category": "Util",
      "summary": "Weld (merge) creases in a mesh",
      "description": null,
      "iconCss": "background: url('icons/grasshopperMesh.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppermesh/weldMesh.html"
    },
    {
      "name": "Atom Data",
      "id": "Atom",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Get detailed information for an atom",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/atomData.html"
    },
    {
      "name": "Gradient",
      "id": "Gradient",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Represents a multiple colour gradient",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/gradient.html"
    },
    {
      "name": "Import 3DM",
      "id": "3DM",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Import geometry from Rhino 3dm files.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/import3DM.html"
    },
    {
      "name": "Import Coordinates",
      "id": "Coords",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Import point coordinates from generic text files.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/importCoordinates.html"
    },
    {
      "name": "Import Image",
      "id": "IMG",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Import image data from bmp, jpg or png files.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/importImage.html"
    },
    {
      "name": "Import PDB",
      "id": "PDB",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Import data from Protein Data Bank *.pdb files.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/importPDB.html"
    },
    {
      "name": "Import SHP",
      "id": "SHP",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Import data from GIS *.shp files.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/importSHP.html"
    },
    {
      "name": "Object Details",
      "id": "ObjDet",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Retrieve some details about referenced Rhino objects.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/objectDetails.html"
    },
    {
      "name": "Read File",
      "id": "File",
      "library": "Grasshopper Params",
      "category": "Input",
      "summary": "Read the contents of a file",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/readFile.html"
    },
    {
      "name": "Timeline",
      "id": "Timeline",
      "library": "Grasshopper Params",
      "category": "Special",
      "summary": "A timeline of values",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/timeline.html"
    },
    {
      "name": "Cluster",
      "id": "Cluster",
      "library": "Grasshopper Params",
      "category": "Util",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/cluster.html"
    },
    {
      "name": "Data Input",
      "id": "Input",
      "library": "Grasshopper Params",
      "category": "Util",
      "summary": "Read a bunch of data from a file.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/dataInput.html"
    },
    {
      "name": "Data Output",
      "id": "Output",
      "library": "Grasshopper Params",
      "category": "Util",
      "summary": "Write a bunch of data to a file.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperParams.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshopperparams/dataOutput.html"
    },
    {
      "name": "Combine Data",
      "id": "Combine",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Combine non-null items out of several inputs",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/combineData.html"
    },
    {
      "name": "Dispatch",
      "id": "Dispatch",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Dispatch the items in a list into two target lists.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/dispatch.html"
    },
    {
      "name": "Insert Items",
      "id": "Ins",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Insert a collection of items into a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/insertItems.html"
    },
    {
      "name": "Item Index",
      "id": "Index",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Retrieve the index of a certain item in a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/itemIndex.html"
    },
    {
      "name": "List Item",
      "id": "Item",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Retrieve a specific item from a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/listItem.html"
    },
    {
      "name": "List Length",
      "id": "Lng",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Measure the length of a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/listLength.html"
    },
    {
      "name": "Null Item",
      "id": "Null",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Test a data item for null or invalidity",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/nullItem.html"
    },
    {
      "name": "Pick'n'Choose",
      "id": "P'n'C",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Pick and choose from a set of input data.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/picknChoose.html"
    },
    {
      "name": "Replace Items",
      "id": "Replace",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Replace certain items in a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/replaceItems.html"
    },
    {
      "name": "Shift List",
      "id": "Shift",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Offset all items in a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/shiftList.html"
    },
    {
      "name": "Sift Pattern",
      "id": "Sift",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Sift elements in a list using a repeating index pattern.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/siftPattern.html"
    },
    {
      "name": "Sort List",
      "id": "Sort",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Sort a list of numeric keys.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/sortList.html"
    },
    {
      "name": "Split List",
      "id": "Split",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Split a list into separate parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/splitList.html"
    },
    {
      "name": "Sub List",
      "id": "SubSet",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Extract a subset from a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/subList.html"
    },
    {
      "name": "Weave",
      "id": "Weave",
      "library": "Grasshopper Sets",
      "category": "List",
      "summary": "Weave a set of input data using a custom pattern.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/weave.html"
    },
    {
      "name": "Char Sequence",
      "id": "CharSeq",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Create a sequence of textual characters.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/charSequence.html"
    },
    {
      "name": "Cull Index",
      "id": "Cull i",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Cull (remove) indexed elements from a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/cullIndex.html"
    },
    {
      "name": "Cull Nth",
      "id": "CullN",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Cull (remove) every Nth element in a list.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/cullNth.html"
    },
    {
      "name": "Cull Pattern",
      "id": "Cull",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Cull (remove) elements in a list using a repeating bit mask.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/cullPattern.html"
    },
    {
      "name": "Duplicate Data",
      "id": "Dup",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Duplicate data a predefined number of times.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/duplicateData.html"
    },
    {
      "name": "Fibonacci",
      "id": "Fib",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Creates a Fibonacci sequence.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/fibonacci.html"
    },
    {
      "name": "Jitter",
      "id": "Jitter",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Randomly shuffles a list of values.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/jitter.html"
    },
    {
      "name": "Random",
      "id": "Random",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Generate a list of pseudo random numbers.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/random.html"
    },
    {
      "name": "Random Reduce",
      "id": "Reduce",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Randomly remove N items from a list",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/randomReduce.html"
    },
    {
      "name": "RandomEx",
      "id": "RndEx",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Generate random data between extremes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/randomEx.html"
    },
    {
      "name": "Range",
      "id": "Range",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Create a range of numbers.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/range.html"
    },
    {
      "name": "Repeat Data",
      "id": "Repeat",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Repeat a pattern until it reaches a certain length.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/repeatData.html"
    },
    {
      "name": "Sequence",
      "id": "Seq",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Generate a sequence of numbers",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/sequence.html"
    },
    {
      "name": "Series",
      "id": "Series",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Create a series of numbers.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/series.html"
    },
    {
      "name": "Stack Data",
      "id": "Stack",
      "library": "Grasshopper Sets",
      "category": "Sequence",
      "summary": "Duplicate individual items in a list of data",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/stackData.html"
    },
    {
      "name": "Carthesian Product",
      "id": "CProd",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Create the Carthesian product for two sets of identical cardinality.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/carthesianProduct.html"
    },
    {
      "name": "Create Set",
      "id": "CSet",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Creates the valid set from a list of items (a valid set only contains distinct elements).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/createSet.html"
    },
    {
      "name": "Delete Consecutive",
      "id": "DCon",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Delete consecutive similar members in a set.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/deleteConsecutive.html"
    },
    {
      "name": "Disjoint",
      "id": "Disjoint",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Test whether two sets are disjoint.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/disjoint.html"
    },
    {
      "name": "Find similar member",
      "id": "FSim",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Find the most similar member in a set.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/findSimilarMember.html"
    },
    {
      "name": "Key/Value Search",
      "id": "KeySearch",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Extract an item from a collection using a key-value match",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/keyValueSearch.html"
    },
    {
      "name": "Member Index",
      "id": "MIndex",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Find the occurences of a specific member in a set.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/memberIndex.html"
    },
    {
      "name": "Replace Members",
      "id": "Replace",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Replace members in a set.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/replaceMembers.html"
    },
    {
      "name": "Set Difference",
      "id": "Difference",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Create the difference of two sets (the collection of objects present in A but not in B).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/setDifference.html"
    },
    {
      "name": "Set Difference (S)",
      "id": "ExDiff",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Create the symmetric difference of two sets (the collection of objects present in A or B but not both).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/setDifferenceS.html"
    },
    {
      "name": "Set Intersection",
      "id": "Intersection",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Creates the intersection of two sets (the collection of unique objects present in both sets).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/setIntersection.html"
    },
    {
      "name": "Set Majority",
      "id": "Majority",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Determine majority member presence amongst three sets.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/setMajority.html"
    },
    {
      "name": "Set Union",
      "id": "SUnion",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Creates the union of two sets (the collection of unique objects present in either set).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/setUnion.html"
    },
    {
      "name": "SubSet",
      "id": "SubSet",
      "library": "Grasshopper Sets",
      "category": "Sets",
      "summary": "Test two sets for inclusion.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/subSet.html"
    },
    {
      "name": "Characters",
      "id": "Chars",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Break text into individual characters",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/characters.html"
    },
    {
      "name": "Concatenate",
      "id": "Concat",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Concatenate some fragments of text",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/concatenate.html"
    },
    {
      "name": "Format",
      "id": "Format",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Format some data using placeholders and formatting tags",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/format.html"
    },
    {
      "name": "Match Text",
      "id": "TMatch",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Match a text against a pattern",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/matchText.html"
    },
    {
      "name": "Replace Text",
      "id": "Rep",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Replace all occurences of a specific text fragment with another",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/replaceText.html"
    },
    {
      "name": "Sort Text",
      "id": "TSort",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Sort a collection of text fragments",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/sortText.html"
    },
    {
      "name": "Text Case",
      "id": "Case",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Change the CaSiNg of a piece of text",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textCase.html"
    },
    {
      "name": "Text Distance",
      "id": "TDist",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Compute the Levenshtein distance between two fragments of text.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textDistance.html"
    },
    {
      "name": "Text Fragment",
      "id": "Fragment",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Extract a fragment (subset) of some text",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textFragment.html"
    },
    {
      "name": "Text Join",
      "id": "Join",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Join a collection of text fragments into one",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textJoin.html"
    },
    {
      "name": "Text Length",
      "id": "Len",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Get the length (character count) of some text",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textLength.html"
    },
    {
      "name": "Text Split",
      "id": "Split",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Split some text into fragments using separators",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textSplit.html"
    },
    {
      "name": "Text Trim",
      "id": "Trim",
      "library": "Grasshopper Sets",
      "category": "Text",
      "summary": "Remove whitespace characters from the start and end of some text.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/textTrim.html"
    },
    {
      "name": "Clean Tree",
      "id": "Clean",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Removed all null and invalid items from a data tree.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/cleanTree.html"
    },
    {
      "name": "Construct Path",
      "id": "Path",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Construct a data tree branch path.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/constructPath.html"
    },
    {
      "name": "Deconstruct Path",
      "id": "DPath",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Deconstruct a data tree path into individual integers.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/deconstructPath.html"
    },
    {
      "name": "Entwine",
      "id": "Entwine",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Flatten and combine a collection of data streams",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/entwine.html"
    },
    {
      "name": "Explode Tree",
      "id": "BANG!",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Extract all the branches from a tree",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/explodeTree.html"
    },
    {
      "name": "Flatten Tree",
      "id": "Flatten",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Flatten a data tree by removing all branching information.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/flattenTree.html"
    },
    {
      "name": "Graft Tree",
      "id": "Graft",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Graft a data tree by adding an extra branch for every item.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/graftTree.html"
    },
    {
      "name": "Match Tree",
      "id": "Match",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Match one data tree with another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/matchTree.html"
    },
    {
      "name": "Merge",
      "id": "Merge",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge two streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge.html"
    },
    {
      "name": "Merge 03",
      "id": "M3",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge three streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge03.html"
    },
    {
      "name": "Merge 04",
      "id": "M4",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge four streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge04.html"
    },
    {
      "name": "Merge 05",
      "id": "M5",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge five streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge05.html"
    },
    {
      "name": "Merge 06",
      "id": "M6",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge six streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge06.html"
    },
    {
      "name": "Merge 08",
      "id": "M8",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge eight streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge08.html"
    },
    {
      "name": "Merge 10",
      "id": "M10",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge ten streams into one.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/merge10.html"
    },
    {
      "name": "Merge Multiple",
      "id": "Merge",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Merge multiple input streams into one",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/mergeMultiple.html"
    },
    {
      "name": "Path Compare",
      "id": "Compare",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Compare a path to a mask pattern",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/pathCompare.html"
    },
    {
      "name": "Prune Tree",
      "id": "Prune",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Remove small branches from a Data Tree.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/pruneTree.html"
    },
    {
      "name": "Relative Item",
      "id": "RelItem",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Retrieve a relative item combo from a data tree",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/relativeItem.html"
    },
    {
      "name": "Relative Items",
      "id": "RelItem2",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Retrieve a relative item combo from two data trees",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/relativeItems.html"
    },
    {
      "name": "Replace Paths",
      "id": "Replace",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Find & replace paths in a data tree",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/replacePaths.html"
    },
    {
      "name": "Shift Paths",
      "id": "PShift",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Shift the indices in all data tree paths",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/shiftPaths.html"
    },
    {
      "name": "Simplify Tree",
      "id": "Simplify",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Simplify a data tree by removing the overlap shared amongst all branches.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/simplifyTree.html"
    },
    {
      "name": "Split Tree",
      "id": "Split",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Split a data tree into two parts using path masks.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/splitTree.html"
    },
    {
      "name": "Stream Filter",
      "id": "Filter",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Filters a collection of input streams",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/streamFilter.html"
    },
    {
      "name": "Stream Gate",
      "id": "Gate",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Redirects a stream into specific outputs.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/streamGate.html"
    },
    {
      "name": "Tree Branch",
      "id": "Branch",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Retrieve a specific branch from a data tree.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/treeBranch.html"
    },
    {
      "name": "Tree Item",
      "id": "Item",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Retrieve a specific item from a data tree.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/treeItem.html"
    },
    {
      "name": "Tree Statistics",
      "id": "TStat",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Get some statistics regarding a data tree.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/treeStatistics.html"
    },
    {
      "name": "Trim Tree",
      "id": "Trim",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Reduce the complexity of a tree by merging the outermost branches.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/trimTree.html"
    },
    {
      "name": "Unflatten Tree",
      "id": "Unflatten",
      "library": "Grasshopper Sets",
      "category": "Tree",
      "summary": "Unflatten a data tree by moving items back into branches.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSets.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersets/unflattenTree.html"
    },
    {
      "name": "Area",
      "id": "Area",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Solve area properties for breps, meshes and planar closed curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/area.html"
    },
    {
      "name": "Area Moments",
      "id": "AMoments",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Solve area moments for breps, meshes and planar closed curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/areaMoments.html"
    },
    {
      "name": "Box Corners",
      "id": "Box Corners",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Extract all 8 corners of a box.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/boxCorners.html"
    },
    {
      "name": "Box Properties",
      "id": "BoxProp",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Get some properties of a box",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/boxProperties.html"
    },
    {
      "name": "Brep Closest Point",
      "id": "Brep CP",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Find the closest point on a brep",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/brepClosestPoint.html"
    },
    {
      "name": "Brep Edges",
      "id": "Edges",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Extract the edge curves of a brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/brepEdges.html"
    },
    {
      "name": "Brep Wireframe",
      "id": "Wires",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Extract the wireframe curves of a brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/brepWireframe.html"
    },
    {
      "name": "Deconstruct Box",
      "id": "DeBox",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Deconstruct a box into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/deconstructBox.html"
    },
    {
      "name": "Deconstruct Brep",
      "id": "DeBrep",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Deconstruct a brep into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/deconstructBrep.html"
    },
    {
      "name": "Dimensions",
      "id": "Dim",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Get the approximate dimensions of a surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/dimensions.html"
    },
    {
      "name": "Evaluate Box",
      "id": "Box",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Evaluate a box in normalised {UVW} space.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/evaluateBox.html"
    },
    {
      "name": "Evaluate Surface",
      "id": "EvalSrf",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Evaluate local surface properties at a {uv} coordinate.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/evaluateSurface.html"
    },
    {
      "name": "Is Planar",
      "id": "Planar",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Test whether a surface is planar",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/isPlanar.html"
    },
    {
      "name": "Osculating Circles",
      "id": "Osc",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Calculate the principal osculating circles of a surface at a {uv} coordinate.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/osculatingCircles.html"
    },
    {
      "name": "Point In Brep",
      "id": "BrepInc",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Test whether a point is inside a closed brep",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/pointInBrep.html"
    },
    {
      "name": "Point In Breps",
      "id": "BrepsInc",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Test whether a point is inside a collection of closed breps",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/pointInBreps.html"
    },
    {
      "name": "Point In Trim",
      "id": "TrimInc",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Test whether a {uv} coordinate is inside the trimmed portion of a surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/pointInTrim.html"
    },
    {
      "name": "Principal Curvature",
      "id": "Curvature",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Evaluate the principal curvature of a surface at a {uv} coordinate.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/principalCurvature.html"
    },
    {
      "name": "Shape In Brep",
      "id": "ShapeIn",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Tests whether a shape is inside a brep",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/shapeInBrep.html"
    },
    {
      "name": "Surface Closest Point",
      "id": "Srf CP",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Find the closest point on a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfaceClosestPoint.html"
    },
    {
      "name": "Surface Curvature",
      "id": "Curvature",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Evaluate the surface curvature at a {uv} coordinate.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfaceCurvature.html"
    },
    {
      "name": "Surface Inflection",
      "id": "SInf",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Compute the inflection curves for a surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfaceInflection.html"
    },
    {
      "name": "Surface Points",
      "id": "SrfPt",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Get the control-points of a Nurbs Surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfacePoints.html"
    },
    {
      "name": "Volume",
      "id": "Volume",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Solve volume properties for closed breps and meshes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/volume.html"
    },
    {
      "name": "Volume Moments",
      "id": "VMoments",
      "library": "Grasshopper Surface",
      "category": "Analysis",
      "summary": "Solve volume properties for closed breps and meshes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/volumeMoments.html"
    },
    {
      "name": "4Point Surface",
      "id": "Srf4Pt",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface connecting three or four corner points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/4PointSurface.html"
    },
    {
      "name": "Boundary Surfaces",
      "id": "Boundary",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create planar surfaces from a collection of boundary edge curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/boundarySurfaces.html"
    },
    {
      "name": "Control Point Loft",
      "id": "CPLoft",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a loft through curve control points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/controlPointLoft.html"
    },
    {
      "name": "Edge Surface",
      "id": "EdgeSrf",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface from two, three or four edge curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgeSurface.html"
    },
    {
      "name": "Extrude",
      "id": "Extr",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Extrude curves and surfaces along a vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/extrude.html"
    },
    {
      "name": "Extrude Along",
      "id": "ExtrCrv",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Extrude curves and surfaces along a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/extrudeAlong.html"
    },
    {
      "name": "Extrude Angled",
      "id": "ExtrAng",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Extrude a planar polyline at angles",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/extrudeAngled.html"
    },
    {
      "name": "Extrude Linear",
      "id": "Extrude",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Extrude curves and surfaces along a straight path.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/extrudeLinear.html"
    },
    {
      "name": "Extrude Point",
      "id": "Extr",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Extrude curves and surfaces to a point.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/extrudePoint.html"
    },
    {
      "name": "Fit Loft",
      "id": "FitLoft",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a loft fitted through a set of curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/fitLoft.html"
    },
    {
      "name": "Fragment Patch",
      "id": "FPatch",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a fragmented patch from a polyline boundary",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/fragmentPatch.html"
    },
    {
      "name": "Loft",
      "id": "Loft",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a lofted surface through a set of section curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/loft.html"
    },
    {
      "name": "Loft Options",
      "id": "Loft Opt",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create loft options from atomic inputs",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/loftOptions.html"
    },
    {
      "name": "Network Surface",
      "id": "NetSurf",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface from curve networks",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/networkSurface.html"
    },
    {
      "name": "Patch",
      "id": "Patch",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a patch surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/patch.html"
    },
    {
      "name": "Pipe",
      "id": "Pipe",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a pipe surface around a rail curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/pipe.html"
    },
    {
      "name": "Pipe Variable",
      "id": "VPipe",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a pipe surface with variable radii around a rail curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/pipeVariable.html"
    },
    {
      "name": "Rail Revolution",
      "id": "RailRev",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface of revolution using a sweep rail.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/railRevolution.html"
    },
    {
      "name": "Revolution",
      "id": "RevSrf",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface of revolution.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/revolution.html"
    },
    {
      "name": "Ruled Surface",
      "id": "RuleSrf",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a surface between two curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/ruledSurface.html"
    },
    {
      "name": "Sum Surface",
      "id": "SumSrf",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a sum surface from two edge curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sumSurface.html"
    },
    {
      "name": "Surface From Points",
      "id": "SrfGrid",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a nurbs surface from a grid of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfaceFromPoints.html"
    },
    {
      "name": "Sweep1",
      "id": "Swp1",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a sweep surface with one rail curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sweep1.html"
    },
    {
      "name": "Sweep2",
      "id": "Swp2",
      "library": "Grasshopper Surface",
      "category": "Freeform",
      "summary": "Create a sweep surface with two rail curves.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sweep2.html"
    },
    {
      "name": "Bounding Box",
      "id": "BBox",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Solve oriented geometry bounding boxes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/boundingBox.html"
    },
    {
      "name": "Box 2Pt",
      "id": "Box",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a box defined by two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/box2Pt.html"
    },
    {
      "name": "Box Rectangle",
      "id": "BoxRec",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a box defined by a rectangle and a height.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/boxRectangle.html"
    },
    {
      "name": "Center Box",
      "id": "Box",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a box centered on a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/centerBox.html"
    },
    {
      "name": "Cone",
      "id": "Cone",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a conical surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/cone.html"
    },
    {
      "name": "Cylinder",
      "id": "Cyl",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a cylindrical surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/cylinder.html"
    },
    {
      "name": "Domain Box",
      "id": "Box",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a box defined by a base plane and size domains.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/domainBox.html"
    },
    {
      "name": "Plane Surface",
      "id": "PlaneSrf",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a plane surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/planeSurface.html"
    },
    {
      "name": "Plane Through Shape",
      "id": "PxS",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Make a rectangular surface that is larger than a given shape.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/planeThroughShape.html"
    },
    {
      "name": "Quad Sphere",
      "id": "QSph",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a spherical brep made from quad nurbs patches.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/quadSphere.html"
    },
    {
      "name": "Sphere",
      "id": "Sph",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a spherical surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sphere.html"
    },
    {
      "name": "Sphere 4Pt",
      "id": "Sph4Pt",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Create a spherical surface from 4 points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sphere4Pt.html"
    },
    {
      "name": "Sphere Fit",
      "id": "SFit",
      "library": "Grasshopper Surface",
      "category": "Primitive",
      "summary": "Fit a sphere to a 3D collection of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/sphereFit.html"
    },
    {
      "name": "Brep Join",
      "id": "Join",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Join a number of Breps together",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/brepJoin.html"
    },
    {
      "name": "Cap Holes",
      "id": "Cap",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Cap all planar holes in a Brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/capHoles.html"
    },
    {
      "name": "Cap Holes Ex",
      "id": "CapEx",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Cap as many holes as possible in a Brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/capHolesEx.html"
    },
    {
      "name": "Closed Edges",
      "id": "EdgesCls",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select closed edges.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/closedEdges.html"
    },
    {
      "name": "Convex Edges",
      "id": "EdgesCvx",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select concave or convex brep edges.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/convexEdges.html"
    },
    {
      "name": "Copy Trim",
      "id": "Trim",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Copy UV trim data from one surface to another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/copyTrim.html"
    },
    {
      "name": "Divide Surface",
      "id": "SDivide",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Generate a grid of {uv} points on a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/divideSurface.html"
    },
    {
      "name": "Edges from Directions",
      "id": "EdgesDir",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select brep edges based on edge direction",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgesFromDirections.html"
    },
    {
      "name": "Edges from Faces",
      "id": "EdgesFaces",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select all brep edges that delineate certain faces",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgesFromFaces.html"
    },
    {
      "name": "Edges from Length",
      "id": "EdgesLen",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select brep edges based on length",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgesFromLength.html"
    },
    {
      "name": "Edges from Linearity",
      "id": "EdgesLin",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select brep edges based on linearity",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgesFromLinearity.html"
    },
    {
      "name": "Edges from Points",
      "id": "EdgesPt",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Select brep edges based on point coincidence",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/edgesFromPoints.html"
    },
    {
      "name": "Fillet Edge",
      "id": "FilEdge",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Fillet some edges of a brep.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/filletEdge.html"
    },
    {
      "name": "Flip",
      "id": "Flip",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Flip the normals of a surface based on local or remote geometry",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/flip.html"
    },
    {
      "name": "Isotrim",
      "id": "SubSrf",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Extract an isoparametric subset of a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/isotrim.html"
    },
    {
      "name": "Merge Faces",
      "id": "FMerge",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Merge all adjacent co-planar faces in a brep",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/mergeFaces.html"
    },
    {
      "name": "Offset Surface",
      "id": "Offset",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Offset a surface by a fixed amount.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/offsetSurface.html"
    },
    {
      "name": "Offset Surface Loose",
      "id": "Offset (L)",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Offset a surface by moving the control points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/offsetSurfaceLoose.html"
    },
    {
      "name": "Retrim",
      "id": "Retrim",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Retrim a surface based on 3D trim data from another surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/retrim.html"
    },
    {
      "name": "Surface Frames",
      "id": "SFrames",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Generate a grid of {uv} frames on a surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/surfaceFrames.html"
    },
    {
      "name": "Untrim",
      "id": "Untrim",
      "library": "Grasshopper Surface",
      "category": "Util",
      "summary": "Remove all trim curves from a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperSurface.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppersurface/untrim.html"
    },
    {
      "name": "Box Mapping",
      "id": "BoxMap",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Transform geometry from one box into another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/boxMapping.html"
    },
    {
      "name": "Camera Obscura",
      "id": "CO",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Camera Obscura (point mirror) transformation.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/cameraObscura.html"
    },
    {
      "name": "Orient Direction",
      "id": "Orient",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Orient an object using directional constraints only.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/orientDirection.html"
    },
    {
      "name": "Project",
      "id": "Project",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Project an object onto a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/project.html"
    },
    {
      "name": "Project Along",
      "id": "ProjectA",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Project an object onto a plane along a direction.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/projectAlong.html"
    },
    {
      "name": "Rectangle Mapping",
      "id": "RecMap",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Transform geometry from one rectangle into another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rectangleMapping.html"
    },
    {
      "name": "Scale",
      "id": "Scale",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Scale an object uniformly in all directions.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/scale.html"
    },
    {
      "name": "Scale NU",
      "id": "Scale NU",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Scale an object with non-uniform factors.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/scaleNU.html"
    },
    {
      "name": "Shear",
      "id": "Shear",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Shear an object based on a shearing vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/shear.html"
    },
    {
      "name": "Shear Angle",
      "id": "Shear",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Shear an object based on tilt angles.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/shearAngle.html"
    },
    {
      "name": "Triangle Mapping",
      "id": "TriMap",
      "library": "Grasshopper Transform",
      "category": "Affine",
      "summary": "Transform geometry from one triangle into another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/triangleMapping.html"
    },
    {
      "name": "Curve Array",
      "id": "ArrCurve",
      "library": "Grasshopper Transform",
      "category": "Array",
      "summary": "Create an array of geometry along a curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/curveArray.html"
    },
    {
      "name": "Kaleidoscope",
      "id": "KScope",
      "library": "Grasshopper Transform",
      "category": "Array",
      "summary": "Apply a kaleidoscope transformation to an object.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/kaleidoscope.html"
    },
    {
      "name": "Linear Array",
      "id": "ArrLinear",
      "library": "Grasshopper Transform",
      "category": "Array",
      "summary": "Create a linear array of geometry.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/linearArray.html"
    },
    {
      "name": "Polar Array",
      "id": "ArrPolar",
      "library": "Grasshopper Transform",
      "category": "Array",
      "summary": "Create a polar array of geometry.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/polarArray.html"
    },
    {
      "name": "Rectangular Array",
      "id": "ArrRec",
      "library": "Grasshopper Transform",
      "category": "Array",
      "summary": "Create a rectangular array of geometry.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rectangularArray.html"
    },
    {
      "name": "Mirror",
      "id": "Mirror",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Mirror an object.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/mirror.html"
    },
    {
      "name": "Move",
      "id": "Move",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Translate (move) an object along a vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/move.html"
    },
    {
      "name": "Move Away From",
      "id": "MoveAway",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Translate (move) an object away from another object.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/moveAwayFrom.html"
    },
    {
      "name": "Move To Plane",
      "id": "MoveToPlane",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Translate (move) an object onto a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/moveToPlane.html"
    },
    {
      "name": "Orient",
      "id": "Orient",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Orient an object. Orientation is sometimes called a 'ChangeBasis tranformation'. It allows for remapping of geometry from one axis-system to another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/orient.html"
    },
    {
      "name": "Rotate",
      "id": "Rotate",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Rotate an object in a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rotate.html"
    },
    {
      "name": "Rotate 3D",
      "id": "Rot3D",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Rotate an object around a center point and an axis vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rotate3D.html"
    },
    {
      "name": "Rotate Axis",
      "id": "RotAx",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Rotate an object around an axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rotateAxis.html"
    },
    {
      "name": "Rotate Direction",
      "id": "Rotate",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Rotate an object from one direction to another.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/rotateDirection.html"
    },
    {
      "name": "Sanity XForm",
      "id": "MWHAHAHA!!",
      "library": "Grasshopper Transform",
      "category": "Euclidean",
      "summary": "Apply a sanity transformation to f a r - a w a y, tiny or HUGE geometry",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/sanityXForm.html"
    },
    {
      "name": "Bend Deform",
      "id": "Bend",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deform a shape by bending it",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/bendDeform.html"
    },
    {
      "name": "Blend Box",
      "id": "BlendBox",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Create a twisted box between two surfaces.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/blendBox.html"
    },
    {
      "name": "Box Morph",
      "id": "Morph",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Morph an object into a twisted box.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/boxMorph.html"
    },
    {
      "name": "Flow",
      "id": "Flow",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Re-aligns objects from a base curve to a target curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/flow.html"
    },
    {
      "name": "Maelstrom",
      "id": "Maelstrom",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Spirally deforms objects as if they were caught in a whirlpool",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/maelstrom.html"
    },
    {
      "name": "Map to Surface",
      "id": "Map Srf",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Map a curve onto a surface via control points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/mapToSurface.html"
    },
    {
      "name": "Mirror Curve",
      "id": "Mirror",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Mirror a shape in a freeform curve.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/mirrorCurve.html"
    },
    {
      "name": "Mirror Surface",
      "id": "Mirror",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Mirror geometry in a freeform surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/mirrorSurface.html"
    },
    {
      "name": "Point Deform",
      "id": "PDeform",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deform a shape by moving control-points individually",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/pointDeform.html"
    },
    {
      "name": "Spatial Deform",
      "id": "Deform",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Perform spatial deformation based on custom space syntax.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/spatialDeform.html"
    },
    {
      "name": "Spatial Deform (custom)",
      "id": "Deform",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Perform spatial deformation based on custom space syntax.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/spatialDeformcustom.html"
    },
    {
      "name": "Splop",
      "id": "Splop",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Wraps geometry onto a surface.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/splop.html"
    },
    {
      "name": "Sporph",
      "id": "Sporph",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deforms an object from a source surface to a target surface",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/sporph.html"
    },
    {
      "name": "Stretch",
      "id": "Stretch",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deforms objects by stretching them along a finite axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/stretch.html"
    },
    {
      "name": "Surface Box",
      "id": "SBox",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Create a twisted box on a surface patch.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/surfaceBox.html"
    },
    {
      "name": "Surface Morph",
      "id": "SrfMorph",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Morph geometry into surface UVW coordinates",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/surfaceMorph.html"
    },
    {
      "name": "Taper",
      "id": "Taper",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deforms objects toward or away from an axis",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/taper.html"
    },
    {
      "name": "Twist",
      "id": "Twist",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Deforms objects by twisting them around an axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/twist.html"
    },
    {
      "name": "Twisted Box",
      "id": "TBox",
      "library": "Grasshopper Transform",
      "category": "Morph",
      "summary": "Create a twisted box from corner points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/twistedBox.html"
    },
    {
      "name": "Compound",
      "id": "Comp",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Compound two transformations.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/compound.html"
    },
    {
      "name": "Group",
      "id": "Group",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Group a set of objects",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/group.html"
    },
    {
      "name": "Inverse Transform",
      "id": "Inverse",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Invert a transformation.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/inverseTransform.html"
    },
    {
      "name": "Merge Group",
      "id": "GMerge",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Merge two groups",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/mergeGroup.html"
    },
    {
      "name": "Split",
      "id": "Split",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Split a compound transformation into fragments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/split.html"
    },
    {
      "name": "Split Group",
      "id": "GSplit",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Split a group",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/splitGroup.html"
    },
    {
      "name": "Transform",
      "id": "Transform",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Transform an object.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/transform.html"
    },
    {
      "name": "Ungroup",
      "id": "Ungroup",
      "library": "Grasshopper Transform",
      "category": "Util",
      "summary": "Ungroup a set of objects",
      "description": null,
      "iconCss": "background: url('icons/grasshopperTransform.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppertransform/ungroup.html"
    },
    {
      "name": "Blend Colours",
      "id": "BlendCol",
      "library": "Grasshopper Vector",
      "category": "Colour",
      "summary": "Interpolate (blend) between two colours.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/blendColours.html"
    },
    {
      "name": "Break Field",
      "id": "BreakF",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Break a field into individual elements",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/breakField.html"
    },
    {
      "name": "Direction Display",
      "id": "FDir",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Display the force directions of a field section",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/directionDisplay.html"
    },
    {
      "name": "Evaluate Field",
      "id": "EvF",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Evaluate a field at a point",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/evaluateField.html"
    },
    {
      "name": "Field Line",
      "id": "FLine",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Compute the field line through a certain point",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/fieldLine.html"
    },
    {
      "name": "Line Charge",
      "id": "LCharge",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Create a field due to a line charge",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/lineCharge.html"
    },
    {
      "name": "Merge Fields",
      "id": "MergeF",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Merge a collection of fields into one",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/mergeFields.html"
    },
    {
      "name": "Perpendicular Display",
      "id": "FPerp",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Display the perpendicularity of a field through a section",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/perpendicularDisplay.html"
    },
    {
      "name": "Point Charge",
      "id": "PCharge",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Create a field due to a point charge",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointCharge.html"
    },
    {
      "name": "Scalar Display",
      "id": "FScalar",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Display the scalar values of a field section",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/scalarDisplay.html"
    },
    {
      "name": "Spin Force",
      "id": "FSpin",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Create a field due to a spin force",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/spinForce.html"
    },
    {
      "name": "Tensor Display",
      "id": "FTensor",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Display the tensor vectors of a field section",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/tensorDisplay.html"
    },
    {
      "name": "Vector Force",
      "id": "FVector",
      "library": "Grasshopper Vector",
      "category": "Field",
      "summary": "Create a field due to a vector force",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/vectorForce.html"
    },
    {
      "name": "Hexagonal",
      "id": "HexGrid",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "2D grid with hexagonal cells",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/hexagonal.html"
    },
    {
      "name": "Populate 2D",
      "id": "Pop2D",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "Populate a 2-Dimensional region with points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/populate2D.html"
    },
    {
      "name": "Populate Geometry",
      "id": "PopGeo",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "Populate generic geometry with points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/populateGeometry.html"
    },
    {
      "name": "Radial",
      "id": "RadGrid",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "2D radial grid",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/radial.html"
    },
    {
      "name": "Rectangular",
      "id": "RecGrid",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "2D grid with rectangular cells",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/rectangular.html"
    },
    {
      "name": "Square",
      "id": "SqGrid",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "2D grid with square cells",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/square.html"
    },
    {
      "name": "Triangular",
      "id": "TriGrid",
      "library": "Grasshopper Vector",
      "category": "Grid",
      "summary": "2D grid with triangular cells",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/triangular.html"
    },
    {
      "name": "Adjust Plane",
      "id": "PAdjust",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Adjust a plane to match a new normal direction",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/adjustPlane.html"
    },
    {
      "name": "Align Plane",
      "id": "Align",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Perform minimal rotation to align a plane with a guide vector",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/alignPlane.html"
    },
    {
      "name": "Align Planes",
      "id": "Align",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Align planes by minimizing their serial rotation.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/alignPlanes.html"
    },
    {
      "name": "Construct Plane",
      "id": "Pl",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Construct a plane from an origin point and {x}, {y} axes.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/constructPlane.html"
    },
    {
      "name": "Deconstruct Plane",
      "id": "DePlane",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Deconstruct a plane into its component parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/deconstructPlane.html"
    },
    {
      "name": "Flip Plane",
      "id": "PFlip",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Flip or swap the axes of a plane",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/flipPlane.html"
    },
    {
      "name": "Line + Line",
      "id": "LnLn",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Create a plane from two line segments.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/lineLine.html"
    },
    {
      "name": "Line + Pt",
      "id": "LnPt",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Create a plane from a line and a point.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/linePt.html"
    },
    {
      "name": "Plane 3Pt",
      "id": "Pl 3Pt",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Create a plane through three points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/plane3Pt.html"
    },
    {
      "name": "Plane Closest Point",
      "id": "CP",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Find the closest point on a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeClosestPoint.html"
    },
    {
      "name": "Plane Coordinates",
      "id": "PlCoord",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Get the coordinates of a point in a plane axis system.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeCoordinates.html"
    },
    {
      "name": "Plane Fit",
      "id": "PlFit",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Fit a plane through a set of points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeFit.html"
    },
    {
      "name": "Plane Normal",
      "id": "Pl",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Create a plane perpendicular to a vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeNormal.html"
    },
    {
      "name": "Plane Offset",
      "id": "Pl Offset",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Offset a plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeOffset.html"
    },
    {
      "name": "Plane Origin",
      "id": "Pl Origin",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Change the origin point of a plane",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/planeOrigin.html"
    },
    {
      "name": "Rotate Plane",
      "id": "PRot",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "Perform plane rotation around plane z-axis",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/rotatePlane.html"
    },
    {
      "name": "XY Plane",
      "id": "XY",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "World XY plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/xYPlane.html"
    },
    {
      "name": "XZ Plane",
      "id": "XZ",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "World XZ plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/xZPlane.html"
    },
    {
      "name": "YZ Plane",
      "id": "YZ",
      "library": "Grasshopper Vector",
      "category": "Plane",
      "summary": "World YZ plane.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/yZPlane.html"
    },
    {
      "name": "Barycentric",
      "id": "BCentric",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Create a point from barycentric {u,v,w} coordinates",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/barycentric.html"
    },
    {
      "name": "Closest Point",
      "id": "CP",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Find closest point in a point collection.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/closestPoint.html"
    },
    {
      "name": "Closest Points",
      "id": "CPs",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Find closest points in a point collection.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/closestPoints.html"
    },
    {
      "name": "Construct Point",
      "id": "Pt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Construct a point from {xyz} coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/constructPoint.html"
    },
    {
      "name": "Cull Duplicates",
      "id": "CullPt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Cull points that are coincident within tolerance",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/cullDuplicates.html"
    },
    {
      "name": "Deconstruct",
      "id": "pDecon",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Deconstruct a point into its component parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/deconstruct.html"
    },
    {
      "name": "Distance",
      "id": "Dist",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Compute Euclidean distance between two point coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/distance.html"
    },
    {
      "name": "Numbers to Points",
      "id": "Num2Pt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Convert a list of numbers to a list of points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/numbersToPoints.html"
    },
    {
      "name": "Point Cylindrical",
      "id": "Pt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Create a point from cylindrical {angle,radius,elevation} coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointCylindrical.html"
    },
    {
      "name": "Point Groups",
      "id": "PGroups",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Create groups from nearby points",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointGroups.html"
    },
    {
      "name": "Point Oriented",
      "id": "Pt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Create a point from plane {u,v,w} coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointOriented.html"
    },
    {
      "name": "Point Polar",
      "id": "Pt",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Create a point from polar {phi,theta,offset} coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointPolar.html"
    },
    {
      "name": "Points to Numbers",
      "id": "Pt2Num",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Convert a list of points to a list of numbers",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pointsToNumbers.html"
    },
    {
      "name": "Project Point",
      "id": "Project",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Project a point onto a collection of shapes",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/projectPoint.html"
    },
    {
      "name": "Pull Point",
      "id": "Pull",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Pull a point to a variety of geometry.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/pullPoint.html"
    },
    {
      "name": "To Polar",
      "id": "Polar",
      "library": "Grasshopper Vector",
      "category": "Point",
      "summary": "Convert a 3D point to plane polar coordinates.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/toPolar.html"
    },
    {
      "name": "Addition",
      "id": "VAdd",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Perform vector-vector addition.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/addition.html"
    },
    {
      "name": "Amplitude",
      "id": "Amp",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Set the amplitude (length) of a vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/amplitude.html"
    },
    {
      "name": "Angle",
      "id": "Angle",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Compute the angle between two vectors.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/angle.html"
    },
    {
      "name": "Cross Product",
      "id": "XProd",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Compute vector cross product.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/crossProduct.html"
    },
    {
      "name": "Deconstruct Vector",
      "id": "DeVec",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Deconstruct a vector into its component parts.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/deconstructVector.html"
    },
    {
      "name": "Divide",
      "id": "VDiv",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Perform vector-scalar division.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/divide.html"
    },
    {
      "name": "Dot Product",
      "id": "DProd",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Compute vector dot product.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/dotProduct.html"
    },
    {
      "name": "Multiply",
      "id": "VMul",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Perform vector-scalar multiplication.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/multiply.html"
    },
    {
      "name": "Reverse",
      "id": "Rev",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Reverse a vector (multiply by -1).",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/reverse.html"
    },
    {
      "name": "Rotate",
      "id": "VRot",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Rotate a vector around an axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/rotate.html"
    },
    {
      "name": "Solar Incidence",
      "id": "Solar",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Gets the solar incidence vector for a certain time and place",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/solarIncidence.html"
    },
    {
      "name": "Unit Vector",
      "id": "Unit",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Unitize vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/unitVector.html"
    },
    {
      "name": "Unit X",
      "id": "X",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Unit vector parallel to the world {x} axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/unitX.html"
    },
    {
      "name": "Unit Y",
      "id": "Y",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Unit vector parallel to the world {y} axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/unitY.html"
    },
    {
      "name": "Unit Z",
      "id": "Z",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Unit vector parallel to the world {z} axis.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/unitZ.html"
    },
    {
      "name": "Vector 2Pt",
      "id": "Vec2Pt",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Create a vector between two points.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/vector2Pt.html"
    },
    {
      "name": "Vector Length",
      "id": "VLen",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Compute the length (amplitude) of a vector.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/vectorLength.html"
    },
    {
      "name": "Vector XYZ",
      "id": "Vec",
      "library": "Grasshopper Vector",
      "category": "Vector",
      "summary": "Create a vector from {xyz} components.",
      "description": null,
      "iconCss": "background: url('icons/grasshopperVector.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grasshoppervector/vectorXYZ.html"
    },
    {
      "name": "Grevit Bakery",
      "id": "Bakery",
      "library": "Grevit",
      "category": "Assemble",
      "summary": "Grevit Bakery",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitBakery.html"
    },
    {
      "name": "Grevit Config",
      "id": "Grevit Config",
      "library": "Grevit",
      "category": "Assemble",
      "summary": "Grevit Config no GIDs",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitConfig.html"
    },
    {
      "name": "Grevit ID",
      "id": "GID",
      "library": "Grevit",
      "category": "Assemble",
      "summary": "Grevit ID",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitID.html"
    },
    {
      "name": "Grevit Layer",
      "id": "Layer",
      "library": "Grevit",
      "category": "Assemble",
      "summary": "Grevit Layer",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitLayer.html"
    },
    {
      "name": "Grevit Send",
      "id": "Send",
      "library": "Grevit",
      "category": "Assemble",
      "summary": "Send Grevit data to target application",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitSend.html"
    },
    {
      "name": "Grevit Autocad Column",
      "id": "Acad Column",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit pointbased Autocad Column",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadColumn.html"
    },
    {
      "name": "Grevit Autocad Curve",
      "id": "Acad Curve",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit Autocad Curve",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadCurve.html"
    },
    {
      "name": "Grevit Autocad Door",
      "id": "Acad Door",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit Autocad Door",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadDoor.html"
    },
    {
      "name": "Grevit Autocad Point",
      "id": "Acad Point",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit Autocad Point",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadPoint.html"
    },
    {
      "name": "Grevit Autocad Room",
      "id": "Acad Room",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit Autocad Room",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadRoom.html"
    },
    {
      "name": "Grevit Autocad Slab",
      "id": "Acad Slab",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit Autocad Slab",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadSlab.html"
    },
    {
      "name": "Grevit Autocad Wall",
      "id": "Acad Wall",
      "library": "Grevit",
      "category": "Components Acad",
      "summary": "Grevit linebased Autocad Wall",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitAutocadWall.html"
    },
    {
      "name": "Grevit Revit Adaptive Component",
      "id": "Revit Adaptive",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Adaptive Component",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitAdaptiveComponent.html"
    },
    {
      "name": "Grevit Revit Column",
      "id": "Revit Column",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Column",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitColumn.html"
    },
    {
      "name": "Grevit Revit Curve",
      "id": "Revit Curve",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Curve",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitCurve.html"
    },
    {
      "name": "Grevit Revit Extrusion",
      "id": "Revit Extrusion",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Extrusion",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitExtrusion.html"
    },
    {
      "name": "Grevit Revit FaceWall",
      "id": "Revit FaceWall",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit FaceWall",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitFaceWall.html"
    },
    {
      "name": "Grevit Revit Family instance",
      "id": "Revit Family",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Family instance",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitFamilyInstance.html"
    },
    {
      "name": "Grevit Revit Grid",
      "id": "Revit Grid",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Grid",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitGrid.html"
    },
    {
      "name": "Grevit Revit Hatch",
      "id": "Revit Hatch",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Hatch",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitHatch.html"
    },
    {
      "name": "Grevit Revit Level",
      "id": "Revit Level",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Level",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitLevel.html"
    },
    {
      "name": "Grevit Revit Profile based wall",
      "id": "Revit PbWall",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Profile based wall",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitProfileBasedWall.html"
    },
    {
      "name": "Grevit Revit ReferencePlane",
      "id": "Revit RefPlane",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit ReferencePlane",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitReferencePlane.html"
    },
    {
      "name": "Grevit Revit Roof",
      "id": "Revit Roof",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Roof",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitRoof.html"
    },
    {
      "name": "Grevit Revit Room",
      "id": "Revit Room",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Room",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitRoom.html"
    },
    {
      "name": "Grevit Revit SelectionSet",
      "id": "Revit SelectionSet",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit SelectionSet",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitSelectionSet.html"
    },
    {
      "name": "Grevit Revit Shaft",
      "id": "Revit Shaft",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Shaft",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitShaft.html"
    },
    {
      "name": "Grevit Revit Slab",
      "id": "Revit Slab",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Slab",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitSlab.html"
    },
    {
      "name": "Grevit Revit Text Note",
      "id": "Revit Text",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Text Note",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitTextNote.html"
    },
    {
      "name": "Grevit Revit Topography",
      "id": "Revit Topography",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Topography",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitTopography.html"
    },
    {
      "name": "Grevit Revit Wall",
      "id": "Revit Wall",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit Revit Wall",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitWall.html"
    },
    {
      "name": "Grevit SetCurtainPanel",
      "id": "Revit SetCurtainPanel",
      "library": "Grevit",
      "category": "Components Revit",
      "summary": "Grevit SetCurtainPanel",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitSetCurtainPanel.html"
    },
    {
      "name": "Grevit Curve Loop",
      "id": "Curve Loop",
      "library": "Grevit",
      "category": "Info",
      "summary": "Grevit Curve Loop",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitCurveLoop.html"
    },
    {
      "name": "Grevit RevitCategory",
      "id": "RevitCategory",
      "library": "Grevit",
      "category": "Info",
      "summary": "Grevit RevitCategory",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitCategory.html"
    },
    {
      "name": "Grevit RevitFamily",
      "id": "RevitFamily",
      "library": "Grevit",
      "category": "Info",
      "summary": "Grevit RevitFamily",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitFamily.html"
    },
    {
      "name": "Filter Rule Comparer",
      "id": "Filter Rule Comparer",
      "library": "Grevit",
      "category": "Revit Filter",
      "summary": "Grevit Filter Rule Comparer",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/grevit/filterRuleComparer.html"
    },
    {
      "name": "Grevit Revit Filter",
      "id": "Revit Filter",
      "library": "Grevit",
      "category": "Revit Filter",
      "summary": "Grevit Revit Filter",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitFilter.html"
    },
    {
      "name": "Grevit Revit Filter Rule",
      "id": "Revit Filter Rule",
      "library": "Grevit",
      "category": "Revit Filter",
      "summary": "Grevit Revit Filter Rule",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitFilterRule.html"
    },
    {
      "name": "Grevit Revit ElementID",
      "id": "Revit ElementID",
      "library": "Grevit",
      "category": "Revit Parameters",
      "summary": "Grevit Revit ElementID",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitElementID.html"
    },
    {
      "name": "Grevit Revit Parameter",
      "id": "Revit Parameter",
      "library": "Grevit",
      "category": "Revit Parameters",
      "summary": "Grevit Revit Parameter",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitParameter.html"
    },
    {
      "name": "Grevit Revit Search ElementID",
      "id": "Revit Search ElementID",
      "library": "Grevit",
      "category": "Revit Parameters",
      "summary": "Grevit Revit Search ElementID",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitSearchElementID.html"
    },
    {
      "name": "Grevit Revit Structural Beam",
      "id": "Revit StructBeam",
      "library": "Grevit",
      "category": "Revit Structural Types",
      "summary": "Grevit Revit Structural Beam",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitStructuralBeam.html"
    },
    {
      "name": "Grevit Revit Structural Brace",
      "id": "Revit StructBrace",
      "library": "Grevit",
      "category": "Revit Structural Types",
      "summary": "Grevit Revit Structural Brace",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitStructuralBrace.html"
    },
    {
      "name": "Grevit Revit Structural Column",
      "id": "Revit StructColumn",
      "library": "Grevit",
      "category": "Revit Structural Types",
      "summary": "Grevit Revit Structural Column",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitStructuralColumn.html"
    },
    {
      "name": "Grevit Revit Structural Footing",
      "id": "Revit StructFooting",
      "library": "Grevit",
      "category": "Revit Structural Types",
      "summary": "Grevit Revit Structural Footing",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitStructuralFooting.html"
    },
    {
      "name": "Grevit Revit Structural UnknownFraming",
      "id": "Revit StructUnknownFraming",
      "library": "Grevit",
      "category": "Revit Structural Types",
      "summary": "Grevit Revit Structural UnknownFraming",
      "description": null,
      "iconCss": "background: url('icons/grevit.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/grevit/grevitRevitStructuralUnknownFraming.html"
    },
    {
      "name": "ESRI REST Service Geocode",
      "id": "RESTGeocode",
      "library": "Heron",
      "category": "GIS REST",
      "summary": "Get coordinates based on a Point-of-Interest or Address",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/heron/eSRIRESTServiceGeocode.html"
    },
    {
      "name": "ESRI REST Service Reverse Geocode",
      "id": "RESTRevGeo",
      "library": "Heron",
      "category": "GIS REST",
      "summary": "Get the closest addresses to XY coordinates",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/heron/eSRIRESTServiceReverseGeocode.html"
    },
    {
      "name": "Get REST Raster",
      "id": "RESTRaster",
      "library": "Heron",
      "category": "GIS REST",
      "summary": "Get raster imagery from ArcGIS REST Services",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/heron/getRESTRaster.html"
    },
    {
      "name": "Get REST Service Layers",
      "id": "RESTLayer",
      "library": "Heron",
      "category": "GIS REST",
      "summary": "Discover ArcGIS REST Service Layers",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/heron/getRESTServiceLayers.html"
    },
    {
      "name": "Get REST Vector",
      "id": "RESTVector",
      "library": "Heron",
      "category": "GIS REST",
      "summary": "Get vector data from ArcGIS REST Services",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/heron/getRESTVector.html"
    },
    {
      "name": "Decimal Degrees to XY",
      "id": "DDtoXY",
      "library": "Heron",
      "category": "GIS Tools",
      "summary": "Convert Decimal Degrees Longitude/Latitude to X/Y",
      "description": null,
      "iconCss": "background: url('icons/heron.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/heron/decimalDegreesToXY.html"
    },
    {
      "name": "Import SHP",
      "id": "ImportSHP",
      "library": "Heron",
      "category": "GIS Tools",
      "summary": "Import a Shapefile clipped to a boundary",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/heron/importSHP.html"
    },
    {
      "name": "Import Topo",
      "id": "ImportTopo",
      "library": "Heron",
      "category": "GIS Tools",
      "summary": "Create a topographic mesh from an IMG or HGT file clipped to a boundary",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/heron/importTopo.html"
    },
    {
      "name": "Set EarthAnchorPoint",
      "id": "SetEAP",
      "library": "Heron",
      "category": "GIS Tools",
      "summary": "Set the Rhino EarthAnchorPoint",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/heron/setEarthAnchorPoint.html"
    },
    {
      "name": "XY to Decimal Degrees",
      "id": "XYtoDD",
      "library": "Heron",
      "category": "GIS Tools",
      "summary": "Convert X/Y to Decimal Degrees Longitude/Latitude",
      "description": null,
      "iconCss": "background: url('icons/heron.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/heron/xYToDecimalDegrees.html"
    },
    {
      "name": "add HBGlz",
      "id": "add HBGlz",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to add a custom glazing surface to a HBSurface or HBZone",
      "description": "Use this component to add a custom glazing surface to a HBSurface or HBZone.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/addHBGlz.html"
    },
    {
      "name": "Ask Me",
      "id": "Ask Me",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to get basic information on Honeybee Objects, whether they are HBSrfs or HBZones",
      "description": "Use this component to get basic information on Honeybee Objects, whether they are HBSrfs or HBZones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/askMe.html"
    },
    {
      "name": "Change HBObj Name",
      "id": "Change HBObj Name",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Change Honeybee Object Names",
      "description": "Change Honeybee Object Names<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/changeHBObjName.html"
    },
    {
      "name": "create HBSrfs",
      "id": "create HBSrfs",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component or combined with other surfaces to make HBZones with the \"createHBZones\" component",
      "description": "Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component or combined with other surfaces to make HBZones with the \"createHBZones\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createHBSrfs.html"
    },
    {
      "name": "create HBZones",
      "id": "create HBZones",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Create an HBZone from HB Surfaces",
      "description": "Create an HBZone from HB Surfaces<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createHBZones.html"
    },
    {
      "name": "Decompose Based On Boundary Condition",
      "id": "Decompose Based On Boundary Condition",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Decompose zone surfaces by boundary condition",
      "description": "Decompose zone surfaces by boundary condition<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeBasedOnBoundaryCondition.html"
    },
    {
      "name": "Decompose Based On Type",
      "id": "Decompose Based On Type",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to break down the geometry of your zone by the surface type",
      "description": "Use this component to break down the geometry of your zone by the surface type.  This is useful for previewing your zones in the rhino scene and making sure that each surface of your zones has the correct surface type.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeBasedOnType.html"
    },
    {
      "name": "Decompose HBZone",
      "id": "Decompose HBZone",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Decompose Honeybee Zone",
      "description": "Decompose Honeybee Zone<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeHBZone.html"
    },
    {
      "name": "Dump Honeybee Objects",
      "id": "Dump Honeybee Objects",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Dump Honeybee Objects<br>Use this component to dump Honeybee objects to a file on your system",
      "description": "Dump Honeybee Objects<br>Use this component to dump Honeybee objects to a file on your system.<br>You can use load Honeybee objects to load the file to Grasshopper.<br>WARNING: This component does not write custom schedules or materials within the file but it does write the names of the constructions and schedules.<br>Accordingly, to properly load objects agian, you must connect the full strings of these objects to a \"Add to EnergyPlus Library\" component in any GH cript that loads the HBZones from the file.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/dumpHoneybeeObjects.html"
    },
    {
      "name": "Get or Set HB Object Name",
      "id": "Get or Set HB Object Name",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Change Honeybee Object Names",
      "description": "Change Honeybee Object Names<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/getOrSetHBObjectName.html"
    },
    {
      "name": "Glazing based on ratio",
      "id": "Glazing based on ratio",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to generate windows for a HBSurface or HBZone based on a desired window-to-wall ratio",
      "description": "Use this component to generate windows for a HBSurface or HBZone based on a desired window-to-wall ratio. In addition to generating window geometry that corresponds with the input ratio, this component also allows you a fairly high level of control over the window geometry.<br>The first way in which you gain additional control over geometry is the option of whether you want to generate a single window for each surface, which is good for making energy simulations run fast, or you want to use the glazig ratio to create several windows distributed across the surfaces, which is often necessary to have accurate daylight simulations or high-resolution thermal maps.<br>If you break up the window into several ones, you also have the ability to set the distance between each of the windows along the surface.<br>If you input wall surfaces that have perfectly horizontal tops and/or bottoms, you also have access to a number of other other inputs such as window height, the sill height, and whether you want to split the glazing vertically into two windows.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/glazingBasedOnRatio.html"
    },
    {
      "name": "Glazing Parameters List",
      "id": "Glazing Parameters List",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to generate lists of glazing ratios, breakUp diatance, window heigths, sill heights, or vertical glazing splits for the four primary cardinal directions",
      "description": "Use this component to generate lists of glazing ratios, breakUp diatance, window heigths, sill heights, or vertical glazing splits for the four primary cardinal directions.<br>Depeding on your intended use of the numbers connected to this component, they should be plugged into the _glzRatio, breakUpWindow_, windowHeight_, sillHeight_, or splitGlzVertically_ inputs of the \"Glazing based on ratio\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/glazingParametersList.html"
    },
    {
      "name": "Honeybee",
      "id": "Honeybee",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "This component carries all of Honeybee's main classes",
      "description": "This component carries all of Honeybee's main classes. Other components refer to these<br>classes to run the studies. Therefore, you need to let her fly before running the studies so the<br>classes will be copied to Rhinos shared space. So let her fly!<br>Honeybee: A Plugin for Environmental Analysis (GPL) started by Mostapha Sadeghipour Roudsari<br>You should have received a copy of the GNU General Public License<br>along with Honeybee; If not, see <http://www.gnu.org/licenses/>.<br>@license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+><br>Source code is available at: https://github.com/mostaphaRoudsari/Honeybee<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/honeybee.html"
    },
    {
      "name": "Intersect Masses",
      "id": "Intersect Masses",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to take a list of closed breps (polysurfaces) that you intend to turn into HBZones and split their component surfaces to ensure that there are matching surfaces between each of the adjacent zones",
      "description": "Use this component to take a list of closed breps (polysurfaces) that you intend to turn into HBZones and split their component surfaces to ensure that there are matching surfaces between each of the adjacent zones.<br>Matching surfaces and surface areas betweem adjacent zones are necessary to ensure that the conductive heat flow calculation occurs correctly across the surfaces in an energy simulation.<br>Note that the input here should be closed volumes that are adjacent to each other and touching.  They should not volumetrically overlap.<br>Also note that, while the component has been written in a manner that rarely fails if the input geometry obeys the provisions above, there are still some very complex cases that can be incorrect.<br>As such, it is recommended that you bake the output of this component and check it in Rhino before turning the breps into HBZones.  This component will get you most of the way there but these volumetric operations can be difficult to pull off with a surface modeler like Rhino so you should really check the output.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/intersectMasses.html"
    },
    {
      "name": "Label Zone Surfaces",
      "id": "Label Zone Surfaces",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to lablel HBSurfaces or HBZones with their names or energy/daylight properties in the Rhino scene",
      "description": "Use this component to lablel HBSurfaces or HBZones with their names or energy/daylight properties in the Rhino scene.  This is useful for checking whether certain properties have been assigned correctly.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/labelZoneSurfaces.html"
    },
    {
      "name": "Label Zones",
      "id": "Label Zones",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to lablel zones with their names in the Rhino scene",
      "description": "Use this component to lablel zones with their names in the Rhino scene.  This can help ensure that the correct names are assigned to each zone and can help keep track of zones and zone data throughout analysis.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/labelZones.html"
    },
    {
      "name": "Load Honeybee Objects",
      "id": "Load Honeybee Objects",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Load Honeybee Objects<br>Use this component to load Honeybee objects from a file on your system",
      "description": "Load Honeybee Objects<br>Use this component to load Honeybee objects from a file on your system.<br>The valid files are created by dump Honeybee objects component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/loadHoneybeeObjects.html"
    },
    {
      "name": "Masses2Zones",
      "id": "Masses2Zones",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to take any list of closed breps and turn them into Honeybee Zones with all of the properties needed to run them through an energy simulation",
      "description": "Use this component to take any list of closed breps and turn them into Honeybee Zones with all of the properties needed to run them through an energy simulation.<br>This includes constructions of the surfaces, boundary condtions of all of the surfaces (ie ground, exterior, etc), schedules+ loads for occupancy/internal electronics, and settings for an HVAC system if isContitioned_ is set to True.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/masses2Zones.html"
    },
    {
      "name": "Mirror Honeybee",
      "id": "Mirror Honeybee",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Mirror Honeybee Objects",
      "description": "Mirror Honeybee Objects<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/mirrorHoneybee.html"
    },
    {
      "name": "Move Honeybee",
      "id": "Move Honeybee",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Move Honeybee Objects",
      "description": "Move Honeybee Objects<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/moveHoneybee.html"
    },
    {
      "name": "Open File Directory",
      "id": "Open File Directory",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Ues this component to Open a file/directory in windows explorer",
      "description": "Ues this component to Open a file/directory in windows explorer.<br>This is particularly useful for understanding where the results of Energy/Daylight simulations are located on your system.<br>Args:<br>    _filePath: Either a File path or a Directory path that you want to open in Explorer.<br>If a file-path is provided then the directory containing the file is opened.<br>If a folder-path is provided then the folder containing that folder is opened.",
      "iconCss": "background: url('icons/honeybee.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/openFileDirectory.html"
    },
    {
      "name": "orient HBGlz",
      "id": "orient HBGlz",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to set the orientation(s) of the glazing",
      "description": "Use this component to set the orientation(s) of the glazing.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/orientHBGlz.html"
    },
    {
      "name": "Perimeter Core Zoning",
      "id": "Perimeter Core Zoning",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate zones into perimeter and core",
      "description": "Separate zones into perimeter and core<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/perimeterCoreZoning.html"
    },
    {
      "name": "Remove Glazing",
      "id": "Remove Glazing",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Remove Glazing",
      "description": "Remove Glazing <br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/removeGlazing.html"
    },
    {
      "name": "Rotate Honeybee",
      "id": "Rotate Honeybee",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Rotate Honeybee Objects",
      "description": "Rotate Honeybee Objects<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/rotateHoneybee.html"
    },
    {
      "name": "Scale Honeybee",
      "id": "Scale Honeybee",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Scale Honeybee Objects Non-Uniformly",
      "description": "Scale Honeybee Objects Non-Uniformly<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/scaleHoneybee.html"
    },
    {
      "name": "Select by Type",
      "id": "Select by Type",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Select surfaces by type",
      "description": "Select surfaces by type<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/selectByType.html"
    },
    {
      "name": "Separate By Normal",
      "id": "Separate By Normal",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate surfaces by normal",
      "description": "Separate surfaces by normal<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/separateByNormal.html"
    },
    {
      "name": "Separate conditioned and unconditioned zones",
      "id": "Separate conditioned and unconditioned zones",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate zones into conditioned and unconditioned",
      "description": "Separate zones into conditioned and unconditioned<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/separateConditionedAndUnconditionedZones.html"
    },
    {
      "name": "Separate Zones By Floor",
      "id": "Separate Zones By Floor",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate zones based on floor height",
      "description": "Separate zones based on floor height<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/separateZonesByFloor.html"
    },
    {
      "name": "Separate Zones By Orientation",
      "id": "Separate Zones By Orientation",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate zones based on orientation",
      "description": "Separate zones based on orientation<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/separateZonesByOrientation.html"
    },
    {
      "name": "Separate Zones By Program",
      "id": "Separate Zones By Program",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Separate zones based on zone program",
      "description": "Separate zones based on zone program<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/separateZonesByProgram.html"
    },
    {
      "name": "Skylight Based on Ratio",
      "id": "Skylight Based on Ratio",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to generate windows for a HBSurface or HBZone based on a desired window-to-wall ratio",
      "description": "Use this component to generate windows for a HBSurface or HBZone based on a desired window-to-wall ratio. In addition to generating window geometry that corresponds with the input ratio, this component also allows you a fairly high level of control over the window geometry.<br>The first way in which you gain additional control over geometry is the option of whether you want to generate a single window for each surface, which is good for making energy simulations run fast, or you want to use the glazig ratio to create several windows distributed across the surfaces, which is often necessary to have accurate daylight simulations or high-resolution thermal maps.<br>If you break up the window into several ones, you also have the ability to set the distance between each of the windows along the surface.<br>If you input wall surfaces that have perfectly horizontal tops and/or bottoms, you also have access to a number of other other inputs such as window height, the sill height, and whether you want to split the glazing vertically into two windows.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/skylightBasedOnRatio.html"
    },
    {
      "name": "Solve Adjacencies",
      "id": "Solve Adjacencies",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Solve adjacencies",
      "description": "Solve adjacencies<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/solveAdjacencies.html"
    },
    {
      "name": "Split Building Mass",
      "id": "Split Building Mass",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Use this component to divide up a brep (polysurface) representative of a complete building massing into smaller volumes that roughly correspond to how a generic EnergyPlus model should be zoned",
      "description": "Use this component to divide up a brep (polysurface) representative of a complete building massing into smaller volumes that roughly correspond to how a generic EnergyPlus model should be zoned.<br>This generic zoning will divide the input mass into seprate floors based on an input floor height.<br>This zoning can also divide up each floor into a core and perimeter zones, which helps account for the different microclimates you would get on each of the different orientations of a building.<br>If you have a single mass representing two towers off of a podium, the two towers are not a continuous mass and you should therefore send each tower and the podium in as a separate Brep into this component.  The component will work for courtyard buildings.<br>Core and perimeter zoneing should work for almost all masses where all walls are planar.  It works in a limited number of cases that have both curved and planar walls.  Also, it is important to note that, if your offset depth is so large in comparison to your building depth as to create perimeter zones that intersect one another, the whole floor will be returned as a single zone.<br>While this component can usually get you the most of the way there, it is still recommended that you bake the output and check the geometry in Rhino before turning the breps into HBZones.<br>The assumption about an E+ zone is that the air is well mixed and all at the same temperature.<br>Therefore, it is usually customary to break up a building depending on the areas where you would expect different building microclimates to exist.<br>This includes breaking up the building into floors (since each floor can have a different microclimate) and breanking up each floor into a core zone and perimeter zones (since each side of the buidling gets a different amount of solar gains and losses/gains through the envelope).<br>This component helps break up building masses in such a manner.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/splitBuildingMass.html"
    },
    {
      "name": "Surface Attribute List",
      "id": "srfAttributeList",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Provides a list of surface attributes to choose from and plug into the Honeybee_Label Surfaces Component",
      "description": null,
      "iconCss": "background: url('icons/honeybee.png') -144px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/surfaceAttributeList.html"
    },
    {
      "name": "Zone Attribute List",
      "id": "zoneAttributeList",
      "library": "Honeybee",
      "category": "00 | Honeybee",
      "summary": "Provides a list of preset values to choose from",
      "description": null,
      "iconCss": "background: url('icons/honeybee.png') -192px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/zoneAttributeList.html"
    },
    {
      "name": "Add to Radiance Library",
      "id": "Add to Radiance Library",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Add Radiance Materials to Library",
      "description": "Add Radiance Materials to Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/addToRadianceLibrary.html"
    },
    {
      "name": "Call from Radiance Library",
      "id": "Call from Radiance Library",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Call Radiance Materials from Library",
      "description": "Call Radiance Materials from Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/callFromRadianceLibrary.html"
    },
    {
      "name": "Radiance BSDF Material",
      "id": "Radiance BSDF Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance BSDF Material<br>Create RADIANCE BSDF material",
      "description": "Radiance BSDF Material<br>Create RADIANCE BSDF material<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceBSDFMaterial.html"
    },
    {
      "name": "Radiance Glass Material",
      "id": "Radiance Glass Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Glass Material<br>Read more here to understand Radiance materials: http://www",
      "description": "Radiance Glass Material<br>Read more here to understand Radiance materials: http://www.artifice.com/radiance/rad_materials.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceGlassMaterial.html"
    },
    {
      "name": "Radiance Glass Material By Color",
      "id": "Radiance Glass Material By Color",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Glass Material By Color<br>Read more here to understand Radiance materials: http://www",
      "description": "Radiance Glass Material By Color<br>Read more here to understand Radiance materials: http://www.artifice.com/radiance/rad_materials.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceGlassMaterialByColor.html"
    },
    {
      "name": "Radiance Materials Info",
      "id": "Radiance Materials Info",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Materials Info",
      "description": "Radiance Materials Info<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceMaterialsInfo.html"
    },
    {
      "name": "Radiance Metal Material",
      "id": "Radiance Metal Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Opaque Material<br>Create a Standard Radiance Opaque Material",
      "description": "Radiance Opaque Material<br>Create a Standard Radiance Opaque Material. Many thanks to Axel Jacobs for his help and all the great resources he provided at jaloxa.eu<br>Check out the color picker to see some great examples > http://www.jaloxa.eu/resources/radiance/colour_picker/index.shtml<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceMetalMaterial.html"
    },
    {
      "name": "Radiance Metal Material By Color",
      "id": "Radiance Metal Material By Color",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Metal Material By Color<br>Create a Standard Radiance Metal Material",
      "description": "Radiance Metal Material By Color<br>Create a Standard Radiance Metal Material. Many thanks to Axel Jacobs for his help and all the great resources he provided at jaloxa.eu<br>Check out the color picker to see some great examples > http://www.jaloxa.eu/resources/radiance/colour_picker/index.shtml<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceMetalMaterialByColor.html"
    },
    {
      "name": "Radiance Mirror Material",
      "id": "Radiance Mirror Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Mirror Material<br>Read more here to understand Radiance materials: http://www",
      "description": "Radiance Mirror Material<br>Read more here to understand Radiance materials: http://www.artifice.com/radiance/rad_materials.html<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceMirrorMaterial.html"
    },
    {
      "name": "Radiance Mirror Material By Color",
      "id": "Radiance Mirror Material By Color",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Mirror Material By Color<br>Read more here to understand Radiance materials: http://www",
      "description": "Radiance Mirror Material By Color<br>Read more here to understand Radiance materials: http://www.artifice.com/radiance/rad_materials.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceMirrorMaterialByColor.html"
    },
    {
      "name": "Radiance Opaque Material",
      "id": "Radiance Opaque Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Opaque Material<br>Create a Standard Radiance Opaque Material",
      "description": "Radiance Opaque Material<br>Create a Standard Radiance Opaque Material. Many thanks to Axel Jacobs for his help and all the great resources he provided at jaloxa.eu<br>Check out the color picker to see some great examples > http://www.jaloxa.eu/resources/radiance/colour_picker/index.shtml<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceOpaqueMaterial.html"
    },
    {
      "name": "Radiance Opaque Material By Color",
      "id": "Radiance Opaque Material By Color",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Opaque Material By Color<br>Create a Standard Radiance Opaque Material",
      "description": "Radiance Opaque Material By Color<br>Create a Standard Radiance Opaque Material. Many thanks to Axel Jacobs for his help and all the great resources he provided at jaloxa.eu<br>Check out the color picker to see some great examples > http://www.jaloxa.eu/resources/radiance/colour_picker/index.shtml<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceOpaqueMaterialByColor.html"
    },
    {
      "name": "Radiance Trans Material",
      "id": "Radiance Trans Material",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Trans Material<br>This component is useful to create translucent materials",
      "description": "Radiance Trans Material<br>This component is useful to create translucent materials. Many thanks to David Mead for his slides at:<br>http://radiance-online.org/community/workshops/2010-freiburg/PDF/DavidMead.pdf<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceTransMaterial.html"
    },
    {
      "name": "Radiance Trans Material By Color",
      "id": "Radiance Trans Material By Color",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Trans Material<br>This component is useful to create translucent materials",
      "description": "Radiance Trans Material<br>This component is useful to create translucent materials. Many thanks to David Mead for his slides at:<br>http://radiance-online.org/community/workshops/2010-freiburg/PDF/DavidMead.pdf<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/radianceTransMaterialByColor.html"
    },
    {
      "name": "Set Radiance Materials",
      "id": "Set Radiance Materials",
      "library": "Honeybee",
      "category": "01 | Daylight | Material",
      "summary": "Radiance Default Materials",
      "description": "Radiance Default Materials<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setRadianceMaterials.html"
    },
    {
      "name": "Generate Average Sky",
      "id": "Generate Average Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Generate Average Climate Based Sky<br>This component generate an average climate based data for a single hour during a month",
      "description": "Generate Average Climate Based Sky<br>This component generate an average climate based data for a single hour during a month<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateAverageSky.html"
    },
    {
      "name": "Generate Climate Based Sky",
      "id": "Generate Climate Based Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Genrate Climate Based Sky<br>This component generate a climate based sky for any hour of the year",
      "description": "Genrate Climate Based Sky<br>This component generate a climate based sky for any hour of the year<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateClimateBasedSky.html"
    },
    {
      "name": "Generate Cumulative Sky",
      "id": "Generate Cumulative Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This component generate a cumulative sky using GenCumulativeSky",
      "description": "This component generate a cumulative sky using GenCumulativeSky.exe. Only and only use it for radiation analysis (no daylighting!)<br>GenCumulativeSky is developed by Darren Robinson and Andrew Stone, and modified by Christoph Reinhart.<br>For more information, reference: http://www.solemma.net/references/PLEA2004_RobinsonAndStone.pdf<br>The first time you use this component, you need to be connected to the internet so the component can download GenCumulativeSky.exe to the working directory.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateCumulativeSky.html"
    },
    {
      "name": "Generate Custom Sky",
      "id": "Generate Custom Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Genrate Custom Sky<br>This component generate a custom sky based on user's input",
      "description": "Genrate Custom Sky<br>This component generate a custom sky based on user's input<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateCustomSky.html"
    },
    {
      "name": "Generate Dark Sky",
      "id": "Generate Dark Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This component generates a dark sky with 0 illuminance",
      "description": "This component generates a dark sky with 0 illuminance.<br>It's useful for lighting (and not daylighting) simulation with honeybee.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateDarkSky.html"
    },
    {
      "name": "Generate Sky With Certain Illuminance level",
      "id": "Generate Sky With Certain Illuminance level",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Genrate a Uniform CIE Sky Based on Illuminace Value",
      "description": "Genrate a Uniform CIE Sky Based on Illuminace Value<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateSkyWithCertainIlluminanceLevel.html"
    },
    {
      "name": "Generate Standard CIE Sky",
      "id": "Generate Standard CIE Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Genrate Standard CIE Sky",
      "description": "Genrate Standard CIE Sky<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateStandardCIESky.html"
    },
    {
      "name": "IES Custom Lamp",
      "id": "IES Custom Lamp",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This component can be used to specify a lamp of custom chromaticity, color or color temperature",
      "description": "This component can be used to specify a lamp of custom chromaticity, color or color temperature. <br>.<br>If _lampName is specified from an existing list of lamps (which can be seen by hovering over the _lampName input), then the chromaticity associated with the lamp will be used.<br>.<br>In case _lampName isn't present in the list,a lamp with chromaticity corresponding to 3200K will be defined.<br>.<br>If case the custom lamp is being defined by specifying _colorTemp_ or _xCor,_yCor_, it is recommended that the lampDetails output be connected to a text panel for displaying the chromaticity and color temperature of the lamp.<br>.<br>In case of a conflict, input options on the top will override inputs below them.<br>-<br>Technical Notes:<br>----------------------<br>The Color Matching Functions used for calculations were obtained from Wyszecki, Gunter, and Walter Stanley Stiles. Color science. Vol. 8. New York: Wiley, 1982.<br>.<br>The calculation of CCT and Duv are based on: Ohno, Yoshi. Practical use and calculation of CCT and Duv. Leukos 10.1 (2014): 47-55.<br>.<br>CCT calculations should be within +/- 0.1 % margin of error. The Planckian Table used for calculations is based on a 1% step-size.<br>.<br>While (x,y), (u,v) or (u'v') coordinates may be specified for any valid location on the chromaticity diagram, CCT and Duv will only be displayed if the absolute value of Duv is less than or equal to 0.02.<br>.<br>.<br>!!WARNING !!<br>------------------<br>The colors specified in this component only affect the luminance and chromaticity of the light source. <br>The color fidelity or gamut area of the source cannot be modified by this component.<br>So, color fidelity metrics such as CRI cannot be considered in these calculations.",
      "iconCss": "background: url('icons/honeybee.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/iESCustomLamp.html"
    },
    {
      "name": "IES Luminaire",
      "id": "IES Luminaire",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This is the core component for adding photometric data into a lighting simulation",
      "description": "This is the core component for adding photometric data into a lighting simulation. <br>It parses an IES photometric file to create a geometric representation of the photometric data on the Rhino viewport. <br>It also calls xform and ies2rad, two programs within RADIANCE, to create a RADIANCE representation of the photometric data.<br>In case _writeRad is set to True and all the other input requirements are satisfied a .rad file containing photometric information will be created.<br>This file, accessible through radFilePath should be connected to the additionalRadFiles_ input in the Honeybee Run Daylight Simulation component.<br>.<br>.<br>Technical Notes:<br>----------------------<br>The parsing of IES files is based on IES LM-63-2002. <br>.<br>This component is only compatible with Type C photometry. <br>However, if Type B photometry is to be used, external programs such as the Photometric Toolbox can be used to convert Type B photometry to Type C.<br>.<br>The luminous shapes, as defined by LM-63-2002 currently compatible with this component are rectangular, circular and rectangular with luminous openings.<br>.<br>The curves drawn for creating the luminaire web is not based on interpolation. So it is possible that the curve may look irregular in case the number of vertical angles are less.<br>.<br>Suggested practices/workflow:<br>------------------------------------------<br>The _writeRad option should only be set to True once the amiming and positioning of luminaires has been confirmed.<br>.<br>In case the photometric distribution of the luminaire is not quadrilaterally symmetric, the _drawLuminaireWeb_ option should be set to True.<br>This will help in aiming and locating the luminaire properly.<br>.<br>In case the customLamp_ option is being used, the lumen depreciation factor of the custom lamp should be properly set for illuminance or luminance calculations.",
      "iconCss": "background: url('icons/honeybee.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/iESLuminaire.html"
    },
    {
      "name": "IES Luminaire Zone",
      "id": "IES Luminaire Zone",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This component is to be used for specifying the location of luminaires for electric lighting simulations",
      "description": "This component is to be used for specifying the location of luminaires for electric lighting simulations.<br>    -<br>    For external lighting applications the best option would be to use the aimingPoint_ option to specify where all the luminaires should be aimed to.<br>    In case luminaires are being aimed by specifying spin, tilt and orientation angles, the following conventions apply:<br>1. _spin_ : specifies the rotation of a luminaire about its G0 axis.<br>2. _tilt_: species the rotation of a luminaire around the Y axis.<br>3. _orientation_: specifies the rotation of a luminaire around the Z axis.<br>    The recommended sequence of applying rotations is tilt,orientation and spin. <br>    _<br>    The aiming conventions followed in this component are based on the IES LM-63-2002 and were tested against indoor lighting simulations with AGI32 software.",
      "iconCss": "background: url('icons/honeybee.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/iESLuminaireZone.html"
    },
    {
      "name": "IES Project",
      "id": "IES Project",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "This component is meant for summarizing the details of all the luminaires used in a simulation",
      "description": "This component is meant for summarizing the details of all the luminaires used in a simulation.",
      "iconCss": "background: url('icons/honeybee.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/iESProject.html"
    },
    {
      "name": "Watch The Sky",
      "id": "Watch The Sky",
      "library": "Honeybee",
      "category": "02 | Daylight | Light Source",
      "summary": "Watch The Sky",
      "description": "Watch The Sky<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/watchTheSky.html"
    },
    {
      "name": "Advanced Dynamic Shading Recipe",
      "id": "Advanced Dynamic Shading Recipe",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Advanced Shading Recipe for Annual Simulation with Daysim",
      "description": "Advanced Shading Recipe for Annual Simulation with Daysim. This component prepares one shading group<br>You need to add sensor points later in the Daysim result reader.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/advancedDynamicShadingRecipe.html"
    },
    {
      "name": "Annual Daylight Simulation",
      "id": "Annual Daylight Simulation",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analysis Recipe for Annual Daylighting Simulation",
      "description": "Analysis Recipe for Annual Daylighting Simulation<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/annualDaylightSimulation.html"
    },
    {
      "name": "Conceptual Dynamic Shading Recipe",
      "id": "Conceptual Dynamic Shading Recipe",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Conceptual Shading Recipe for Annual Simulation with Daysim<br>You need to add sensor points later in the Daysim result reader",
      "description": "Conceptual Shading Recipe for Annual Simulation with Daysim<br>You need to add sensor points later in the Daysim result reader.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/conceptualDynamicShadingRecipe.html"
    },
    {
      "name": "Daylight Factor Simulation",
      "id": "Daylight Factor Simulation",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analysis Recipie for Daylight Factor Analysis",
      "description": "Analysis Recipie for Daylight Factor Analysis<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daylightFactorSimulation.html"
    },
    {
      "name": "Daysim Glare Control Recipe",
      "id": "Daysim Glare Control Recipe",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Glare Control Recipe for Annual Simulation with Daysim \"Based on exterior illuminance and/or position of the sun\"<br>You need to add an external sensor later in the Daysim result reader",
      "description": "Glare Control Recipe for Annual Simulation with Daysim \"Based on exterior illuminance and/or position of the sun\"<br>You need to add an external sensor later in the Daysim result reader.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimGlareControlRecipe.html"
    },
    {
      "name": "Daysim Shading State",
      "id": "Daysim Shading State",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Daysim Shading State for Advanced Dynamic Shading",
      "description": "Daysim Shading State for Advanced Dynamic Shading<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimShadingState.html"
    },
    {
      "name": "DSParameters",
      "id": "DSParameters",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analyses Recipe for Annual Daylight Simulation with Daysim",
      "description": "Analyses Recipe for Annual Daylight Simulation with Daysim<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/dSParameters.html"
    },
    {
      "name": "Generate Test Points",
      "id": "Generate Test Points",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Genrate Test Points",
      "description": "Genrate Test Points<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateTestPoints.html"
    },
    {
      "name": "Generate Zone Test Points",
      "id": "Generate Zone Test Points",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Genrate Test Points for all Floor Surfaces in Honeybee Zone",
      "description": "Genrate Test Points for all Floor Surfaces in Honeybee Zone<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateZoneTestPoints.html"
    },
    {
      "name": "Grid Based Simulation",
      "id": "Grid Based Simulation",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analysis Recipie for Grid-Based Analysis",
      "description": "Analysis Recipie for Grid-Based Analysis<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/gridBasedSimulation.html"
    },
    {
      "name": "Image Based Simulation",
      "id": "Image Based Simulation",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analysis Recipie for Image-Based Analysis",
      "description": "Analysis Recipie for Image-Based Analysis<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/imageBasedSimulation.html"
    },
    {
      "name": "RADParameters",
      "id": "RADParameters",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Radiance Parameters - Standard<br>Check here for more details: http://radsite",
      "description": "Radiance Parameters - Standard<br>Check here for more details: http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html<br>Read more about the parameters at: http://daysim.ning.com/<br>Here is my favorite presentation by John Mardaljevic: http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/rADParameters.html"
    },
    {
      "name": "Vertical Sky Component",
      "id": "Vertical Sky Component",
      "library": "Honeybee",
      "category": "03 | Daylight | Recipes",
      "summary": "Analysis Recipie for Vertical Sky Component, which is typically used to evaluate daylight and sky access in urban areas",
      "description": "Analysis Recipie for Vertical Sky Component, which is typically used to evaluate daylight and sky access in urban areas.<br>The Vertical Sky Component (VSC) is described by the UK Building Research Establishment (BRE) as the ratio of the direct sky illuminance falling on the vertical wall at a reference point, to the simultaneous horizontal illuminance under an unobstructed sky [Littlefair, 1991]. It also states that the Standard CIE Overcast Sky model is to be used for the sky illuminance distribution. This means that the reference value for the VSC percentage is effectively the unobstructed horizontal sky component.<br>The calculation performed by this component comes from this discussion on the RADIANCE forum: http://www.radiance-online.org/pipermail/radiance-general/2006-September/004017.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/verticalSkyComponent.html"
    },
    {
      "name": "Convert HDR to GIF",
      "id": "Convert HDR to GIF",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Convert HDR to GIF",
      "description": "Convert HDR to GIF<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/convertHDRToGIF.html"
    },
    {
      "name": "Convert HDR to TIF",
      "id": "Convert HDR to TIF",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Convert HDR to TIF",
      "description": "Convert HDR to TIF<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/convertHDRToTIF.html"
    },
    {
      "name": "Convert IMG",
      "id": "Convert IMG",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Convert Image",
      "description": "Convert Image<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/convertIMG.html"
    },
    {
      "name": "Convert TIF to HDR",
      "id": "Convert TIF to HDR",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Convert HDR to TIF",
      "description": "Convert HDR to TIF<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/convertTIFToHDR.html"
    },
    {
      "name": "Daysim Annual Profiles",
      "id": "Daysim Annual Profiles",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read Daysim Annual Profiles",
      "description": "Read Daysim Annual Profiles<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimAnnualProfiles.html"
    },
    {
      "name": "Daysim Electrical Lighting Use",
      "id": "Daysim Electrical Lighting Use",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim's electrical lighting use",
      "description": "Daysim's electrical lighting use<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimElectricalLightingUse.html"
    },
    {
      "name": "Daysim Occupancy Generator",
      "id": "Daysim Occupancy Generator",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim Occupancy Generator<br>Daysim calculates the outputs for the hours that the space is occupied",
      "description": "Daysim Occupancy Generator<br>Daysim calculates the outputs for the hours that the space is occupied. This componet generates a csv file that will be used as the occupancy-file. Read more here: http://daysim.ning.com/page/keyword-occupancy-profile <br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimOccupancyGenerator.html"
    },
    {
      "name": "Daysim Occupancy Generator Based On List",
      "id": "Daysim Occupancy Generator Based On List",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim Occupancy Generator<br>Daysim calculates the outputs for the hours that the space is occupied",
      "description": "Daysim Occupancy Generator<br>Daysim calculates the outputs for the hours that the space is occupied. This componet generates a csv file based on user input that will be used as the occupancy-file. Read more here: http://daysim.ning.com/page/keyword-occupancy-profile <br>You can use this component to generate a Daysim schedule based of EnergyPlus schedule.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimOccupancyGeneratorBasedOnList.html"
    },
    {
      "name": "Daysim shading group sensors",
      "id": "Daysim shading group sensors",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim shading group sensors<br>Read here for more information about Daysim sensors here: http://daysim",
      "description": "Daysim shading group sensors<br>Read here for more information about Daysim sensors here: http://daysim.ning.com/page/daysim-header-file-keyword-sensor-file-info-1<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimShadingGroupSensors.html"
    },
    {
      "name": "Daysim User Profiles",
      "id": "Daysim User Profiles",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim User Profiles<br>Read here for details: http://daysim",
      "description": "Daysim User Profiles<br>Read here for details: http://daysim.ning.com/page/daysim-header-file-keyword-user-profile<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/daysimUserProfiles.html"
    },
    {
      "name": "False Color",
      "id": "False Color",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "False Color",
      "description": "False Color<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/falseColor.html"
    },
    {
      "name": "Glare Analysis",
      "id": "Glare Analysis",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Glare Analysis<br>This component is using evalglare for glare calculations",
      "description": "Glare Analysis<br>This component is using evalglare for glare calculations. Evalgalare is developed by J. Wienold at Fraunhofer ISE.<br>http://www.ise.fraunhofer.de/en/<br>Check this link for more information about glare analysis. Thanks to Christoph Reinhart, Shelby Doyle, J Alstan Jakubiec and Rashida Mogri.<br>http://web.mit.edu/tito_/www/Projects/Glare/GlareRecommendationsForPractice.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/glareAnalysis.html"
    },
    {
      "name": "Import dgp File",
      "id": "Import dgp File",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Import Annual Daylight Glare Probability",
      "description": "Import Annual Daylight Glare Probability<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/importDgpFile.html"
    },
    {
      "name": "Import Pts File",
      "id": "Import Pts File",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Import Radiance Test Grid",
      "description": "Import Radiance Test Grid<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/importPtsFile.html"
    },
    {
      "name": "Import rad",
      "id": "Import rad",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Import a rad file to gh<br>This component is just a proof of concept for now and needs major modifications",
      "description": "Import a rad file to gh<br>This component is just a proof of concept for now and needs major modifications<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/importRad.html"
    },
    {
      "name": "Lighting control Recipe",
      "id": "Lighting control Recipe",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Daysim electrical lighting control",
      "description": "Daysim electrical lighting control. Check this link for more information about lighting control types. http://daysim.ning.com/page/keyword-lighting-control<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/lightingControlRecipe.html"
    },
    {
      "name": "Lookup Daylighting Folder",
      "id": "Lookup Daylighting Folder",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Search Simulation Folder",
      "description": "Search Simulation Folder<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/lookupDaylightingFolder.html"
    },
    {
      "name": "MSH2RAD",
      "id": "MSH2RAD",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Convert a mesh to RAD file",
      "description": "Convert a mesh to RAD file<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/mSH2RAD.html"
    },
    {
      "name": "Read All the Hourly Results from Annual Daylight Study",
      "id": "Read All the Hourly Results from Annual Daylight Study",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read the results of the annual study for a all the hours of the year for all the points",
      "description": "Read the results of the annual study for a all the hours of the year for all the points<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/readAllTheHourlyResultsFromAnnualDaylightStudy.html"
    },
    {
      "name": "Read Annual Result I",
      "id": "Read Annual Result I",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read Annual Daylight Results I [Standard Daysim Results]",
      "description": "Read Annual Daylight Results I [Standard Daysim Results]<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/readAnnualResultI.html"
    },
    {
      "name": "Read Annual Result II",
      "id": "Read Annual Result II",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read Annual Daylight Results II [Daysim]",
      "description": "Read Annual Daylight Results II [Daysim]<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readAnnualResultII.html"
    },
    {
      "name": "Read DS Result for a point",
      "id": "Read DS Result for a point",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read Daysim result for a test point",
      "description": "Read Daysim result for a test point<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readDSResultForAPoint.html"
    },
    {
      "name": "Read Hourly Results from Annual Daylight Study",
      "id": "Read Hourly Results from Annual Daylight Study",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read the results of the annual study for a single hour of the year",
      "description": "Read the results of the annual study for a single hour of the year<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readHourlyResultsFromAnnualDaylightStudy.html"
    },
    {
      "name": "Read RAD Result",
      "id": "Read RAD Result",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Read Radiance Results",
      "description": "Read Radiance Results<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readRADResult.html"
    },
    {
      "name": "Refine Daylight Simulation",
      "id": "Refine Daylight Simulation",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Refine simulation for an existing Radiance scene (",
      "description": "Refine simulation for an existing Radiance scene (.oct file)<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/refineDaylightSimulation.html"
    },
    {
      "name": "Run Daylight Simulation",
      "id": "Run Daylight Simulation",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "export geometries to rad file, and run daylighting/energy simulation",
      "description": "export geometries to rad file, and run daylighting/energy simulation<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/runDaylightSimulation.html"
    },
    {
      "name": "Set Exposure for HDR",
      "id": "Set Exposure for HDR",
      "library": "Honeybee",
      "category": "04 | Daylight | Daylight",
      "summary": "Set Exposure for HDR",
      "description": "Set Exposure for HDR<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setExposureForHDR.html"
    },
    {
      "name": "bldg Programs",
      "id": "bldgPrograms",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Provides a list of available building programs from the template",
      "description": null,
      "iconCss": "background: url('icons/honeybee.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/bldgPrograms.html"
    },
    {
      "name": "Get Energy Plus Loads",
      "id": "Get Energy Plus Loads",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Look up loads for an specific bldgProgram and zoneProgram",
      "description": "Look up loads for an specific bldgProgram and zoneProgram<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/getEnergyPlusLoads.html"
    },
    {
      "name": "Get Energy Plus Schedules",
      "id": "Get Energy Plus Schedules",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Look up schedules for an specific bldgProgram and zoneProgram",
      "description": "Look up schedules for an specific bldgProgram and zoneProgram<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/getEnergyPlusSchedules.html"
    },
    {
      "name": "Get Zone Energy Plus Loads",
      "id": "Get Zone Energy Plus Loads",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Look up loads for a Honeybee Zone",
      "description": "Look up loads for a Honeybee Zone<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/getZoneEnergyPlusLoads.html"
    },
    {
      "name": "Get Zone Energy Plus Schedules",
      "id": "Get Zone Energy Plus Schedules",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Look up schedules for a Honeybee Zone",
      "description": "Look up schedules for a Honeybee Zone<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/getZoneEnergyPlusSchedules.html"
    },
    {
      "name": "List Zone Programs",
      "id": "List Zone Programs",
      "library": "Honeybee",
      "category": "05 | Energy | Building Program",
      "summary": "Find list of spaces for each space based on program",
      "description": "Find list of spaces for each space based on program<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/listZonePrograms.html"
    },
    {
      "name": "Add to Energy Plus Library",
      "id": "Add to Energy Plus Library",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Add EnergyPlus Material, Construction or Schedule to Library",
      "description": "Add EnergyPlus Material, Construction or Schedule to Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/addToEnergyPlusLibrary.html"
    },
    {
      "name": "Call from EP Construction Library",
      "id": "Call from EP Construction Library",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Call from EP Library",
      "description": "Call from EP Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/callFromEPConstructionLibrary.html"
    },
    {
      "name": "Decompose EP Construction",
      "id": "Decompose EP Construction",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Decompose EnergyPlus Construction",
      "description": "Decompose EnergyPlus Construction<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeEPConstruction.html"
    },
    {
      "name": "Decompose EP Material",
      "id": "Decompose EP Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Decompose EnergyPlus Material",
      "description": "Decompose EnergyPlus Material<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeEPMaterial.html"
    },
    {
      "name": "Energy Plus Construction",
      "id": "Energy Plus Construction",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to make your own EnergyPlus construction",
      "description": "Use this component to make your own EnergyPlus construction.  Inputs can be either the name of a matterial form the Openstudio construction library or a custom material made with any of the EnergyPlus Material components.<br>Note that the last layer in the component is always the innermost layer and _layer_1 is always the outermost layer.<br>To add more layers in the construction, simply zoom into the component and hit the lowest \"+\" sign that shows up on the input side.  To remove layers from the construction, zoom into the component and hit the lowest \"-\" sign that shows up on the input side.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusConstruction.html"
    },
    {
      "name": "Energy Plus Glass Material",
      "id": "Energy Plus Glass Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom material for glass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom material for glass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>It is important to note that this component creates a material that represents a single pane of glass, which can be combined with the \"Honeybee_EnergyPlus Window Air Gap\" to make multi-pane windows.  If you have specifications for a whole window element and not individual panes of glass and gas, you are better-off using the \"Honeybee_EnergyPlus Window Material\" component<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusGlassMaterial.html"
    },
    {
      "name": "Energy Plus No Mass Opaque Material",
      "id": "Energy Plus No Mass Opaque Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom opaque material that has no mass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom opaque material that has no mass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>It is important to note that this component creates a material with no mass and, because of this, the accuracy of the component is not as great as a material that has mass.  However, this component is very useful if you only have an R-value for a material (or a construction) and you know that the mass is relatively small.<br>If you want to create a material that accounts for mass, you should use the \"Honeybee_EnergyPlus Window Material\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusNoMassOpaqueMaterial.html"
    },
    {
      "name": "Energy Plus Opaque Material",
      "id": "Energy Plus Opaque Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom opaque material, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom opaque material, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>This component requires you to know a lot of the characteristics of the material and, you may want to borrow some characteristcs of a similar material in the library.  Use the \"Honeybee_Call From EP Construction Library\" and the \"Honeybee_Decompose EP Material\" to help with this.<br>If you are not able to find all of the necessary material characteristcs and your desired material is relatively light, it might be easier for you to use a \"Honeybee_EnergyPlus NoMass Opaque Material.\"<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusOpaqueMaterial.html"
    },
    {
      "name": "Energy Plus Shade Material",
      "id": "Energy Plus Shade Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom material for shades, which can be plugged into the \"Honeybee_EnergyPlus Window Shade Generator\" component",
      "description": "Use this component to create a custom material for shades, which can be plugged into the \"Honeybee_EnergyPlus Window Shade Generator\" component.<br>In order to apply the material to a window shade and adjust geometric characteristics of the shade, you should plug the output of this component into a \"Honeybee_EnergyPlus Window Shade Generator\" component.<br>Note that the material characteristics here can refer to either blind slats, roller shades, perforated exterior metal screens, or the properties of electrochromic glazing in an \"on\" state.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusShadeMaterial.html"
    },
    {
      "name": "Energy Plus Window Air Gap",
      "id": "Energy Plus Window Air Gap",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom material for a window air gap, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom material for a window air gap, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>It is important to note that this component only creates gaps of air and not other gasses.<br>Also, the material out of this component represents only a single layer of air, which can be combined with the \"Honeybee_EnergyPlus Glass Material\" to make multi-pane windows.<br>If you have specifications for a whole window element and not individual panes of glass and gas, you are better-off using the \"Honeybee_EnergyPlus Window Material\" component instead of this one.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusWindowAirGap.html"
    },
    {
      "name": "Energy Plus Window Material",
      "id": "Energy Plus Window Material",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to create a custom window material that has no mass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom window material that has no mass, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>It is important to note that this component creates a material with no mass and that is meant to represent an entire window element (including all panes of glass and the frame).  Because of this, when you plug this material into the \"Honeybee_EnergyPlys Construction\" component, it is important that this is the only material connected.  Otherwise, E+ will crash when you try to run it.<br>Also because of this, the accuracy of this material is not as great as a material that has mass.  However, this component is very useful if you only have a U-value, SHGC, and VT for a window construction and no other information.<br>If you want to create a material that accounts for mass, you should use the \"Honeybee_EnergyPlus Glass Material\" component and the \"Honeybee_EnergyPlus Window Air Gap\" to create a window construction with one or multiple panes.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusWindowMaterial.html"
    },
    {
      "name": "R-Value With Air Films",
      "id": "R-Value With Air Films",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Use this component to account for air films in the U-Value and R-Value of any decomposed Honeybee construction or material",
      "description": "Use this component to account for air films in the U-Value and R-Value of any decomposed Honeybee construction or material.<br>Note that EnergyPlus has its own means of calculating the effects of air films on either side of a construction but, here, we provide an apporximate method based on an input surfaceType_.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/rValueWithAirFilms.html"
    },
    {
      "name": "Search EP Construction",
      "id": "Search EP Construction",
      "library": "Honeybee",
      "category": "06 | Energy | Material | Construction",
      "summary": "Search EnergyPlus construction based on Energy modeling standards, climate zone, surface type and building program",
      "description": "Search EnergyPlus construction based on Energy modeling standards, climate zone, surface type and building program<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/searchEPConstruction.html"
    },
    {
      "name": "Annual Schedule",
      "id": "Annual Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to generate schedules that can be assigned to HBZones",
      "description": "Use this component to generate schedules that can be assigned to HBZones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/annualSchedule.html"
    },
    {
      "name": "Call from EP Schedule Library",
      "id": "Call from EP Schedule Library",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Call from EP Schedule Library",
      "description": "Call from EP Schedule Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/callFromEPScheduleLibrary.html"
    },
    {
      "name": "Constant Schedule",
      "id": "Constant Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to generate a schedule with a constant value or a schedule with 24 values that repeat in the same 24-hour pattern every day",
      "description": "Use this component to generate a schedule with a constant value or a schedule with 24 values that repeat in the same 24-hour pattern every day.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/constantSchedule.html"
    },
    {
      "name": "Convert Energy Plus Schedule to Values",
      "id": "Convert Energy Plus Schedule to Values",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to make a 3D chart in the Rhino scene of any climate data or hourly simulation data",
      "description": "Use this component to make a 3D chart in the Rhino scene of any climate data or hourly simulation data.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/convertEnergyPlusScheduleToValues.html"
    },
    {
      "name": "Create CSV Schedule",
      "id": "Create CSV Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to write custom",
      "description": "Use this component to write custom .csv schedules for EnergyPlus using a list of numbers that you have in grasshopper.  This can be used to make custom infiltration shcedules based on indoor thermal comdort (to mimic opening of windows), shading transparency shedules based on glare or thermal comfort, etc.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createCSVSchedule.html"
    },
    {
      "name": "Daily Schedule",
      "id": "Daily Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to make daily schedules for \"Honeybee_AnnualSchedule\"",
      "description": "Use this component to make daily schedules for \"Honeybee_AnnualSchedule\". This component works with the native Grasshopper Gene Pool.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/dailySchedule.html"
    },
    {
      "name": "Decompose Energy Plus Schedule",
      "id": "Decompose Energy Plus Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Decompose Schedule",
      "description": "Decompose Schedule<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/decomposeEnergyPlusSchedule.html"
    },
    {
      "name": "Search EP Schedule Library",
      "id": "Search EP Schedule Library",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Filter EP Schedule Library",
      "description": "Filter EP Schedule Library<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/searchEPScheduleLibrary.html"
    },
    {
      "name": "Seasonal Schedule",
      "id": "Seasonal Schedule",
      "library": "Honeybee",
      "category": "07 | Energy | Schedule",
      "summary": "Use this component to generate a seasonal schedule (aka",
      "description": "Use this component to generate a seasonal schedule (aka. a schedule composed of different weekly schedules).  Using the weekSched outputs of the other schedule generating components, you can combine these to create a yearly schedule that has different week schedules for different times of the year.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/seasonalSchedule.html"
    },
    {
      "name": "Add Earthtube",
      "id": "Add Earthtube",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to add an Energy Plus earth tube to a Zone",
      "description": "Use this component to add an Energy Plus earth tube to a Zone.<br>An earth tube is a long, underground metal or plastic pipe through which air is drawn. During cooling season, as air travels through the pipe, it gives up some of its heat to the surrounding soil and enters the room as cooler air. Similarly, during heating season, as air travels through the pipe, it receives some of its heat from the soil and enters the room as warmer air. Simple earth tubes in EnergyPlus can be controlled by a schedule and through the specification of minimum, maximum, and delta temperatures as described below. As with infiltration and ventilation, the actual flow rate of air through the earth tube can be modified by the temperature difference between the inside and outside environment and the wind speed. The basic equation used to calculate air flow rate of earth tube in EnergyPlus is:<br>EarthTubeFlowRate = E*F*[A+B|Tzone-Todb|+C(Windspeed)+D(Windspeed^2)]<br>Where:<br>1. E is the maximum amount of air mass flow rate of the earth tube expected at design conditions.<br>2. F is the schedule that modifies the maximum design volume flow fraction between 0 and 1.<br>3. Tzone is the temperature of the zone which the Earthtube is attached to and Todb is the outdoor dry blub temperature as odb stands for outdoor dry blub temperature.<br>4. A,B,C and D are Constant term flow coefficients,Temperature Term flow coefficients, Velocity Term flow coefficients and Velocity squared term flow coefficients respectively they are set at the default values of 0.606,2.0199999E-02,5.9800001E-04 and 0.0000000E+00. In future versions the user will be able to specify these.<br>For more information about the Energy Plus Earthtube please see:<br>http://bigladdersoftware.com/epx/docs/8-2/input-output-reference/group-airflow.html#zoneearthtube-earth-tube<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/addEarthtube.html"
    },
    {
      "name": "Create EP Ground",
      "id": "Create EP Ground",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to change the properties of a zone to refelct those of a ground",
      "description": "Use this component to change the properties of a zone to refelct those of a ground.  This is particularly useful for setting up outdoor thermal comfort maps when you want the surface temperature of the ground to be caclated with some spatial diversity, reflecting the shadows that other objects cast upon it and the storage of heat in the ground surface.<br>The turning of a zone into a ground zone entails...<br>1) Setting all constructions to be indicative of a certain soil type (see the _soilTypeOrMat description for more information).<br>2) Setting all surfaces except the roof to have the boundary condition of 'ground', including no sun or wind exposure for these surfaces.<br>3) Getting rid of all loads and schedules within the zone.<br>All values for soil type are taken from the Engineering Toolbox, specifically these pages below...<br>Soil Conductivity - http://www.engineeringtoolbox.com/thermal-conductivity-d_429.html<br>Soil Density - http://www.engineeringtoolbox.com/dirt-mud-densities-d_1727.html<br>Soil Heat Capacity - http://www.engineeringtoolbox.com/specific-heat-capacity-d_391.html<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createEPGround.html"
    },
    {
      "name": "Create EP Plenum",
      "id": "Create EP Plenum",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to turn a HBZone into a 'Plenum Zone' with no internal loads",
      "description": "Use this component to turn a HBZone into a 'Plenum Zone' with no internal loads.  This is useful to appropriately assign conditions for closets, underfloor spaces, and drop ceilings.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createEPPlenum.html"
    },
    {
      "name": "inf ORvent Per Area Calculator",
      "id": "inf ORvent Per Area Calculator",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to transform ACH or inifitration per area of facade to m3/s-m2",
      "description": "Use this component to transform ACH or inifitration per area of facade to m3/s-m2.<br>Plug the result to the Honeybee setEPZoneLoads component, infiltrationRatePerArea_ or  infiltrationRatePerArea_ inputs<br>For the blowerPressue input, the component assumes a natural pressure differential between indoors and outdoors at 4 Pascals.  However, the passive house standard sets this at a low 0.4303.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/infORventPerAreaCalculator.html"
    },
    {
      "name": "Lighting Density Calculator",
      "id": "Lighting Density Calculator",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to calculate the Lighting Density Per Area Load from information about your bulb, fixture type, mainteneance, and required lighting level",
      "description": "Use this component to calculate the Lighting Density Per Area Load from information about your bulb, fixture type, mainteneance, and required lighting level.<br>Plug the result to the Honeybee setEPZoneLoads component, lightingDensityPerArea_ input<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/lightingDensityCalculator.html"
    },
    {
      "name": "Set Energy Plus Zone Loads",
      "id": "Set Energy Plus Zone Loads",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to change the occupancy, lighting, equipment, etc",
      "description": "Use this component to change the occupancy, lighting, equipment, etc. loads for a given Honeybee zone or list of Honeybee zones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEnergyPlusZoneLoads.html"
    },
    {
      "name": "Set Energy Plus Zone Schedules",
      "id": "Set Energy Plus Zone Schedules",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to change the schedules of your HBZones",
      "description": "Use this component to change the schedules of your HBZones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEnergyPlusZoneSchedules.html"
    },
    {
      "name": "Set Energy Plus Zone Thresholds",
      "id": "Set Energy Plus Zone Thresholds",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to set Zone Thresholds like daylighting thresholds and setpoints",
      "description": "Use this component to set Zone Thresholds like daylighting thresholds and setpoints.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -432px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEnergyPlusZoneThresholds.html"
    },
    {
      "name": "Set EP Air Flow",
      "id": "Set EP Air Flow",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Use this component to edit the airflow between your zones's air walls and/or set natural ventilation",
      "description": "Use this component to edit the airflow between your zones's air walls and/or set natural ventilation.  The natural ventilation that this component models is mostly meant for single zones and cases where there is not much airflow between zones. Specifically, this component can model a few common types of natural ventilation:<br>    1 - Single-sided Ventilation - ventilation driven by the height difference across individual windows on a single side of a building.<br>    2 - Cross Ventilation - ventilation driven by the pressure difference across windows on two opposite sides of a building.<br>    3 - Chimney Ventilation - ventilation driven by a chimney/stack that is attached to a zone.<br>    4 - Cowl Ventilation - ventilation driven by wind through a cowl attached to a zone.<br>    5 - Fan-driven Ventilation - ventilation at a constant flow rate driven by a fan.<br>The component can model \"multi-zone\" natural ventilation so long as there are no major vertical differences in height over multiple zones and the user understands that \"mixing objects\" of constant air flow are used to dsitribute incoming air between zones that are connected by an air wall.  As such, this method is not meant to model atriums or any method relying on inter-zone buoyancy-driven flow.<br>Natural ventilation (that i nt fan-driven) is computed using the following formulas:<br>Ventilation Wind = Wind Coefficient * Opening Area * Schedule * WindSpd <br>Ventilation Stack = Stack Discharge Coefficient * Opening Area * Schedule * SQRT(2 * Gravity * Operable Height * (|(Temp Zone - Temp Outdoors)| / Temp Zone)) <br>Total Ventilation = SQRT((Ventilation Wind)^2 + (Ventilation Stack)^2)<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEPAirFlow.html"
    },
    {
      "name": "Set EP Surface Construction",
      "id": "Set EP Surface Construction",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Add Glazing",
      "description": "Add Glazing<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEPSurfaceConstruction.html"
    },
    {
      "name": "Set EP Zone Construction",
      "id": "Set EP Zone Construction",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Update EP construction of zone based on type",
      "description": "Update EP construction of zone based on type<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEPZoneConstruction.html"
    },
    {
      "name": "Set EP Zone Interior Construction",
      "id": "Set EP Zone Interior Construction",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Set EP Zones Interior Construction",
      "description": "Set EP Zones Interior Construction<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEPZoneInteriorConstruction.html"
    },
    {
      "name": "Set EP Zone Underground Construction",
      "id": "Set EP Zone Underground Construction",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Update EP construction of zone based on type",
      "description": "Update EP construction of zone based on type<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setEPZoneUndergroundConstruction.html"
    },
    {
      "name": "Set Loads And Schedules",
      "id": "Set Loads And Schedules",
      "library": "Honeybee",
      "category": "08 | Energy | Set Zone Properties",
      "summary": "Set schedules and loads for zones based on program",
      "description": "Set schedules and loads for zones based on program <br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/setLoadsAndSchedules.html"
    },
    {
      "name": "Assign HVAC System",
      "id": "Assign HVAC System",
      "library": "Honeybee",
      "category": "09 | Energy | HVACSystems",
      "summary": "Use this component to assign OpenStudio Systems to your HBZones",
      "description": "Use this component to assign OpenStudio Systems to your HBZones.  By default, all HBZones are assigned an Ideal Air Loads system and this component can be used to change this to a real system from the OpenStudioHVACSystemsList component.<br>This component is also used to adjust the features of the HVAC system using the _airDetails_, _heatingDetails_, and _coolingDetails_.  Without the inputs to these Details, template OpenStudio systems will be used.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/assignHVACSystem.html"
    },
    {
      "name": "HVAC Air Details",
      "id": "HVAC Air Details",
      "library": "Honeybee",
      "category": "09 | Energy | HVACSystems",
      "summary": "Use this component to set the parameters of a HVAC ventilation system (or air side) that has been assigned with the \"Honeybee_Assign HVAC System\" component",
      "description": "Use this component to set the parameters of a HVAC ventilation system (or air side) that has been assigned with the \"Honeybee_Assign HVAC System\" component.<br>Not all of the inputs on this component are assignable features of all HVAC systems.  However, most HVAC systems have these features and, if you assign a parameter that is not usable by a certain HVAC system, the \"Honeybee_Assign HVAC System\" component will give you a warning to let you know.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/hVACAirDetails.html"
    },
    {
      "name": "HVAC Cooling Details",
      "id": "HVAC Cooling Details",
      "library": "Honeybee",
      "category": "09 | Energy | HVACSystems",
      "summary": "Use this component to set the parameters of a HVAC cooling system that has been assigned with the \"Honeybee_HVAC Systems\" component",
      "description": "Use this component to set the parameters of a HVAC cooling system that has been assigned with the \"Honeybee_HVAC Systems\" component.<br>Not all of the inputs on this component are assignable features of all HVAC systems.  However, most HVAC systems have these features and, if you assign a parameter that is not usable by a certain HVAC system, the \"Honeybee_OpenStudio Systems\" component will give you a warning to let you know.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/hVACCoolingDetails.html"
    },
    {
      "name": "HVAC Heating Details",
      "id": "HVAC Heating Details",
      "library": "Honeybee",
      "category": "09 | Energy | HVACSystems",
      "summary": "Use this component to set the parameters of a HVAC heating system that has been assigned with the \"Honeybee_HVAC Systems\" component",
      "description": "Use this component to set the parameters of a HVAC heating system that has been assigned with the \"Honeybee_HVAC Systems\" component.<br>Not all of the inputs on this component are assignable features of all HVAC systems.  However, most HVAC systems have these features and, if you assign a parameter that is not usable by a certain HVAC system, the \"Honeybee_HVAC Systems\" component will give you a warning to let you know.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/hVACHeatingDetails.html"
    },
    {
      "name": "HVACSystems List",
      "id": "HVACSystemsList",
      "library": "Honeybee",
      "category": "09 | Energy | HVACSystems",
      "summary": "List of available HVAC templates that can be assigned to HBZones",
      "description": "List of available HVAC templates that can be assigned to HBZones.",
      "iconCss": "background: url('icons/honeybee.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/hVACSystemsList.html"
    },
    {
      "name": "Adaptive Comfort Analysis Recipe",
      "id": "Adaptive Comfort Analysis Recipe",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component",
      "description": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/adaptiveComfortAnalysisRecipe.html"
    },
    {
      "name": "Add Internal Mass to Zone",
      "id": "Add Internal Mass to Zone",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to assign internal thermal masses to zones, which can be used to account for the effects of furniture inside zones or massive building components like hearths and chimneys",
      "description": "Use this component to assign internal thermal masses to zones, which can be used to account for the effects of furniture inside zones or massive building components like hearths and chimneys.<br>The component accepts either surfaces of Rhino geometry (representing furniture or building elements) or a numerical value of the mass's surface area.  Several of these components can be used in a series to descibe internal masses (or furniture) made of different materials).<br>Note that internal masses assigned this way cannot \"see\" solar radiation that may potentially hit them and, as such, caution should be taken when using this component with internal mass objects that are not always in shade.<br>Masses are only factored into the the thermal calculations of the zone by undergoing heat transfer with the indoor air.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/addInternalMassToZone.html"
    },
    {
      "name": "Balance Temperature Calculator",
      "id": "Balance Temperature Calculator",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to calculate a rough building (or zone) balance temperatrue from a Honeybee energy simulation",
      "description": "Use this component to calculate a rough building (or zone) balance temperatrue from a Honeybee energy simulation.  The balance point is the outdoor temperature at which your building is usually neither heating or cooling itself.  If the outdoor temperture drops below the balance temperature, your building will usually be heating itself and, if the outdoor temperture is above the balance temperature, the building will usually be cooling itself.<br>The balance temperture concept is useful for setting things such as automated blinds and airflow shcedules since having these things controlled by hourly cooling or heating can often introduce odd behavior resulting from idiosyncrasies in the building's schedule.<br>This component works by taking the average combined heating/cooling values for each day and the average outdoor air temperature for each day.  The days with the smallest combined heating + cooling will have their daily mean outdoor air tempertures averaged to produce the balance temperture.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/balanceTemperatureCalculator.html"
    },
    {
      "name": "Color Surfaces by EP Result",
      "id": "Color Surfaces by EP Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to color zone surfaces based on EnergyPlus data out of the \"Honeybee_Read EP Surface Result\" component",
      "description": "Use this component to color zone surfaces based on EnergyPlus data out of the \"Honeybee_Read EP Surface Result\" component.<br>By default, zone surfaces will be colored based on total energy per unit surface area in the case of energy input data or colored based on average value of each surface in the case of temperature or data that is already normalized.<br>If total annual simulation data has been connected, the analysisPeriod_ input can be used to select out a specific period fo the year for coloration.<br>In order to color surfaces by individual hours/months, connecting interger values to the \"stepOfSimulation_\" will allow you to scroll though each step of the input data.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/colorSurfacesByEPResult.html"
    },
    {
      "name": "Color Zones by EP Result",
      "id": "Color Zones by EP Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to color zones based on EnergyPlus data out of the \"Honeybee_Read EP Result\" component or zone comfort analyses out of the comfort calculator components",
      "description": "Use this component to color zones based on EnergyPlus data out of the \"Honeybee_Read EP Result\" component or zone comfort analyses out of the comfort calculator components.<br>By default, zones will be colored based on total energy per unit floor area of the zone in the case of energy input data or colored based on total average value of each zone in the case of temperature, humidity or comfort input data.<br>If total annual simulation data has been connected, the analysisPeriod_ input can be used to select out a specific period fo the year for coloration.<br>In order to color zones by individual hours/months, connecting interger values to the \"stepOfSimulation_\" will allow you to scroll though each step of the input data.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/colorZonesByEPResult.html"
    },
    {
      "name": "Construct Energy Balance",
      "id": "Construct Energy Balance",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component accepst the outputs of the \"Read EP Result\" and the \"Read EP Surface Result\" components and outputs a data tree with all of the building-wide energy balance terms",
      "description": "This component accepst the outputs of the \"Read EP Result\" and the \"Read EP Surface Result\" components and outputs a data tree with all of the building-wide energy balance terms.  This can then be plugged into the \"Ladybug_3D Chart\" or \"Ladybug_Monthly Bar Chart\" to give a visualization of the energy balance of the whole model.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/constructEnergyBalance.html"
    },
    {
      "name": "Energy Plus Window Shade Generator",
      "id": "Energy Plus Window Shade Generator",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to generate shades for Honeybee zone windows",
      "description": "Use this component to generate shades for Honeybee zone windows. The component has two main uses:<br>The first is that it can be used to assign shade objects to HBZones prior to simulation.  These shades can be dynamically controlled via a schedule.  Note that shades created this way will automatically be assigned to the zone and the windowBreps and shadeBreps outputs are just for visualization.<br>The second way to use the component is to create test shade areas for shade benefit evaluation after an energy simulation has already been run.  In this case, the component helps keep the data tree paths of heating, cooling and beam gain synced with that of the zones and windows.  For this, you would take imported EnergyPlus results and hook them up to the \"zoneData\" inputs and use the output \"zoneDataTree\" in the shade benefit evaluation.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyPlusWindowShadeGenerator.html"
    },
    {
      "name": "Energy Shade Benefit Evaluator",
      "id": "Energy Shade Benefit Evaluator",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This is a component for visualizing the desirability of shade in terms of energy simulation results by using solar vectors, the outdoor temperature, and the simulation hating load, cooling load, and beam gain",
      "description": "This is a component for visualizing the desirability of shade in terms of energy simulation results by using solar vectors, the outdoor temperature, and the simulation hating load, cooling load, and beam gain.<br>Solar vectors for hours when the building is heating contribute positively to shade desirability while solar vectors for hours when the building is cooling contribute negatively.  This conrtibution is weighted by how much the building is cooling or heating in realtion to the solar beam gain through the window in question.<br>The component outputs a colored mesh of the shade illustrating the net effect of shading each mesh face.  A higher saturation of blue indicates that shading the cell is very desirable.  A higher saturation of red indicates that shading the cell is harmful (blocking more winter sun than summer sun). Desaturated cells indicate that shading the cell will have relatively little effect on outdoor comfort or building performance.<br>The units for shade desirability are net kWh saved per unit area of shade if the test cell is blue.  If the test cell is red, the units are net heating kWh harmed per unit area of shade.<br>The method used by this component is based off of the Shaderade method developed by Christoph Reinhart, Jon Sargent, Jeffrey Niemasz.  This component uses Shaderade's method for evaluating shade and window geometry in terms of solar vectors.<br>A special thanks goes to them and their research.  A paper detailing the Shaderade method is available at:<br>http://web.mit.edu/tito_/www/Publications/BS2011_Shaderade.pdf<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/honeybee/energyShadeBenefitEvaluator.html"
    },
    {
      "name": "Energy Simulation Par",
      "id": "Energy Simulation Par",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "EnergyPlus Shadow Parameters",
      "description": "EnergyPlus Shadow Parameters<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/energySimulationPar.html"
    },
    {
      "name": "EP context Surfaces",
      "id": "EP context Surfaces",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "prepare shading/context geometries",
      "description": null,
      "iconCss": "background: url('icons/honeybee.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/ePContextSurfaces.html"
    },
    {
      "name": "Export To Open Studio",
      "id": "Export To Open Studio",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to export HBZones into an OpenStudio file, and run them through EnergyPlus",
      "description": "Use this component to export HBZones into an OpenStudio file, and run them through EnergyPlus.<br>The component outputs the report from the simulation, the file path of the IDF file, and the CSV result file from the EnergyPlus run, and two other result files that record outputs in different formats.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/honeybee/exportToOpenStudio.html"
    },
    {
      "name": "Generate EP Output",
      "id": "Generate EP Output",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component helps select simulation outputs that can be hooked into the \"Honyebee_Export to OpenStudio\" component",
      "description": "This component helps select simulation outputs that can be hooked into the \"Honyebee_Export to OpenStudio\" component.  Outputs are taken from here:<br>http://bigladdersoftware.com/epx/docs/8-3/input-output-reference/<br>You can also use the \"Honeybee_Read Result Dictionary\" component after running a simulation to get a list of all possible outputs that you can request from a given simulation.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/generateEPOutput.html"
    },
    {
      "name": "Indoor View Factor Calculator",
      "id": "Indoor View Factor Calculator",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to generate test points within a zone and calculate the view factor from each of these points to the other zurfaces in a zone as well as the sky",
      "description": "Use this component to generate test points within a zone and calculate the view factor from each of these points to the other zurfaces in a zone as well as the sky.<br>This component is a necessary step before creating an thermal map of an energy model.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/indoorViewFactorCalculator.html"
    },
    {
      "name": "Lookup Energy Plus Folder",
      "id": "Lookup Energy Plus Folder",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Search Energy Simulation Folder",
      "description": "Search Energy Simulation Folder<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/lookupEnergyPlusFolder.html"
    },
    {
      "name": "Make Adiabatic",
      "id": "Make Adiabatic",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Make Adiabatic",
      "description": "Make Adiabatic<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/makeAdiabatic.html"
    },
    {
      "name": "Make Adiabatic by Name",
      "id": "Make Adiabatic by Name",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Make Adiabatic",
      "description": "Make Adiabatic<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/makeAdiabaticByName.html"
    },
    {
      "name": "Make Adiabatic By Type",
      "id": "Make Adiabatic By Type",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to make certain surface types of a zone adiabatic",
      "description": "Use this component to make certain surface types of a zone adiabatic.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/makeAdiabaticByType.html"
    },
    {
      "name": "Matrix to Data Tree",
      "id": "Matrix to Data Tree",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component converts a comfort result matrix into a Grasshopper Data Tree with numerical values",
      "description": "This component converts a comfort result matrix into a Grasshopper Data Tree with numerical values.<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/matrixToDataTree.html"
    },
    {
      "name": "Microclimate Map Analysis",
      "id": "Microclimate Map Analysis",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component runs an annual comfort assessment off of EnergyPlus results and write all values into csv files",
      "description": "Use this component runs an annual comfort assessment off of EnergyPlus results and write all values into csv files.<br>The results in these files can be used for creating indoor comfort maps.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/microclimateMapAnalysis.html"
    },
    {
      "name": "Normalize Data by Floor Area",
      "id": "Normalize Data by Floor Area",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component takes data that has been output from a simulation and normalizes the results by the floor area of the HBZones",
      "description": "This component takes data that has been output from a simulation and normalizes the results by the floor area of the HBZones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/normalizeDataByFloorArea.html"
    },
    {
      "name": "Outdoor Comfort Analysis Recipe",
      "id": "Outdoor Comfort Analysis Recipe",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component",
      "description": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/outdoorComfortAnalysisRecipe.html"
    },
    {
      "name": "PET Analysis Recipe",
      "id": "PET Analysis Recipe",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component",
      "description": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/pETAnalysisRecipe.html"
    },
    {
      "name": "PMV Comfort Analysis Recipe",
      "id": "PMV Comfort Analysis Recipe",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component",
      "description": "Use this component to assemble an adaptive comfort recipe for the \"Honeybee_Annual Indoor Comfort Analysis\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -336px",
      "helpLink": "https://rhino.github.io/components/honeybee/pMVComfortAnalysisRecipe.html"
    },
    {
      "name": "Read EP Custom Result",
      "id": "Read EP Custom Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component reads the results of an EnergyPlus simulation from the \"Export to OpenStudio\" Component or any EnergyPlus result",
      "description": "This component reads the results of an EnergyPlus simulation from the \"Export to OpenStudio\" Component or any EnergyPlus result .csv file address.<br>The component is built to bring in any result that you desire from the csv using _keywords to search through all of the results in the file.  As such, this is particularly useful when you have requested atypical E+ outputs using the \"Honeybee_Read Result Dictionary\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readEPCustomResult.html"
    },
    {
      "name": "Read EP HVAC Result",
      "id": "Read EP HVAC Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result",
      "description": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result .csv file address.  Note that, if you use this component without the WriteIDF component, you should make sure that a corresponding .eio file is next to your .csv file at the input address that you specify.<br>This component reads only the results related to zone ideal air and earth tube HVAC systems.  For other results related to zones, you should use the \"Honeybee_Read EP Result\" component and, for results related to surfaces, you should use the \"Honeybee_Read EP Surface Result\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readEPHVACResult.html"
    },
    {
      "name": "Read EP Result",
      "id": "Read EP Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result",
      "description": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result .csv file address.  Note that, if you use this component without the WriteIDF component, you should make sure that a corresponding .eio file is next to your .csv file at the input address that you specify.<br>This component reads only the results related to zones.  For results related to surfaces, you should use the \"Honeybee_Read EP Surface Result\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readEPResult.html"
    },
    {
      "name": "Read EP Surface Result",
      "id": "Read EP Surface Result",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result",
      "description": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result .csv file address.  Note that, if you use this component without the WriteIDF component, you should make sure that a corresponding .eio file is next to your .csv file at the input address that you specify.<br>This component reads only the results related to surfaces.  For results related to zones, you should use the \"Honeybee_Read EP Result\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readEPSurfaceResult.html"
    },
    {
      "name": "Read HVAC Sizing",
      "id": "Read HVAC Sizing",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component parses an",
      "description": "This component parses an .eio file from an energy simulation and brings in the sizes of all of the HVAC equipment.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readHVACSizing.html"
    },
    {
      "name": "Read Microclimate Matrix",
      "id": "Read Microclimate Matrix",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component reads the results of an Adaptive Indoor Comfort Analysis",
      "description": "This component reads the results of an Adaptive Indoor Comfort Analysis.  Note that this usually takes about a minute<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -384px",
      "helpLink": "https://rhino.github.io/components/honeybee/readMicroclimateMatrix.html"
    },
    {
      "name": "Read Result Dictionary",
      "id": "Read Result Dictionary",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This component parses an",
      "description": "This component parses an .rdd file from an energy simulation to show all possible outputs that could be requested.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/readResultDictionary.html"
    },
    {
      "name": "Re-run IDF",
      "id": "Re-run IDF",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This is a component for running a previoulsy-generated",
      "description": "This is a component for running a previoulsy-generated .idf file through EnergyPlus.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/rerunIDF.html"
    },
    {
      "name": "Re-run OSM",
      "id": "Re-run OSM",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "This is a component for running a previoulsy-generated",
      "description": "This is a component for running a previoulsy-generated .osm file through EnergyPlus.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -360px",
      "helpLink": "https://rhino.github.io/components/honeybee/rerunOSM.html"
    },
    {
      "name": "Run Energy Simulation",
      "id": "Run Energy Simulation",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to export HBZones into an IDF file, and run them through EnergyPlus",
      "description": "Use this component to export HBZones into an IDF file, and run them through EnergyPlus.<br>The component outputs the report from the simulation, the file path of the IDF file, and the CSV result file from the EnergyPlus run.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/honeybee/runEnergySimulation.html"
    },
    {
      "name": "Shadow Par",
      "id": "Shadow Par",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "EnergyPlus Shadow Parameters",
      "description": "EnergyPlus Shadow Parameters<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/shadowPar.html"
    },
    {
      "name": "Simulation Control",
      "id": "Simulation Control",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to set EnergyPlus Simulation Controls such as whether to run certain types of HVAC sizing calculations, etc",
      "description": "Use this component to set EnergyPlus Simulation Controls such as whether to run certain types of HVAC sizing calculations, etc.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/simulationControl.html"
    },
    {
      "name": "Surface Data Based On Type",
      "id": "Surface Data Based On Type",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to separate grafed lists of surface data that come out of the \"Honeybee_Read EP Surface Result\" component based on rough surface type",
      "description": "Use this component to separate grafed lists of surface data that come out of the \"Honeybee_Read EP Surface Result\" component based on rough surface type.<br>",
      "iconCss": "background: url('icons/honeybee.png') -192px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/surfaceDataBasedOnType.html"
    },
    {
      "name": "Surface Data Based On Type Detailed",
      "id": "Surface Data Based On Type Detailed",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to separate grafed lists of surface data that come out of the \"Honeybee_Read EP Surface Result\" component based on rough surface type",
      "description": "Use this component to separate grafed lists of surface data that come out of the \"Honeybee_Read EP Surface Result\" component based on rough surface type.  This component separates all surface types but takes sevaral seconds to load and requires HBZones.  For a quicker splitting of data, use the \"Honeybee_Surface Data Based On Type\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/surfaceDataBasedOnTypeDetailed.html"
    },
    {
      "name": "Thermal Autonomy Analysis",
      "id": "Thermal Autonomy Analysis",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to calculate 'Occupied Thermal Comfort Percent' (occTCP) and 'Thermal Autonomy' (TA) from the resultd of a Microclimate Map Analysis",
      "description": "Use this component to calculate 'Occupied Thermal Comfort Percent' (occTCP) and 'Thermal Autonomy' (TA) from the resultd of a Microclimate Map Analysis.<br>'Occupied Thermal Comfort Percent' (occTCP) is defined here as the the percent of occupied time where a point of space meets or exceeds a given set of thermal comfort acceptability criteria.<br>Precedents for Thermal Comfort Percent (TCP) as a metric to spatially evaluate the desirability of a given space can be found in the PhD thesis of Tarek Rakha (http://www.tarekrakha.com/#/research/).<br>'Thermal Autonomy' (TA) is defined here as the the percent of occupied time where a point of space meets or exceeds a given set of thermal comfort acceptability criteria through passive means only.<br>Precedents for Thermal Autonomy (TA) as a metric to evaluate the passive operation of a given space can be found in the work of Brendon Levitt.<br>Levitt, B.; Ubbelohde, M.; Loisos, G.; Brown, N.  Thermal Autonomy as Metric and Design Process. Loisos + Ubbelohde, Alameda, California, California College of the Arts, San Francisco. 2013.<br>(http://www.coolshadow.com/research/Levitt_Thermal%20Autonomy%20as%20Metric%20and%20Design%20Process.pdf)<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/thermalAutonomyAnalysis.html"
    },
    {
      "name": "Visualize Microclimate Map",
      "id": "Visualize Microclimate Map",
      "library": "Honeybee",
      "category": "10 | Energy | Energy",
      "summary": "Use this component to produce a colored mesh from a comfResultsMtx",
      "description": "Use this component to produce a colored mesh from a comfResultsMtx.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/visualizeMicroclimateMap.html"
    },
    {
      "name": "Create Therm Boundaries",
      "id": "Create Therm Boundaries",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to create a THERM boundary condition",
      "description": "Use this component to create a THERM boundary condition.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createThermBoundaries.html"
    },
    {
      "name": "Create Therm Polygons",
      "id": "Create Therm Polygons",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to create a THERM polygon with material properties",
      "description": "Use this component to create a THERM polygon with material properties.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/createThermPolygons.html"
    },
    {
      "name": "Custom Radiant Environment",
      "id": "Custom Radiant Environment",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to create a custon radiant environment for THERM boundary condition",
      "description": "Use this component to create a custon radiant environment for THERM boundary condition.  Assigning values here will create radiant conditions that are different from normal NFRC conditions (where radiant temperature equals air temperature, the emissivity of the environment is assumed to be 1, and viewFactor between the boundary and the envrionment is calculated using the geometry of the boundary).<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/honeybee/customRadiantEnvironment.html"
    },
    {
      "name": "Import THERM XML",
      "id": "Import THERM XML",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to read the content of a THERM XML file into Grasshopper",
      "description": "Use this component to read the content of a THERM XML file into Grasshopper.  The component will extract both THERM polygons and boundary conditions along with all of their properties.<br>At this point in time, U-Factor tags are not supported but all other features should be imported.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/importTHERMXML.html"
    },
    {
      "name": "Import WINDOW Glz System",
      "id": "Import WINDOW Glz System",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to import the content of a LBNL WINDOW text file report as a series of polygons and boundary conditions that can be plugged into the \"Write THERM File' component",
      "description": "Use this component to import the content of a LBNL WINDOW text file report as a series of polygons and boundary conditions that can be plugged into the \"Write THERM File' component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/importWINDOWGlzSystem.html"
    },
    {
      "name": "Import WINDOW IDF Report",
      "id": "Import WINDOW IDF Report",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to import an EnergyPlus window construction from LBNL WINDOW",
      "description": "Use this component to import an EnergyPlus window construction from LBNL WINDOW.  This construction can then be assigned to any Honebee window for an EnergyPlus model.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/honeybee/importWINDOWIDFReport.html"
    },
    {
      "name": "Read THERM Result",
      "id": "Read THERM Result",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to import the colored mesh results from a THERM simulation",
      "description": "Use this component to import the colored mesh results from a THERM simulation.  Note that, because the THERM API version is not free, you will have to open the file generated by run the \"Write THERM File\" component are run it yourself (maybe in the future, we will be able to launch it from the command line).<br>Before you run the file in THERM, make sure that you go to Options > Preferences > Simulation and check \"Save Conrad results file (.O)\" in order to enure that your THERM simulation writes all results out in a format that this component understands.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/readTHERMResult.html"
    },
    {
      "name": "Therm Material",
      "id": "Therm Material",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to create a custom THERM material, which can be plugged into the \"Honeybee_Create Therm Polygons\" component",
      "description": "Use this component to create a custom THERM material, which can be plugged into the \"Honeybee_Create Therm Polygons\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/thermMaterial.html"
    },
    {
      "name": "Therm Material to Energy Plus Material",
      "id": "Therm Material to Energy Plus Material",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to create a custom opaque material, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component",
      "description": "Use this component to create a custom opaque material, which can be plugged into the \"Honeybee_EnergyPlus Construction\" component.<br>This component requires you to know a lot of the characteristics of the material and, you may want to borrow some characteristcs of a similar material in the library.  Use the \"Honeybee_Call From EP Construction Library\" and the \"Honeybee_Decompose EP Material\" to help with this.<br>If you are not able to find all of the necessary material characteristcs and your desired material is relatively light, it might be easier for you to use a \"Honeybee_EnergyPlus NoMass Opaque Material.\"<br>",
      "iconCss": "background: url('icons/honeybee.png') -216px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/thermMaterialToEnergyPlusMaterial.html"
    },
    {
      "name": "Write THERM File",
      "id": "Write THERM File",
      "library": "Honeybee",
      "category": "11 | THERM",
      "summary": "Use this component to write your THERM polygons and boundary conditions into a therm XML that can be opened ready-to-run in THERM",
      "description": "Use this component to write your THERM polygons and boundary conditions into a therm XML that can be opened ready-to-run in THERM.<br>",
      "iconCss": "background: url('icons/honeybee.png') -168px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/writeTHERMFile.html"
    },
    {
      "name": "Update Honeybee",
      "id": "Update Honeybee",
      "library": "Honeybee",
      "category": "12 | Developers",
      "summary": "This component [removes | updates] Honeybee components from [grasshopper | a source folder]",
      "description": "This component [removes | updates] Honeybee components from [grasshopper | a source folder]<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/updateHoneybee.html"
    },
    {
      "name": "Apply Open Studio Measure",
      "id": "Apply Open Studio Measure",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "This component applies an OpenStudio measure to an OpenStudio file",
      "description": "This component applies an OpenStudio measure to an OpenStudio file. The component will eventually be integrated to Export to OpenStudio component.<br>Read more about OpenStudio measures here: http://nrel.github.io/OpenStudio-user-documentation/reference/measure_writing_guide/<br>You can download several measures from here: https://bcl.nrel.gov/nrel/types/measure<br>Many thanks to NREL team for their support during the process. See (https://github.com/mostaphaRoudsari/Honeybee/issues/214) and (https://github.com/mostaphaRoudsari/Honeybee/issues/290)for just two examples!<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/honeybee/applyOpenStudioMeasure.html"
    },
    {
      "name": "Condensation calculator",
      "id": "Condensation calculator",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to calculate the Dew Point, Relative Humidity and Condensation on each layer of a wall",
      "description": "Use this component to calculate the Dew Point, Relative Humidity and Condensation on each layer of a wall. It accounts the air films (internal and external).<br>Sources:<br>http://andrew.rsmas.miami.edu/bmcnoldy/Humidity.html<br>http://www.ajdesigner.com/phphumidity/dewpoint_equation_dewpoint_temperature.php#ajscroll<br>http://forums.finehomebuilding.com/breaktime/energy-heating-insulation/dewpoint-spreadsheet<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/honeybee/condensationCalculator.html"
    },
    {
      "name": "Customize Energy Plus Objects",
      "id": "Customize Energy Plus Objects",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Customize EnergyPlus Objects [NOT READY YET!]",
      "description": "Customize EnergyPlus Objects [NOT READY YET!]<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/honeybee/customizeEnergyPlusObjects.html"
    },
    {
      "name": "Export EPC",
      "id": "Export EPC",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Export to Energy Performace Calculator (EPC)<br>",
      "description": "Export to Energy Performace Calculator (EPC)<br>... Add more description here<br>",
      "iconCss": "background: url('icons/honeybee.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/exportEPC.html"
    },
    {
      "name": "Extrude Windows",
      "id": "Extrude Windows",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Extrude pseudo walls from window polygons",
      "description": "Extrude pseudo walls from window polygons. This component has only been tested with rectangular windows.<br>",
      "iconCss": "background: url('icons/honeybee.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/extrudeWindows.html"
    },
    {
      "name": "gb XML to Honeybee",
      "id": "gb XML to Honeybee",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Import gbXML files as Honeybee zones",
      "description": "Import gbXML files as Honeybee zones.<br>This component uses OpenStudio libraries to import the file and at this point<br>the component imports geometry and constrcuctions(if available). Loads, schedules,<br>and eventually systems can be added to the component eventually.<br>You also need to solve adjacencies after importing the zones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/honeybee/gbXMLToHoneybee.html"
    },
    {
      "name": "generationsystem",
      "id": "generationsystem",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to create a Honeybee generator system",
      "description": "Use this component to create a Honeybee generator system.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generationsystem.html"
    },
    {
      "name": "Generator PV",
      "id": "Generator PV",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Provided by Honeybee 0",
      "description": "",
      "iconCss": "background: url('icons/honeybee.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generatorPV.html"
    },
    {
      "name": "Generator Wind Horizontialaxis",
      "id": "Generator Wind Horizontialaxis",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Provided by Honeybee 0",
      "description": "",
      "iconCss": "background: url('icons/honeybee.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/honeybee/generatorWindHorizontialaxis.html"
    },
    {
      "name": "Grizzly Bear",
      "id": "Grizzly Bear",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Grizzlybear exports Honeybee zones to gbXML file",
      "description": "Grizzlybear exports Honeybee zones to gbXML file<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/honeybee/grizzlyBear.html"
    },
    {
      "name": "Import idf",
      "id": "Import idf",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "import an idf file to gh<br>This version only imports the geometries<br>Constructions, schedules and systems will be neglected",
      "description": null,
      "iconCss": "background: url('icons/honeybee.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/honeybee/importIdf.html"
    },
    {
      "name": "Load Open Studio Measure",
      "id": "Load Open Studio Measure",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "This component loads OpenStudio measureds into Honeybee",
      "description": "This component loads OpenStudio measureds into Honeybee. The measure can be applied to an OpenStudio model.<br>Read more about OpenStudio measures here: http://nrel.github.io/OpenStudio-user-documentation/reference/measure_writing_guide/<br>You can download several measures from here: https://bcl.nrel.gov/nrel/types/measure<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/honeybee/loadOpenStudioMeasure.html"
    },
    {
      "name": "Open Studio to gb XML",
      "id": "Open Studio to gb XML",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to export OpenStudio model to gbXML file",
      "description": "Use this component to export OpenStudio model to gbXML file.<br>",
      "iconCss": "background: url('icons/honeybee.png') -144px -312px",
      "helpLink": "https://rhino.github.io/components/honeybee/openStudioToGbXML.html"
    },
    {
      "name": "Read generation system results",
      "id": "Read generation system results",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result",
      "description": "This component reads the results of an EnergyPlus simulation from the WriteIDF Component or any EnergyPlus result .csv file address.  Note that, if you use this component without the WriteIDF component, you should make sure that a corresponding .eio file is next to your .csv file at the input address that you specify.<br>This component reads only the results related to Honeybee generation systems.  For other results related to zones, you should use the \"Honeybee_Read EP Result\" for HVAC use the \"Honeybee_Read EP HVAC Result\" component and, for results related to surfaces, you should use the \"Honeybee_Read EP Surface Result\" component.<br>",
      "iconCss": "background: url('icons/honeybee.png') -48px -408px",
      "helpLink": "https://rhino.github.io/components/honeybee/readGenerationSystemResults.html"
    },
    {
      "name": "simple Inverter",
      "id": "simple Inverter",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Provided by Honeybee 0",
      "description": "",
      "iconCss": "background: url('icons/honeybee.png') -216px -456px",
      "helpLink": "https://rhino.github.io/components/honeybee/simpleInverter.html"
    },
    {
      "name": "Split Building Mass2Floors",
      "id": "Split2Floors",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to divide up a brep (polysurface) representative of a complete building massing into floors",
      "description": "Use this component to divide up a brep (polysurface) representative of a complete building massing into floors.<br>This generic zoning will divide the input mass into seprate floors based on an input floor height.<br>If you have a single mass representing two towers off of a podium, the two towers are not a continuous mass and you should therefore send each tower and the podium in as a separate Brep into this component.  The component will work for courtyard buildings.<br>Core and perimeter zoneing should work for almost all masses where all walls are planar.  It works in a limited number of cases that have both curved and planar walls.  Also, it is important to note that, if your offset depth is so large in comparison to your building depth as to create perimeter zones that intersect one another, the whole floor will be returned as a single zone.<br>While this component can usually get you the most of the way there, it is still recommended that you bake the output and check the geometry in Rhino before turning the breps into HBZones.<br>The assumption about an E+ zone is that the air is well mixed and all at the same temperature.<br>Therefore, it is usually customary to break up a building depending on the areas where you would expect different building microclimates to exist.<br>This includes breaking up the building into floors (since each floor can have a different microclimate) and breaking up each floor into a core zone and perimeter zones (since each side of the buidling gets a different amount of solar gains and losses/gains through the envelope).<br>This component helps break up building masses into floors, and can be used in conjunction with the Honeybee_SplitBuildingFloor2ThermalZones component to genreate core zone and perimeter zones.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/splitBuildingMass2Floors.html"
    },
    {
      "name": "Split Floor2Thermal Zones",
      "id": "Split2Zone",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to divide up a brep (polysurface) representative of a building floor into smaller volumes that roughly correspond to how a generic EnergyPlus model should be zoned",
      "description": "Use this component to divide up a brep (polysurface) representative of a building floor into smaller volumes that roughly correspond to how a generic EnergyPlus model should be zoned.<br>This zoning divide up each floor into a core and perimeter zones, which helps account for the different microclimates you would get on each of the different orientations of a building.<br>Note: Currently in this WIP convex only convex geometry can be handled. Most concave geometries will fail, and any shapes with holes in them will fail.<br>If you have a single mass representing two towers off of a podium, the two towers are not a continuous mass and you should therefore send each tower and the podium in as a separate Brep into this component.<br>Core and perimeter zoneing should work for almost all masses where all walls are planar.  <br>While this component can usually get you the most of the way there, it is still recommended that you bake the output and check the geometry in Rhino before turning the breps into HBZones.<br>The assumption about an E+ zone is that the air is well mixed and all at the same temperature.<br>Therefore, it is usually customary to break up a building depending on the areas where you would expect different building microclimates to exist.<br>This includes breaking up the building into floors (since each floor can have a different microclimate) and breaking up each floor into a core zone and perimeter zones (since each side of the buidling gets a different amount of solar gains and losses/gains through the envelope).<br>This component helps break up building masses in such a manner.<br>",
      "iconCss": "background: url('icons/honeybee.png') -120px -480px",
      "helpLink": "https://rhino.github.io/components/honeybee/splitFloor2ThermalZones.html"
    },
    {
      "name": "Visualise Honeybeegeneration cashflow",
      "id": "Visualise Honeybeegeneration cashflow",
      "library": "Honeybee",
      "category": "13 | WIP",
      "summary": "Use this component to the calculate and visualise the financial value of Honeybee generation systems over 25 years",
      "description": "Use this component to the calculate and visualise the financial value of Honeybee generation systems over 25 years. At present you can only create grid connected renewable energy systems without storage. For this reason you must specify both the grid electricity price and fed in tariff rate.<br>The financial value of the Honeybee generator systems is calculated by calculating how much energy is consumed by the facility and produced by the Honeybee generator systems for every hour of the year.<br>For every hour of the year if electricity is generated and the facility requires electricity, the facility will automatically consume the electricity generated. This will generate a revenue as the facility did not have to purchase electricity from the grid.<br>Any surplus electricity generated in any hour throughout the year will be fed back into the grid at the tariff rate, and generate a revenue.<br>",
      "iconCss": "background: url('icons/honeybee.png') -96px -504px",
      "helpLink": "https://rhino.github.io/components/honeybee/visualiseHoneybeegenerationCashflow.html"
    },
    {
      "name": "HoopSnake",
      "id": "HS",
      "library": "Hoopsnake",
      "category": "yconst.com",
      "summary": "HoopSnake Feedback Component",
      "description": null,
      "iconCss": "background: url('icons/hoopsnake.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/hoopsnake/hoopSnake.html"
    },
    {
      "name": "Bake Geometry",
      "id": "Bake",
      "library": "Human",
      "category": "Creation",
      "summary": "Bake geometry to the document with the specified attributes",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/human/bakeGeometry.html"
    },
    {
      "name": "CreateAttributes",
      "id": "CreateAtts",
      "library": "Human",
      "category": "Creation",
      "summary": "Create Object Attributes",
      "description": null,
      "iconCss": "background: url('icons/human.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/human/createAttributes.html"
    },
    {
      "name": "CreateHatch",
      "id": "CreateHatch",
      "library": "Human",
      "category": "Creation",
      "summary": "Create Hatch Objects with specified pattern, scale, rotation, and attributes",
      "description": null,
      "iconCss": "background: url('icons/human.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/human/createHatch.html"
    },
    {
      "name": "CreateLight",
      "id": "CreateLight",
      "library": "Human",
      "category": "Creation",
      "summary": "Create Light Object. So far works well for point lights and directional lights",
      "description": null,
      "iconCss": "background: url('icons/human.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/human/createLight.html"
    },
    {
      "name": "Define Block",
      "id": "DefBlock",
      "library": "Human",
      "category": "Creation",
      "summary": "This component allows you to define or replace a block definition.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/human/defineBlock.html"
    },
    {
      "name": "JustifiedText3d",
      "id": "Justified Text",
      "library": "Human",
      "category": "Creation",
      "summary": "Creates 3d Text objects with specified size, location, alignment, and font.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/human/justifiedText3d.html"
    },
    {
      "name": "PlaceBlock",
      "id": "PlaceBlock",
      "library": "Human",
      "category": "Creation",
      "summary": "Places a specified block with the desired transform",
      "description": null,
      "iconCss": "background: url('icons/human.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/human/placeBlock.html"
    },
    {
      "name": "Custom Preview Lineweights",
      "id": "PreviewLW",
      "library": "Human",
      "category": "Display",
      "summary": "Custom Preview with Lineweights",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/human/customPreviewLineweights.html"
    },
    {
      "name": "Custom Preview Materials",
      "id": "PreviewMat",
      "library": "Human",
      "category": "Display",
      "summary": "Custom Preview with Materials",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/human/customPreviewMaterials.html"
    },
    {
      "name": "Render Curve to Screen",
      "id": "CrvToScreen",
      "library": "Human",
      "category": "Display",
      "summary": "Displays a Curve object in a fixed position on screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/human/renderCurveToScreen.html"
    },
    {
      "name": "Render Mesh to Screen",
      "id": "MeshToScreen",
      "library": "Human",
      "category": "Display",
      "summary": "Displays a Mesh object in a fixed position on screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/human/renderMeshToScreen.html"
    },
    {
      "name": "Render Point to Screen",
      "id": "PtToScreen",
      "library": "Human",
      "category": "Display",
      "summary": "Displays a Point object in a fixed position on screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/human/renderPointToScreen.html"
    },
    {
      "name": "Render Text to Screen",
      "id": "TextToScreen",
      "library": "Human",
      "category": "Display",
      "summary": "Displays a text object in a fixed position on screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/human/renderTextToScreen.html"
    },
    {
      "name": "Screen-Oriented Mesh",
      "id": "ScreenMesh",
      "library": "Human",
      "category": "Display",
      "summary": "Displays a Mesh object that remains consistently oriented relative to the screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/human/screenOrientedMesh.html"
    },
    {
      "name": "Screen-Oriented Text",
      "id": "ScreenText",
      "library": "Human",
      "category": "Display",
      "summary": "Displays text that remains consistently oriented relative to the screen",
      "description": null,
      "iconCss": "background: url('icons/human.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/human/screenOrientedText.html"
    },
    {
      "name": "Screen-To-World Tag",
      "id": "S2WTag",
      "library": "Human",
      "category": "Display",
      "summary": "Creates a special display tag anchored to a location on screen and a location in your model.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/human/screenToWorldTag.html"
    },
    {
      "name": "Font Table",
      "id": "Fonts",
      "library": "Human",
      "category": "Document Info",
      "summary": "Retrieves the list of system fonts.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/human/fontTable.html"
    },
    {
      "name": "Hatch Table",
      "id": "HatchTable",
      "library": "Human",
      "category": "Document Info",
      "summary": "Gets the hatches from the active Rhino Document",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/human/hatchTable.html"
    },
    {
      "name": "Layer Table",
      "id": "LayerTable",
      "library": "Human",
      "category": "Document Info",
      "summary": "Gets the list of layers in the active document",
      "description": null,
      "iconCss": "background: url('icons/human.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/human/layerTable.html"
    },
    {
      "name": "Linetype Table",
      "id": "LT Table",
      "library": "Human",
      "category": "Document Info",
      "summary": "Gets the linetypes from the active Rhino Document",
      "description": null,
      "iconCss": "background: url('icons/human.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/human/linetypeTable.html"
    },
    {
      "name": "Material Table",
      "id": "MatTable",
      "library": "Human",
      "category": "Document Info",
      "summary": "Accesses the render materials in the document",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/human/materialTable.html"
    },
    {
      "name": "Named Views and Display Modes",
      "id": "ViewsAndModes",
      "library": "Human",
      "category": "Document Info",
      "summary": "Gets a list of the Named Views and Display Modes in this document",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/human/namedViewsAndDisplayModes.html"
    },
    {
      "name": "Viewport Properties",
      "id": "Viewports",
      "library": "Human",
      "category": "Document Info",
      "summary": "Get a list of viewports and their properties",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/human/viewportProperties.html"
    },
    {
      "name": "Create/Modify Layers",
      "id": "Layers",
      "library": "Human",
      "category": "Document Modifications",
      "summary": "Create and Modify Rhino Layers",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/human/createModifyLayers.html"
    },
    {
      "name": "Create/Modify Materials",
      "id": "Materials",
      "library": "Human",
      "category": "Document Modifications",
      "summary": "Create or Edit document Render Materials.",
      "description": "Create or Edit document Render Materials. Note: Component can only modify materials created by the component earlier - it will not recognize materials that were added manually to the Rhino document.",
      "iconCss": "background: url('icons/human.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/human/createModifyMaterials.html"
    },
    {
      "name": "Modify Object Attributes",
      "id": "ModAtts",
      "library": "Human",
      "category": "Document Modifications",
      "summary": "Use this component to modify the object attributes of geometry in Rhino.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/human/modifyObjectAttributes.html"
    },
    {
      "name": "Modify Viewport",
      "id": "Mod Viewport",
      "library": "Human",
      "category": "Document Modifications",
      "summary": "Use this component to restore a named view in a viewport, set its display mode, or set its camera.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/human/modifyViewport.html"
    },
    {
      "name": "Box2BoxXform",
      "id": "Box2Box",
      "library": "Human",
      "category": "Misc",
      "summary": "Creates a Transform that maps from one box to another. DEPRECATED - use built in Box Mapping component.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/human/box2BoxXform.html"
    },
    {
      "name": "Clickable Mesh",
      "id": "ClickM",
      "library": "Human",
      "category": "Misc",
      "summary": "Allows you to click in the Rhino Viewport to select from a list of meshes. WARNING! This will harvest ALL Rhino mouse clicks - while enabled you will not be able to use Rhinoas normal.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/human/clickableMesh.html"
    },
    {
      "name": "Convert To Document Units",
      "id": "DocUnits",
      "library": "Human",
      "category": "Misc",
      "summary": "Parses a formatted distance string (like 5'-10\") and converts it to numerical format in the active document units.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/human/convertToDocumentUnits.html"
    },
    {
      "name": "DeleteOnLayer",
      "id": "DelOnLay",
      "library": "Human",
      "category": "Misc",
      "summary": "Deletes all objects on specified Layers, then passes true.  Useful for appearing to change an object directly in a Rhino document,  in order to take advantage of advanced display capabilities.",
      "description": "Deletes all objects on specified Layers, then passes true.  Useful for appearing to change an object directly in a Rhino document,  in order to take advantage of advanced display capabilities.  WARNING: Make sure that no items on the specified layers are  referenced by any portion of your definition. This includes  both reference through standard parameters and reference  with the Human components.  IF YOU DO NOT ABIDE BY THIS WARNING YOU MAY CRASH GRASSHOPPER!",
      "iconCss": "background: url('icons/human.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/human/deleteOnLayer.html"
    },
    {
      "name": "Deserialize Image from String",
      "id": "Str2Img",
      "library": "Human",
      "category": "Misc",
      "summary": "Converts a Base-64 encoded string representing an image to a temp image file and returns the path.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/human/deserializeImageFromString.html"
    },
    {
      "name": "Directory Contents",
      "id": "Dir",
      "library": "Human",
      "category": "Misc",
      "summary": "Lists the files in a specified directory.",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/human/directoryContents.html"
    },
    {
      "name": "Dispatch Multiple",
      "id": "MDispatch",
      "library": "Human",
      "category": "Misc",
      "summary": "Dispatch multiple lists at a time. Only retrieves true values - use invert to get the others.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/human/dispatchMultiple.html"
    },
    {
      "name": "Filter By Item",
      "id": "IFilter",
      "library": "Human",
      "category": "Misc",
      "summary": "Filter a list or lists by a guide list and a subset of that guide list.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/human/filterByItem.html"
    },
    {
      "name": "PassSequentially",
      "id": "PassSeq",
      "library": "Human",
      "category": "Misc",
      "summary": "Outputs a list of data one member at a time. Useful for driving a Kangaroo simulation in a single go",
      "description": null,
      "iconCss": "background: url('icons/human.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/human/passSequentially.html"
    },
    {
      "name": "Read 3dm File",
      "id": "3dm",
      "library": "Human",
      "category": "Misc",
      "summary": "Reads objects from an external .3dm file",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/human/read3dmFile.html"
    },
    {
      "name": "Save Viewport To File",
      "id": "SaveView",
      "library": "Human",
      "category": "Misc",
      "summary": "Saves a viewport screenshot or render to a specified filepath.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/human/saveViewportToFile.html"
    },
    {
      "name": "Serialize Image to String",
      "id": "Img2Str",
      "library": "Human",
      "category": "Misc",
      "summary": "Converts an image file into a text string that can be embedded in your file. Don't use it for large images!",
      "description": null,
      "iconCss": "background: url('icons/human.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/human/serializeImageToString.html"
    },
    {
      "name": "Dynamic Geometry Pipeline",
      "id": "DPipeline",
      "library": "Human",
      "category": "Reference",
      "summary": "Defines a Geometry Pipeline from Rhino to Grasshopper, with variable filters for name, object type, and layer.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/human/dynamicGeometryPipeline.html"
    },
    {
      "name": "Explode Blocks",
      "id": "BlockExplode",
      "library": "Human",
      "category": "Reference",
      "summary": "Explodes a set of Instance Objects into their proper geometry",
      "description": null,
      "iconCss": "background: url('icons/human.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/human/explodeBlocks.html"
    },
    {
      "name": "Explode Blocks Recursively",
      "id": "BlockExplode R",
      "library": "Human",
      "category": "Reference",
      "summary": "Recursively explodes a set of Instance Objects into their proper geometry, structured in a Data Tree according to block nesting.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/human/explodeBlocksRecursively.html"
    },
    {
      "name": "Hatch Explode",
      "id": "HatchExp",
      "library": "Human",
      "category": "Reference",
      "summary": "Gets the geometry and properties of a referenced hatch object",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/human/hatchExplode.html"
    },
    {
      "name": "LightProperties",
      "id": "LightProps",
      "library": "Human",
      "category": "Reference",
      "summary": "Reads Light Properties from a Rhino.DocObjects.LightObject",
      "description": null,
      "iconCss": "background: url('icons/human.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/human/lightProperties.html"
    },
    {
      "name": "Object Attributes",
      "id": "ObjAtts",
      "library": "Human",
      "category": "Reference",
      "summary": "Access the individual attributes of a RhinoObject or an ObjectAttributes type.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/human/objectAttributes.html"
    },
    {
      "name": "Objects By Layer",
      "id": "ObjsByLayer",
      "library": "Human",
      "category": "Reference",
      "summary": "Get the Rhino Objects on a specified layer. - DEPRECATED - use Dynamic Pipeline",
      "description": null,
      "iconCss": "background: url('icons/human.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/human/objectsByLayer.html"
    },
    {
      "name": "Objects By Selection",
      "id": "SelObj",
      "library": "Human",
      "category": "Reference",
      "summary": "Gets the currently selected objects in Rhino",
      "description": null,
      "iconCss": "background: url('icons/human.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/human/objectsBySelection.html"
    },
    {
      "name": "Reinstate Tree",
      "id": "ReTree",
      "library": "Human",
      "category": "Reference",
      "summary": "This component works to bring back data tree structure for referenced geometry that has been baked with \"Bake Geometry\" with the \"Preserve Trees\" option enabled.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/human/reinstateTree.html"
    },
    {
      "name": "Sort Objects By Type",
      "id": "SortByType",
      "library": "Human",
      "category": "Reference",
      "summary": "Sorts a set of Rhino Objects by type and extracts the Geometry for types that already exist in Grasshopper.",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/human/sortObjectsByType.html"
    },
    {
      "name": "Text Object Info",
      "id": "TxtObjInfo",
      "library": "Human",
      "category": "Reference",
      "summary": "Gets the location, orientation plane, alignment, and text from a referenced text object.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/human/textObjectInfo.html"
    },
    {
      "name": "BoxMapping",
      "id": "BoxMap",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies a box texture mapping to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/human/boxMapping.html"
    },
    {
      "name": "Custom Mapping",
      "id": "Custom Map",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies per-vertex mesh texture coordinates to a mesh",
      "description": null,
      "iconCss": "background: url('icons/human.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/human/customMapping.html"
    },
    {
      "name": "CylinderMapping",
      "id": "CylinderMap",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies a cylindrical texture mapping to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/human/cylinderMapping.html"
    },
    {
      "name": "PlanarMapping",
      "id": "PlanarMap",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies a planar texture mapping to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/human.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/human/planarMapping.html"
    },
    {
      "name": "SphericalMapping",
      "id": "SphericalMap",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies a spherical texture mapping to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/human/sphericalMapping.html"
    },
    {
      "name": "SurfaceMapping",
      "id": "SurfaceMap",
      "library": "Human",
      "category": "Texture Mapping",
      "summary": "Applies a surface UV texture mapping to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/human.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/human/surfaceMapping.html"
    },
    {
      "name": "Create Border",
      "id": "Border",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Wrap Elements with a border.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/createBorder.html"
    },
    {
      "name": "Create Expander",
      "id": "Expander",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "A collapsible expander for content",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createExpander.html"
    },
    {
      "name": "Create Grid",
      "id": "Grid",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Create a container with absolutely positioned elements",
      "description": "Create a container with absolutely positioned elements. <br> Their input order determines their Z order - set the margins <br>with the \"Adjust Element Positioning\" component to locate <br>elements inside the grid.<br> Use column and row definitions to create more advanced grids.",
      "iconCss": "background: url('icons/humanUI.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createGrid.html"
    },
    {
      "name": "Create Scroll Viewer",
      "id": "ScrollViewer",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Allows an element to scroll independently of the rest of the window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createScrollViewer.html"
    },
    {
      "name": "Create Simple Grid",
      "id": "SimpleGrid",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Create a container with elements in a grid according to the path structure provided",
      "description": "Create a container with elements in a grid according to the path structure provided. Each branch path will be treated as a column and Elements will be placed in the column from top to bottom. Use the \"Adjust Element Positioning\" component to locate elements inside the grid cell. Use column and row definitions to control sizing.",
      "iconCss": "background: url('icons/humanUI.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createSimpleGrid.html"
    },
    {
      "name": "Create Stack",
      "id": "Stack",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Creates a group of UI elements stacked vertically or horizontally.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createStack.html"
    },
    {
      "name": "Create View Box",
      "id": "ViewBox",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Scale a group of UI Elements by placing them in a ViewBox.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/createViewBox.html"
    },
    {
      "name": "Create WrapPanel",
      "id": "WrapPanel",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Creates a group of UI elements WrapPaneled vertically or horizontally.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/createWrapPanel.html"
    },
    {
      "name": "Tabbed View",
      "id": "Tabs",
      "library": "Human UI",
      "category": "UI Containers",
      "summary": "Creates a series of tabbed views that can contain UI element layouts",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/humanui/tabbedView.html"
    },
    {
      "name": "Attach Tooltip to Element",
      "id": "Tooltip",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Attach a tooltip to a UI element",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/attachTooltipToElement.html"
    },
    {
      "name": "Create 3D View",
      "id": "3DView",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates an orbitable 3d viewport with a custom-defined mesh",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/create3DView.html"
    },
    {
      "name": "Create Browser",
      "id": "Browser",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a web browser window.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/createBrowser.html"
    },
    {
      "name": "Create Button",
      "id": "Button",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a Button object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/createButton.html"
    },
    {
      "name": "Create Checkbox",
      "id": "Checkbox",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a single checkbox",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createCheckbox.html"
    },
    {
      "name": "Create Checklist",
      "id": "Checklist",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a listbox containing checkboxes.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createChecklist.html"
    },
    {
      "name": "Create Color Picker",
      "id": "ColorPicker",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates an interactive color picker, with an optionally supplied set of colors",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createColorPicker.html"
    },
    {
      "name": "Create Data Table",
      "id": "DataTable",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a Data Table view",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createDataTable.html"
    },
    {
      "name": "Create File Picker",
      "id": "FilePicker",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a dialog box that lets you choose a path for a file, folder, or save path.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createFilePicker.html"
    },
    {
      "name": "Create Gradient Editor",
      "id": "Gradient",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates an editable gradient in the UI",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createGradientEditor.html"
    },
    {
      "name": "Create Graph Mapper",
      "id": "GraphMapper",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a Bezier Graph Mapper",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createGraphMapper.html"
    },
    {
      "name": "Create Image",
      "id": "Image",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates an image object to be added to the window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createImage.html"
    },
    {
      "name": "Create Label",
      "id": "Label",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a label in the window.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createLabel.html"
    },
    {
      "name": "Create List Box",
      "id": "ListBox",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a list box from which items can be selected.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createListBox.html"
    },
    {
      "name": "Create Markdown Viewer",
      "id": "MDV",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a block of formatted text based on Markdown-formatted input",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createMarkdownViewer.html"
    },
    {
      "name": "Create Multidimensional Slider",
      "id": "MD Slider",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a 2D slider ranging from {0,0} to {1,1}",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createMultidimensionalSlider.html"
    },
    {
      "name": "Create Objects from XAML",
      "id": "XAML",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates UI elements from typed XAML syntax",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createObjectsFromXAML.html"
    },
    {
      "name": "Create Pulldown Menu",
      "id": "Pulldown",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a pulldown menu from which items can be selected.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createPulldownMenu.html"
    },
    {
      "name": "Create Radio Button",
      "id": "RadioBtn",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a single radio button. Be sure to assign a radio button group for proper switching behavior",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createRadioButton.html"
    },
    {
      "name": "Create Range Slider",
      "id": "RangeSlider",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a double-slider that describes a range",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createRangeSlider.html"
    },
    {
      "name": "Create Rhino Command Button",
      "id": "CmdButton",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a Special Button object to trigger a Rhino command.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createRhinoCommandButton.html"
    },
    {
      "name": "Create Rhino Pick Button",
      "id": "PickBtn",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a special Button object to pick geometry from Rhino.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createRhinoPickButton.html"
    },
    {
      "name": "Create Separator",
      "id": "Separator",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a line separator object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createSeparator.html"
    },
    {
      "name": "Create Shape",
      "id": "Shape",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a simple shape from a polyline",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createShape.html"
    },
    {
      "name": "Create Shapes",
      "id": "Shapes",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates shapes from a polylines",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createShapes.html"
    },
    {
      "name": "Create Slider",
      "id": "Slider",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a slider with a label and a value readout.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createSlider.html"
    },
    {
      "name": "Create Text Block",
      "id": "TB",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates a multi-line text block",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/humanui/createTextBlock.html"
    },
    {
      "name": "Create Text Box",
      "id": "TextBox",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a box for text entry, with a button to pass its value.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/createTextBox.html"
    },
    {
      "name": "Create Toggle",
      "id": "Toggle",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Creates an on-off toggle.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/createToggle.html"
    },
    {
      "name": "Create True-Only Button",
      "id": "True Button",
      "library": "Human UI",
      "category": "UI Elements",
      "summary": "Create a True only Button object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/createTrueOnlyButton.html"
    },
    {
      "name": "Chart Appearance",
      "id": "ChartAppearance",
      "library": "Human UI",
      "category": "UI Graphs + Charts",
      "summary": "Use this to set the appearance of a Chart",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/chartAppearance.html"
    },
    {
      "name": "Create Chart",
      "id": "Chart",
      "library": "Human UI",
      "category": "UI Graphs + Charts",
      "summary": "Creates a Chart from Data and Categories.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/humanui/createChart.html"
    },
    {
      "name": "Create Multi Chart",
      "id": "MultiChart",
      "library": "Human UI",
      "category": "UI Graphs + Charts",
      "summary": "Creates a Multi Chart from sets of Data and Categories.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/humanui/createMultiChart.html"
    },
    {
      "name": "Set Chart Contents",
      "id": "SetChart",
      "library": "Human UI",
      "category": "UI Graphs + Charts",
      "summary": "Use this to set the contents of a Chart",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setChartContents.html"
    },
    {
      "name": "Set Multi Chart Contents",
      "id": "SetMultiChart",
      "library": "Human UI",
      "category": "UI Graphs + Charts",
      "summary": "Use this to set the contents of a MultiChart",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setMultiChartContents.html"
    },
    {
      "name": "Add Elements",
      "id": "AddElems",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Add WPF Controls to a window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/addElements.html"
    },
    {
      "name": "Adjust Element Appearance",
      "id": "AdjustElem",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Adjust the color and appearance of individual elements.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/adjustElementAppearance.html"
    },
    {
      "name": "Adjust Element Positioning",
      "id": "AdjustPos",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Adjust the margins, sizing, and other positioning information of an element. <br>Absolute positioning can get a little wonky, use at your own risk.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/adjustElementPositioning.html"
    },
    {
      "name": "Capture Window or Element to File",
      "id": "Capture",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Capture a HUI Window or individual element to an image",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/captureWindowOrElementToFile.html"
    },
    {
      "name": "Container Contents",
      "id": "Contents",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Gets the child elements of a container element like a Stack or a Tab",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/containerContents.html"
    },
    {
      "name": "Filter UI Elements",
      "id": "Filter",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "This component allows you to select UI elements from a window by name, to let you listen for their values or set their properties dynamically.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/filterUIElements.html"
    },
    {
      "name": "Get Element Properties",
      "id": "GetProps",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Tries to get all properties of any element. This is experimental!",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/getElementProperties.html"
    },
    {
      "name": "Get Screen Dimensions",
      "id": "GetScreen",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Gets the dimensions of the current screen",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/getScreenDimensions.html"
    },
    {
      "name": "Hide/Show Element",
      "id": "HideShow",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Allows you to hide or show an element",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/hideShowElement.html"
    },
    {
      "name": "Launch Transparent Window",
      "id": "LaunchXPWin",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "This component launches a new blank, transparent control window.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/launchTransparentWindow.html"
    },
    {
      "name": "Launch Window",
      "id": "LaunchWin",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "This component launches a new blank control window.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/launchWindow.html"
    },
    {
      "name": "Make Child Window",
      "id": "ChildWin",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Make one window a child of another",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/makeChildWindow.html"
    },
    {
      "name": "Restore Element States",
      "id": "Restore",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Restore the saved states of UI elements",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/restoreElementStates.html"
    },
    {
      "name": "Save Element States",
      "id": "SaveStates",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "This component lets you save the states of selected elements for later retrieval",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/saveElementStates.html"
    },
    {
      "name": "Set Element Property",
      "id": "SetProp",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Tries to set any property of an element. This is experimental!",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setElementProperty.html"
    },
    {
      "name": "Set Window Properties",
      "id": "WinProps",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Modify various properties of a Window.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/humanui/setWindowProperties.html"
    },
    {
      "name": "Value Listener",
      "id": "Values",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "This component is used to retrieve the values of UI elements from the window. By default it will automatically refresh when those values change.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/humanui/valueListener.html"
    },
    {
      "name": "Window Status",
      "id": "WinStat",
      "library": "Human UI",
      "category": "UI Main",
      "summary": "Gets the current status of the specified Window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/humanui/windowStatus.html"
    },
    {
      "name": "Add Elements to Shape(s)",
      "id": "AddElem2Shape",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Put UI Elements (Like text!) over the top of a shape/shapes element",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/humanui/addElementsToShapes.html"
    },
    {
      "name": "Set 3D View",
      "id": "Set3DView",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Allows you to modify the contents of an existing 3D view.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/set3DView.html"
    },
    {
      "name": "Set 3D View Properties",
      "id": "Set3DViewProps",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Additional controls for modifying a 3D view",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/set3DViewProperties.html"
    },
    {
      "name": "Set 3D View Textured",
      "id": "Set3DViewTex",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Allows you to modify the contents of an existing 3D view.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/set3DViewTextured.html"
    },
    {
      "name": "Set Browser",
      "id": "SetBrowser",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Control the Browser element - with back/forward buttons, and control over the displayed site etc.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/humanui/setBrowser.html"
    },
    {
      "name": "Set Button",
      "id": "SetBtn",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Change the content of an existing Button element.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setButton.html"
    },
    {
      "name": "Set CheckBox",
      "id": "SetCheckBox",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify an existing Check Box object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setCheckBox.html"
    },
    {
      "name": "Set Checklist Contents",
      "id": "SetChecklist",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Use this to set the contents of a checklist",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setChecklistContents.html"
    },
    {
      "name": "Set Color Picker",
      "id": "SetColorPicker",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Use this to set the values of a color picker",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setColorPicker.html"
    },
    {
      "name": "Set Data Table",
      "id": "SetDataTable",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Update the contents of a Data Table",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setDataTable.html"
    },
    {
      "name": "Set Expander",
      "id": "SetExp",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Sets the properties of an expander container",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setExpander.html"
    },
    {
      "name": "Set Image",
      "id": "SetImg",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Change the content of an existing Image control.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/humanui/setImage.html"
    },
    {
      "name": "Set Label Contents",
      "id": "SetLabel",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify the contents of an existing label object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setLabelContents.html"
    },
    {
      "name": "Set List Contents",
      "id": "SetList",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Use this to set the contents of either a List Box or a Pulldown Menu",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setListContents.html"
    },
    {
      "name": "Set Multidimensional Slider",
      "id": "SetMDSlider",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify the value of a multidimensional slider.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setMultidimensionalSlider.html"
    },
    {
      "name": "Set Shape",
      "id": "SetShape",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Replace an existing shape in the window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setShape.html"
    },
    {
      "name": "Set Shapes",
      "id": "SetShapes",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Replace an existing shape in the window",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setShapes.html"
    },
    {
      "name": "Set Slider",
      "id": "SetSlider",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify the range and value of a slider.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setSlider.html"
    },
    {
      "name": "Set Tabbed View",
      "id": "SetTab",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Sets the properties of a tabbed view",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setTabbedView.html"
    },
    {
      "name": "Set TextBlock Contents",
      "id": "SetTextBlock",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify the contents of an existing Text Block object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setTextBlockContents.html"
    },
    {
      "name": "Set TextBox Contents",
      "id": "SetTextBox",
      "library": "Human UI",
      "category": "UI Output",
      "summary": "Modify the contents of an existing Text Box object.",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/humanui/setTextBoxContents.html"
    },
    {
      "name": "ElemFromGuid",
      "id": "Nickname",
      "library": "Human UI",
      "category": "UI Testing",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/humanUI.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/humanui/elemFromGuid.html"
    },
    {
      "name": "Adap Comps",
      "id": "AdapComps",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Adaptive Components",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/adapComps.html"
    },
    {
      "name": "Beams",
      "id": "Beams",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Beams",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/beams.html"
    },
    {
      "name": "Columns",
      "id": "Columns",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Columns",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/columns.html"
    },
    {
      "name": "Families",
      "id": "Families",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Revit Families",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/families.html"
    },
    {
      "name": "Filled Regions",
      "id": "FilledRegions",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add FilledRegions",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/filledRegions.html"
    },
    {
      "name": "Floors",
      "id": "Floors",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Floors",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/floors.html"
    },
    {
      "name": "Grids",
      "id": "Grids",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Revit Grid Lines",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/grids.html"
    },
    {
      "name": "Input",
      "id": "Input",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Read Input",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/input.html"
    },
    {
      "name": "Levels",
      "id": "Levels",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Revit Levels",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/levels.html"
    },
    {
      "name": "Lines",
      "id": "Lines",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Revit Lines",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/hummingbird/lines.html"
    },
    {
      "name": "Loft Forms",
      "id": "LoftForms",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add LoftForm from Reference Points",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/hummingbird/loftForms.html"
    },
    {
      "name": "Mass Families",
      "id": "MassFamilies",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Mass Family Extrusion",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/hummingbird/massFamilies.html"
    },
    {
      "name": "Rooms/Areas",
      "id": "Rooms/Areas",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Rooms & Areas",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/hummingbird/roomsAreas.html"
    },
    {
      "name": "Topo Surface",
      "id": "TopoSurface",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Revit Topo Surface",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/hummingbird/topoSurface.html"
    },
    {
      "name": "Walls",
      "id": "Walls",
      "library": "Hummingbird",
      "category": "Hummingbird",
      "summary": "WhiteFeet ModelBuilder - Add Walls",
      "description": null,
      "iconCss": "background: url('icons/hummingbird.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/hummingbird/walls.html"
    },
    {
      "name": "Custom Cell",
      "id": "CustomCell",
      "library": "IntraLattice",
      "category": "Cell",
      "summary": "Pre-processes a custom unit cell by check validity and outputting topology.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/customCell.html"
    },
    {
      "name": "Preset Cell",
      "id": "PresetCell",
      "library": "IntraLattice",
      "category": "Cell",
      "summary": "Built-in selection of unit cell topologies.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/presetCell.html"
    },
    {
      "name": "Basic Box",
      "id": "BasicBox",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a lattice box.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/basicBox.html"
    },
    {
      "name": "Basic Cylinder",
      "id": "BasicCylinder",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a conformal lattice cylinder.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/basicCylinder.html"
    },
    {
      "name": "Conform Surface-Axis",
      "id": "ConformSA",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a conforming lattice between a surface and an axis.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/conformSurfaceAxis.html"
    },
    {
      "name": "Conform Surface-Point",
      "id": "ConformSP",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a conforming lattice between a surface and a point.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/conformSurfacePoint.html"
    },
    {
      "name": "Conform Surface-Surface",
      "id": "ConformSS",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a conforming lattice between two surfaces.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/conformSurfaceSurface.html"
    },
    {
      "name": "Uniform DS",
      "id": "UniformDS",
      "library": "IntraLattice",
      "category": "Frame",
      "summary": "Generates a uniform lattice within by a design space",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/uniformDS.html"
    },
    {
      "name": "Adjust UV",
      "id": "AdjustUV",
      "library": "IntraLattice",
      "category": "IntralatticeUtils",
      "summary": "Adjusts the UV-map of a surface for proper alignment with other surfaces/axes.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/adjustUV.html"
    },
    {
      "name": "Heterogen Custom",
      "id": "HeterogenCustom",
      "library": "IntraLattice",
      "category": "Mesh",
      "summary": "Heterogeneous solidification of lattice wireframe",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/heterogenCustom.html"
    },
    {
      "name": "Heterogen Gradient",
      "id": "HeterogenGradient",
      "library": "IntraLattice",
      "category": "Mesh",
      "summary": "Heterogeneous solidification (thickness gradient) of lattice wireframe",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/heterogenGradient.html"
    },
    {
      "name": "Homogen",
      "id": "Homogen",
      "library": "IntraLattice",
      "category": "Mesh",
      "summary": "Homogeneous solidification of lattice wireframe",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/homogen.html"
    },
    {
      "name": "Clean Network",
      "id": "CleanNetwork",
      "library": "IntraLattice",
      "category": "Utils",
      "summary": "Removes duplicate curves from a network, within specified tolerance.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/intralattice/cleanNetwork.html"
    },
    {
      "name": "Mesh Preview",
      "id": "MeshPreview",
      "library": "IntraLattice",
      "category": "Utils",
      "summary": "Generates a preview of the mesh.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/meshPreview.html"
    },
    {
      "name": "Mesh Report",
      "id": "MeshReport",
      "library": "IntraLattice",
      "category": "Utils",
      "summary": "Verifies that the mesh represents a solid, and returns a comprehensive report.",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/meshReport.html"
    },
    {
      "name": "Preset Gradient",
      "id": "PresetGradient",
      "library": "IntraLattice",
      "category": "Utils",
      "summary": "Generates gradient string (i.e. a spatial math expression)",
      "description": null,
      "iconCss": "background: url('icons/intraLattice.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/intralattice/presetGradient.html"
    },
    {
      "name": "Graph Edges",
      "id": "Edges",
      "library": "Ivy",
      "category": "1|Mesh Graph",
      "summary": "Outputs the relevant information (geometric and numeric) stored in the MeshGraph object edges",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/graphEdges.html"
    },
    {
      "name": "Graph from Mesh",
      "id": "GrphMsh",
      "library": "Ivy",
      "category": "1|Mesh Graph",
      "summary": "Creates the graph correspondence of a mesh. Faces will be nodes in graph and the mesh topological edges will be the edges in the graph",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/graphFromMesh.html"
    },
    {
      "name": "Graph Nodes",
      "id": "Nodes",
      "library": "Ivy",
      "category": "1|Mesh Graph",
      "summary": "Outputs the relevant information (geometric and numeric) stored in the MeshGraph object nodes",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/graphNodes.html"
    },
    {
      "name": "Graph to Mesh",
      "id": "Grph2Msh",
      "library": "Ivy",
      "category": "1|Mesh Graph",
      "summary": "Creates the mesh from the graph nodes(faces) and edges. Only the nodes still present in the graph will be referenced back into mesh faces.",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/graphToMesh.html"
    },
    {
      "name": "Color Edge Weight",
      "id": "ColorWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign a weight value to graph edges based on the color averaged for an edge. Values will be normalized to the 0...1 interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/colorEdgeWeight.html"
    },
    {
      "name": "Custom Edge Weight",
      "id": "cEdgeWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign a custom weight to graph edges - Warning ! If you reference mesh edges, naked edges will not be considered. Values are normalized in the 0..1 interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/customEdgeWeight.html"
    },
    {
      "name": "Custom Face Weight",
      "id": "cFaceWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign a custom weight to graph nodes (mesh Faces). Values are normalized in the 0..1 interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/customFaceWeight.html"
    },
    {
      "name": "Face Angle Edge Weight",
      "id": "FAWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign a weight value to graph edges based on the angle between the faces connected by an edge. Values will be normalized to the 0...1 interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/faceAngleEdgeWeight.html"
    },
    {
      "name": "Face Midpoint Distance Edge Weight",
      "id": "MDistWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign a weight value to graph edges based on the distance between the midpoints of the faces the edge conects. Values will be normalized to the 0...1 interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/faceMidpointDistanceEdgeWeight.html"
    },
    {
      "name": "Face Size Node(mesh face) Weight",
      "id": "fsFaceWeight",
      "library": "Ivy",
      "category": "2|Weight Graph",
      "summary": "Assign weight to graph nodes based on the area of the mesh faces. Largest faces will have the smallest values.",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/faceSizeNodemeshFaceWeight.html"
    },
    {
      "name": "Agents Control Random",
      "id": "AgentsCR",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Create a series of trees on the given graph that spread out based on the limits imposed and the behavior given as a chance pick between two characters Explore and Consume",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/agentsControlRandom.html"
    },
    {
      "name": "Agents Programmed Behavior",
      "id": "AgentPB",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Create a series of trees on the given graph that spread out based on the limits imposed and a programed behavior that switches between two characters Explore and Consume",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/agentsProgrammedBehavior.html"
    },
    {
      "name": "DFS Edge Weight",
      "id": "dfsEdge",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the a tree from the graph using a Depth first search based on edge weight",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/dFSEdgeWeight.html"
    },
    {
      "name": "MST Djikstra",
      "id": "mstD",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the minimum spanning tree for the mesh graph using Djikstra's algorithm",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/mSTDjikstra.html"
    },
    {
      "name": "MST Kruskal",
      "id": "mstK",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the minimum spanning tree for the mesh graph using a modified Kruskal's algorithm",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/mSTKruskal.html"
    },
    {
      "name": "MST Kruskal concavity",
      "id": "mstCon",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the minimum spanning tree for the mesh graph including convex, concave and flat region detection. This uses a modified Kruskal algorithm with weight limits",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/mSTKruskalConcavity.html"
    },
    {
      "name": "MST Kruskal Valence",
      "id": "mstKv",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the minimum spanning tree for the mesh graph using a modified Kruskal's algorithm with max valence preference",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/mSTKruskalValence.html"
    },
    {
      "name": "MST Prim",
      "id": "mstP",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Compute the minimum spanning tree for the mesh graph using Prim's algorithm",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/mSTPrim.html"
    },
    {
      "name": "Multi Root MST concavity",
      "id": "mrMSTconc",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Constructs a set of trees based on the given graph",
      "description": "Constructs a set of trees based on the given graph. The trees start from the given mesh face index and spread outwards based on the weighted MST criteria and never consider weight outside the specified interval. This version considers edge weight and factors in the weight the concave/convex sequence of edges",
      "iconCss": "background: url('icons/ivy.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/multiRootMSTConcavity.html"
    },
    {
      "name": "Multi Root MST edge weight",
      "id": "mrMSTedge",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Constructs a set of trees based on the given graph",
      "description": "Constructs a set of trees based on the given graph. The trees start from the given mesh face index and spread outwards based on the weighted MST criteria and never consider weight outside the specified interval. This version considers edge weight",
      "iconCss": "background: url('icons/ivy.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/multiRootMSTEdgeWeight.html"
    },
    {
      "name": "Multi Root MST node weight",
      "id": "mrMSTnode",
      "library": "Ivy",
      "category": "3|Primary Segmentation",
      "summary": "Constructs a set of trees based on the given graph",
      "description": "Constructs a set of trees based on the given graph. The trees start from the given mesh face index and spread outwards based on the weighted MST criteria and never consider weight outside the specified interval. This version considers the node weight",
      "iconCss": "background: url('icons/ivy.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/multiRootMSTNodeWeight.html"
    },
    {
      "name": "Weight Deviation Split Graph",
      "id": "DevSplit",
      "library": "Ivy",
      "category": "4|Secondary Segmentation",
      "summary": "Splits a mesh graph in subgraphs based on whether edge weight is larger than next edge in tree hierarchy",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/weightDeviationSplitGraph.html"
    },
    {
      "name": "Weight Split Graph",
      "id": "WSplit",
      "library": "Ivy",
      "category": "4|Secondary Segmentation",
      "summary": "Splits a mesh graph in subgraphs based on whether edge weight falls in the supplied interval",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/ivy/weightSplitGraph.html"
    },
    {
      "name": "K-Means Clustering",
      "id": "kMeans",
      "library": "Ivy",
      "category": "5|Iterative Segmentation",
      "summary": "Splits a mesh graph (not a tree) in an iterative fashion based on a number of parts specified by the user",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/kMeansClustering.html"
    },
    {
      "name": "MeshGraph Unroll",
      "id": "mgUroll",
      "library": "Ivy",
      "category": "6|Special Segmentation",
      "summary": "Unroll the underlying mesh of a tree graph.",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/meshGraphUnroll.html"
    },
    {
      "name": "MeshGraph Visual Unroll",
      "id": "mgUrollViz",
      "library": "Ivy",
      "category": "6|Special Segmentation",
      "summary": "Unroll the underlying mesh of a tree graph on the object itself as a from finding technique.",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/meshGraphVisualUnroll.html"
    },
    {
      "name": "Shortest Paths in a weighted mesh graph",
      "id": "SPath",
      "library": "Ivy",
      "category": "6|Special Segmentation",
      "summary": "Compute the shortest (Cheapest) path between 2 nodes in a mesh graph using Djikstra's algorithm. Calculation uses edge weight.",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/ivy/shortestPathsInAWeightedMeshGraph.html"
    },
    {
      "name": "CustomFlap",
      "id": "cFlp",
      "library": "Ivy",
      "category": "7|Fabrication",
      "summary": "Create a custom data flap to use for the unroll component",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/customFlap.html"
    },
    {
      "name": "Flat Fabrication",
      "id": "FlatFab",
      "library": "Ivy",
      "category": "7|Fabrication",
      "summary": "Takes care of the fabrication preparation for the parts",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/flatFabrication.html"
    },
    {
      "name": "Flat Fabrication Multi",
      "id": "FlatFabM",
      "library": "Ivy",
      "category": "7|Fabrication",
      "summary": "Takes care of the fabrication preparation for the parts. Special version for dealing with complex data structures. Use especially in conjunction with multiple weaved strands",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/flatFabricationMulti.html"
    },
    {
      "name": "SimpleFlap",
      "id": "sFlp",
      "library": "Ivy",
      "category": "7|Fabrication",
      "summary": "Create a standard simple data flap to use for the unroll component",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/ivy/simpleFlap.html"
    },
    {
      "name": "EdgeAngle",
      "id": "eAngle",
      "library": "Ivy",
      "category": "8|Mesh Info",
      "summary": "Extracts the dihedral angle of an edge. Only the edges in the graph are used",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/edgeAngle.html"
    },
    {
      "name": "EdgeTraversal",
      "id": "eTrav",
      "library": "Ivy",
      "category": "8|Mesh Info",
      "summary": "Calculates the traversal distance for an edge of the graph. Here it is the lenght of the polyline connecting the face centers and edge midpoint",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/edgeTraversal.html"
    },
    {
      "name": "EdgeTypes",
      "id": "mEt",
      "library": "Ivy",
      "category": "8|Mesh Info",
      "summary": "Extracts the edges of the base mesh for the graph based on their use in the graph. Graph Edge or Cut Edge",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/edgeTypes.html"
    },
    {
      "name": "Orange PEEL Edges",
      "id": "OPE",
      "library": "Ivy",
      "category": "8|Mesh Info",
      "summary": "Gets a set of edges in the MeshGraph that separate peel layers",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/orangePEELEdges.html"
    },
    {
      "name": "CreaseMesh",
      "id": "CreaseM",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Create a set of creases in the faces of the mesh along the edges of the Mesh Graph",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/creaseMesh.html"
    },
    {
      "name": "Cull Graph Duplicates",
      "id": "CullGrph",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Cull graph duplicates from a graph list. Equality is based on topology",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/cullGraphDuplicates.html"
    },
    {
      "name": "Get deepest nodes",
      "id": "DeepestN",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Retrieves the deepest nodes in a tree graph. Here the deepest node/nodes are considered the ones that have the longest traceable route to a leaf(edge node)",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/getDeepestNodes.html"
    },
    {
      "name": "Graph Equality",
      "id": "GraphEqual",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Test equality between two mesh graphs. Only topological equality is tested",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/ivy/graphEquality.html"
    },
    {
      "name": "GraphStructure",
      "id": "GrphStruct",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Create a set of lines that approximate the graph and have different offsets from the base mesh according to the number of steps from the root",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/graphStructure.html"
    },
    {
      "name": "NodeGeo to Graph",
      "id": "Ng2Gr",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Insert the node geometry into a MeshGraph",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/ivy/nodeGeoToGraph.html"
    },
    {
      "name": "Set Node Geometry",
      "id": "setNGeo",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Assign geometry (flat curves) to nodes",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/ivy/setNodeGeometry.html"
    },
    {
      "name": "Set Tree Root",
      "id": "TreeRoot",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Set the root of the graph to the specified mesh node",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/ivy/setTreeRoot.html"
    },
    {
      "name": "ThinMesh",
      "id": "Thin",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Create a thiner mesh based on the connections in the MeshGraph",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/ivy/thinMesh.html"
    },
    {
      "name": "Weave MGraphs",
      "id": "Weave",
      "library": "Ivy",
      "category": "9|Other Tools",
      "summary": "Weave two MeshGraph segmentations",
      "description": null,
      "iconCss": "background: url('icons/ivy.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/ivy/weaveMGraphs.html"
    },
    {
      "name": "Deserialize Json",
      "id": "DeJson",
      "library": "jSwan",
      "category": "jSwan",
      "summary": "deserialize it",
      "description": null,
      "iconCss": "background: url('icons/jSwan.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/jswan/deserializeJson.html"
    },
    {
      "name": "Deserialize Keys and Values",
      "id": "DeJsonKV",
      "library": "jSwan",
      "category": "jSwan",
      "summary": "Deserializes objects to keys and values",
      "description": null,
      "iconCss": "background: url('icons/jSwan.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/jswan/deserializeKeysAndValues.html"
    },
    {
      "name": "Serialize Json",
      "id": "ReJson",
      "library": "jSwan",
      "category": "jSwan",
      "summary": "Serialize it",
      "description": null,
      "iconCss": "background: url('icons/jSwan.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/jswan/serializeJson.html"
    },
    {
      "name": "Serialize Keys and Values",
      "id": "ReJsonKV",
      "library": "jSwan",
      "category": "jSwan",
      "summary": "Serialize to JSON with specified keys and values",
      "description": null,
      "iconCss": "background: url('icons/jSwan.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/jswan/serializeKeysAndValues.html"
    },
    {
      "name": "Length(Pts)",
      "id": "Length(Pts)",
      "library": "Kangaroo 2",
      "category": "Goals",
      "summary": "Length(Pts)",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/lengthPts.html"
    },
    {
      "name": "Align Faces",
      "id": "AlignFaces",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Align faces of a pair of rigid bodies",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/alignFaces.html"
    },
    {
      "name": "Beam",
      "id": "Beam",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Beam resisting bending and torsion",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/beam.html"
    },
    {
      "name": "Concentric",
      "id": "Concentric",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Align axes of a pair of rigid bodies",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/concentric.html"
    },
    {
      "name": "Rigid Body",
      "id": "RigidBody",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "RigidBody",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/rigidBody.html"
    },
    {
      "name": "Rigid Point Set",
      "id": "RigidPointSet",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "A set of points which maintain their relative positions",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/rigidPointSet.html"
    },
    {
      "name": "Solid Collide",
      "id": "SolidCollide",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Collision between a pair of solids",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/solidCollide.html"
    },
    {
      "name": "Solid Plane Collide",
      "id": "SolidPlaneCollide",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Collision between a plane and a solid",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/solidPlaneCollide.html"
    },
    {
      "name": "Support",
      "id": "Support",
      "library": "Kangaroo 2",
      "category": "Goals-6dof",
      "summary": "Set support conditions for a beam end or rigid body",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/support.html"
    },
    {
      "name": "Angle",
      "id": "Angle",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Angle",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/angle.html"
    },
    {
      "name": "Angle Snap",
      "id": "AS",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Snap the angle between 2 lines to the closest whole number multiple of a given value",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/angleSnap.html"
    },
    {
      "name": "Clamp Angle",
      "id": "ClampAngle",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Keep an angle between 2 lines within a given range",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/clampAngle.html"
    },
    {
      "name": "Equal Angle",
      "id": "EA",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Equalize angles between multiple pairs of lines",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/equalAngle.html"
    },
    {
      "name": "G2",
      "id": "G2",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Maintain curvature continuity between 2 nurbs curves",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/g2.html"
    },
    {
      "name": "Rod",
      "id": "Rod",
      "library": "Kangaroo 2",
      "category": "Goals-Angle",
      "summary": "Bending and stretching resistant rod",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/rod.html"
    },
    {
      "name": "Co Circular",
      "id": "CoCircular",
      "library": "Kangaroo 2",
      "category": "Goals-Co",
      "summary": "CoCircular",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/coCircular.html"
    },
    {
      "name": "Co Linear",
      "id": "CoLinear",
      "library": "Kangaroo 2",
      "category": "Goals-Co",
      "summary": "CoLinear",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/coLinear.html"
    },
    {
      "name": "Co Planar",
      "id": "CoPlanar",
      "library": "Kangaroo 2",
      "category": "Goals-Co",
      "summary": "CoPlanar",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/coPlanar.html"
    },
    {
      "name": "Co Spherical",
      "id": "CoSpherical",
      "library": "Kangaroo 2",
      "category": "Goals-Co",
      "summary": "CoSpherical",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/coSpherical.html"
    },
    {
      "name": "Collide2d",
      "id": "C2d",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Collisions between closed polygons in a given plane",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/collide2d.html"
    },
    {
      "name": "Collider",
      "id": "Collider",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Collisions between thickened line segments and spheres",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/collider.html"
    },
    {
      "name": "Curve Collide",
      "id": "CC",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Collisions between closed curves in a given plane",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/curveCollide.html"
    },
    {
      "name": "Curve Point Collide",
      "id": "CPC",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Keep a set of points outside or inside a given 2d curve",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/curvePointCollide.html"
    },
    {
      "name": "Image Circles",
      "id": "ImgCircles",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Circle packing with sizes from image colours",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/imageCircles.html"
    },
    {
      "name": "Solid Point Collide",
      "id": "SPC",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Keep a set of points outside or inside a given Mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/solidPointCollide.html"
    },
    {
      "name": "Sphere Collide",
      "id": "SC",
      "library": "Kangaroo 2",
      "category": "Goals-Col",
      "summary": "Collisions between large numbers of equal sized spheres",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/sphereCollide.html"
    },
    {
      "name": "Clamp Length",
      "id": "ClampLength",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "Keep length within given bounds",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/clampLength.html"
    },
    {
      "name": "Constant Tension",
      "id": "CT",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "An element which adapts its stiffness to maintain a constant force",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/constantTension.html"
    },
    {
      "name": "Direction",
      "id": "Direction",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "Align a line segment with a given vector, or if none supplied, the closest of the World XYZ vectors",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/direction.html"
    },
    {
      "name": "Dynamic Weight1d",
      "id": "DW",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "A load in the negative Z direction, which updates its magnitude according to the length of the line",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/dynamicWeight1d.html"
    },
    {
      "name": "Equal Length",
      "id": "EqualLength",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "EqualLength",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/equalLength.html"
    },
    {
      "name": "Length Ratio",
      "id": "LengthRatio",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "Maintain a fixed ratio between the lengths of a pair of lines",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/lengthRatio.html"
    },
    {
      "name": "Length Snap",
      "id": "LengthSnap",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "Snap length to whole number multiples of a given number",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/lengthSnap.html"
    },
    {
      "name": "Length(Line)",
      "id": "Length(Line)",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "Length(Line)",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/lengthLine.html"
    },
    {
      "name": "Plastic Length",
      "id": "PL",
      "library": "Kangaroo 2",
      "category": "Goals-Lin",
      "summary": "This tries to preserve the length of the line elastically, until it is deformed beyond the limit, then its rest length gets changed",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/plasticLength.html"
    },
    {
      "name": "Conicalize",
      "id": "Conical",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Adjust a quad mesh to make vertices conical - so the mesh has a face-face offset (See the paper 'The focal geometry of circular and conical meshes' for details). Use together with Planarize",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/conicalize.html"
    },
    {
      "name": "Cyclic Quad",
      "id": "CyclicQuad",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Make a quadrilateral have a circumscribed circle",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/cyclicQuad.html"
    },
    {
      "name": "Developablize",
      "id": "Developablize",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Turn a triangular mesh into developable patches with creases. Based on the paper 'Developability of Triangle Meshes' by Stein, Grinspun & Crane",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/developablize.html"
    },
    {
      "name": "Edge Lengths",
      "id": "EdgeLengths",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Set the edge lengths of a mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/edgeLengths.html"
    },
    {
      "name": "Hinge",
      "id": "Hinge",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Hinge",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/hinge.html"
    },
    {
      "name": "Isothermic",
      "id": "Iso",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Make a quad mesh S-Isothermic, as described in the paper 'Quasiisothermic Mesh Layout' by Sechelmann, Rörig & Bobenko",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/isothermic.html"
    },
    {
      "name": "Live Soap",
      "id": "LS",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "For generating minimal and CMC (zero and constant mean curvature respectively) meshes which adapt their connectivity during relaxation to maintain triangle quality",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/liveSoap.html"
    },
    {
      "name": "No Fold Through",
      "id": "NoFoldThrough",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "To stop the sides of a hinge passing through each other",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/noFoldThrough.html"
    },
    {
      "name": "Planarize",
      "id": "Planarize",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Planarize",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/planarize.html"
    },
    {
      "name": "Plastic Hinge",
      "id": "PH",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Like Hinge, except folding beyond the plastic/elastic threshold will alter the rest angle",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/plasticHinge.html"
    },
    {
      "name": "Polygon Area",
      "id": "PolygonArea",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "PolygonArea",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/polygonArea.html"
    },
    {
      "name": "Pressure",
      "id": "Pressure",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "A force normal to each triangle, and proportional to its area",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/pressure.html"
    },
    {
      "name": "Smooth",
      "id": "Smooth",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Smooth",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/smooth.html"
    },
    {
      "name": "Soap Film",
      "id": "SG",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Area minimizing triangle, for generating zero mean curvature meshes",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/soapFilm.html"
    },
    {
      "name": "Tangent Incircles",
      "id": "TangentIncircles",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "TangentIncircles",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/tangentIncircles.html"
    },
    {
      "name": "Tangential Smooth",
      "id": "TSmooth",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Smooth a mesh only in the local tangent planes. Used in conjunction with SoapFilm",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/tangentialSmooth.html"
    },
    {
      "name": "Vertex Loads",
      "id": "VertexLoads",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Apply equal vertical loads to all vertices of a mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/vertexLoads.html"
    },
    {
      "name": "Volume",
      "id": "Volume",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Set the total volume of a mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/volume.html"
    },
    {
      "name": "Wind",
      "id": "Wind",
      "library": "Kangaroo 2",
      "category": "Goals-Mesh",
      "summary": "Wind",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/wind.html"
    },
    {
      "name": "On Curve",
      "id": "OnCurve",
      "library": "Kangaroo 2",
      "category": "Goals-On",
      "summary": "Keep a point on a given Curve",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/onCurve.html"
    },
    {
      "name": "On Mesh",
      "id": "OnMesh",
      "library": "Kangaroo 2",
      "category": "Goals-On",
      "summary": "Keep a point on a given Mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/onMesh.html"
    },
    {
      "name": "On Plane",
      "id": "OnPlane",
      "library": "Kangaroo 2",
      "category": "Goals-On",
      "summary": "Keep a point on a given plane",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/onPlane.html"
    },
    {
      "name": "Anchor",
      "id": "Anchor",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Anchor",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/anchor.html"
    },
    {
      "name": "Anchor XYZ",
      "id": "AnchorXYZ",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Fix a point only along chosen world axes. If you need to reset the initial position, disconnect then reconnect the Point input.",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/anchorXYZ.html"
    },
    {
      "name": "Bomb",
      "id": "B",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Causes an explosion after a given number of iterations",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/bomb.html"
    },
    {
      "name": "Coincident",
      "id": "C",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Equivalent to a zero length constraint between a pair of points",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/coincident.html"
    },
    {
      "name": "Floor",
      "id": "Floor",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Floor",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/floor.html"
    },
    {
      "name": "Load",
      "id": "Load",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Load",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/load.html"
    },
    {
      "name": "Magnet Snap",
      "id": "MS",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Snap points together according to proximity",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/magnetSnap.html"
    },
    {
      "name": "Plastic Anchor",
      "id": "PlasticAnchor",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "PlasticAnchor",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/plasticAnchor.html"
    },
    {
      "name": "Transform",
      "id": "Transform",
      "library": "Kangaroo 2",
      "category": "Goals-Pt",
      "summary": "Keep a given transformation between 2 points",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/transform.html"
    },
    {
      "name": "Bouncy Solver",
      "id": "BouncySolver",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "Solver with momentum",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/bouncySolver.html"
    },
    {
      "name": "Grab",
      "id": "Grab",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "This lets you drag particles in Rhino. Hold Alt key and drag with LMB, or toggle anchors with LMB+RMB",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/grab.html"
    },
    {
      "name": "Show",
      "id": "Show",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "Show",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/show.html"
    },
    {
      "name": "Soft & Hard Solver",
      "id": "Soft&HardSolver",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "Solver with separate inputs for soft goals, and hard constraint type goals",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/softHardSolver.html"
    },
    {
      "name": "Solver",
      "id": "Solver",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "The main component where Goals are combined and applied",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/solver.html"
    },
    {
      "name": "Step Solver",
      "id": "StepSolver",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "Solver which advances only when input refreshed. Useful for making animations",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/stepSolver.html"
    },
    {
      "name": "Zombie Solver",
      "id": "ZombieSolver",
      "library": "Kangaroo 2",
      "category": "Main",
      "summary": "A version of the solver component which keeps all iterations internal, and outputs the final result",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/zombieSolver.html"
    },
    {
      "name": "By Parent",
      "id": "ByParent",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Refine a Mesh, separating outputs by parent face",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/byParent.html"
    },
    {
      "name": "Checkerboard",
      "id": "Checkerboard",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Attempt to separate a mesh into 2 lists of non-adjacent faces",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/checkerboard.html"
    },
    {
      "name": "Combine&Clean",
      "id": "Clean",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Combine and Clean a list of meshes, removing unused and duplicate vertices",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/combineClean.html"
    },
    {
      "name": "Diagonalize",
      "id": "Diag",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Replace each edge with a new face",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/diagonalize.html"
    },
    {
      "name": "Face Face Offset",
      "id": "FaceFace",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Offset a conical mesh so that corresponding faces are constant distance apart",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/faceFaceOffset.html"
    },
    {
      "name": "Fold Angle",
      "id": "FoldAngle",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Measure the current angle between two triangles about their common edge",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/foldAngle.html"
    },
    {
      "name": "Hinge Points",
      "id": "HingePoints",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Get the 4 points for each internal edge to use in a Hinge Force",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/hingePoints.html"
    },
    {
      "name": "Mesh Corners",
      "id": "MC",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Extract corners sharper than some angle",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/meshCorners.html"
    },
    {
      "name": "Mesh Direction",
      "id": "MD",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Sort the face directions of a mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/meshDirection.html"
    },
    {
      "name": "Mesh Map",
      "id": "MeshMap",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Map points from one mesh to another",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/meshMap.html"
    },
    {
      "name": "Mesh Turn",
      "id": "Turn",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Rotate the vertex order of each face",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/meshTurn.html"
    },
    {
      "name": "Naked Vertices",
      "id": "NV",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Sorts the vertices of a mesh into 2 lists according to whether or not they are surrounded by faces",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/nakedVertices.html"
    },
    {
      "name": "Refine",
      "id": "Refine",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Divide each quad into 4 quads, and each triangle into 4 triangles",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/refine.html"
    },
    {
      "name": "Refine Strips",
      "id": "Strips",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Directional subdivision, refines quads in one direction only",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/refineStrips.html"
    },
    {
      "name": "Simple",
      "id": "Simple",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Simple Target Length",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/simple.html"
    },
    {
      "name": "Simple Remesh",
      "id": "SimpleRemesh",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Isotropically remesh a Brep or Mesh",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/simpleRemesh.html"
    },
    {
      "name": "Stripper",
      "id": "Stripper",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Divide a mesh into strips",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/stripper.html"
    },
    {
      "name": "Tangent Circles",
      "id": "TC",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Generate face incircles, circle packing centred on vertices, or incircular dual",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/tangentCircles.html"
    },
    {
      "name": "Unroller",
      "id": "Unroller",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Unroll a strip of quads",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/unroller.html"
    },
    {
      "name": "Vertex Neighbours",
      "id": "VN",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Returns the positions of the vertices connected the given vertex by an edge",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/vertexNeighbours.html"
    },
    {
      "name": "Warp Weft",
      "id": "WarpWeft",
      "library": "Kangaroo 2",
      "category": "Mesh",
      "summary": "Separate the edges of a mesh into 2 lists according to Warp and Weft direction",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/warpWeft.html"
    },
    {
      "name": "Dot Display",
      "id": "Dot",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "Show points as round dots",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/dotDisplay.html"
    },
    {
      "name": "interconnect Points",
      "id": "inter",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "Draws one line between every pair of points in a list",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/interconnectPoints.html"
    },
    {
      "name": "Möbius Transformation",
      "id": "MB",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "3d Möbius Transformations of any geometry using 4d rotation",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/mbiusTransformation.html"
    },
    {
      "name": "remove Duplicate Lines",
      "id": "dupLn",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "Removes similar lines from a list.",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/removeDuplicateLines.html"
    },
    {
      "name": "remove Duplicate Pts",
      "id": "dupPt",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "Removes similar points from a list",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/removeDuplicatePts.html"
    },
    {
      "name": "Split At Corners",
      "id": "SplitAtCorners",
      "library": "Kangaroo 2",
      "category": "Utility",
      "summary": "Break a polyline into multiple parts based on angle",
      "description": null,
      "iconCss": "background: url('icons/kangaroo2.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/kangaroo2/splitAtCorners.html"
    },
    {
      "name": "Construct Location",
      "id": "Construct Location",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component if you do not have an",
      "description": "Use this component if you do not have an .epw weather file but have a latitude or other information on the site.<br>The location output of this component can be used to make a sun plot in the absence of an .epw weather file.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/constructLocation.html"
    },
    {
      "name": "Create LB Header",
      "id": "Create LB Header",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to generates a Ladybug Header that can be combined with any raw data in order to format it for use with the Ladybug/Honeybee components",
      "description": "Use this component to generates a Ladybug Header that can be combined with any raw data in order to format it for use with the Ladybug/Honeybee components.<br>This component is particularly useful if you are bringing in data from other plugins or from instrumental measurements and you want to visualize it or analyze it with the Ladybug and Honeybee components.  It is also useful if you want to replace the header on Ladybug data.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/createLBHeader.html"
    },
    {
      "name": "Decompose Location",
      "id": "Decompose Location",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to separate and exctract the information in the 'location' output of the importEPW or constructLocation component",
      "description": "Use this component to separate and exctract the information in the 'location' output of the importEPW or constructLocation component.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/decomposeLocation.html"
    },
    {
      "name": "download EPW Weather File",
      "id": "download EPW Weather File",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to open the epwmap page in your default web browser and download an",
      "description": "Use this component to open the epwmap page in your default web browser and download an .epw weather file.<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/downloadEPWWeatherFile.html"
    },
    {
      "name": "Import epw",
      "id": "Import epw",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to import lists of weather data into Grasshopper from a standard",
      "description": "Use this component to import lists of weather data into Grasshopper from a standard .epw file.<br>For detailed information about the structure of an epw file, you may want to read the<br>\"Weather Converter Program\" section in \"Auxiliary EnergyPlus Programs\" document.<br>All descriptions of importaed data are borrowed from this document.<br>The document is available online at this address:<br>http://bigladdersoftware.com/epx/docs/8-3/auxiliary-programs/energyplus-weather-file-epw-data-dictionary.html<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/importEpw.html"
    },
    {
      "name": "Import Location",
      "id": "Import Location",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to import location data from a standard",
      "description": "Use this component to import location data from a standard .epw file.<br>You can use the output to draw a sunpath.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/importLocation.html"
    },
    {
      "name": "Import stat",
      "id": "Import stat",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to import climate data found in the",
      "description": "Use this component to import climate data found in the .stat file that downloads with the .epw file (in the same .zip folder).<br>Sepcifcally, this allows you to import the ASHRAE and Koppen climate zones as well as design temperatures representing the temperature extremes of the climate that should be used to design and size heating and cooling systems.<br>Lastly, this component brings in the typical and extreme weeks of the year as ladybug analysis periods that can be plugged into the other ladybug components.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/importStat.html"
    },
    {
      "name": "Ladybug",
      "id": "Ladybug",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "This component carries all of Ladybug's main classes",
      "description": "This component carries all of Ladybug's main classes. Other components refer to these<br>classes to run the studies. Therefore, you need to let her fly before running the studies so the<br>classes will be copied to Rhinos shared space. So let her fly!<br>Ladybug: A Plugin for Environmental Analysis (GPL) started by Mostapha Sadeghipour Roudsari<br>You should have received a copy of the GNU General Public License<br>along with Ladybug; If not, see <http://www.gnu.org/licenses/>.<br>@license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+><br>Source code is available at: https://github.com/mostaphaRoudsari/ladybug<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/ladybug.html"
    },
    {
      "name": "Open EPW And STAT Weather Files",
      "id": "Open EPW And STAT Weather Files",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to automatically download a",
      "description": "Use this component to automatically download a .zip file from the Department of Energy's (DOE) database, unzip the file, and open both the .epw and .stat weather files into Grasshopper.<br>The component requires the URL of the zipped file for the specific climate that you want to import from the DOE's website.  To open the DOE's website, use the Ladybug_download EPW Weather File component.<br>Note that you can copy the zip file URL to your clipboard by right-clicking on the \"ZIP\" link for the climate that you want on the DOE's website and choosing \"Copy Link Address.\"<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/openEPWAndSTATWeatherFiles.html"
    },
    {
      "name": "Open EPW Weather File",
      "id": "Open EPW Weather File",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to open an",
      "description": "Use this component to open an .epw weather file from a location on your computer.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/openEPWWeatherFile.html"
    },
    {
      "name": "Open STAT File",
      "id": "Open STAT File",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to open a",
      "description": "Use this component to open a .stat file, which downloads with the .epw weather file and contains information such as the climate zone and maximum temperatures for designing heating/cooling systems.<br>This component opens the file from a location on your computer.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/openSTATFile.html"
    },
    {
      "name": "Update File",
      "id": "Update File",
      "library": "Ladybug",
      "category": "0 | Ladybug",
      "summary": "Use this component to update ladybug tools components in an old file",
      "description": "Use this component to update ladybug tools components in an old file.<br>This component doesn't update the installation. It will only update the file<br>to your current installation. The components that can't be updated automatically<br>will be marked and should be replaced manually.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/updateFile.html"
    },
    {
      "name": "Adaptive Comfort Calculator",
      "id": "Adaptive Comfort Calculator",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate the adaptive comfort for a given set of input conditions",
      "description": "Use this component to calculate the adaptive comfort for a given set of input conditions.<br>This component will output a stream of 0's and 1's indicating whether certain conditions are comfortable given the prevailing mean monthly temperature that ocuppants tend to adapt themselves to.<br>This component will also output a series of interger numbers that indicate the following: -1 = The average monthly temperature is too extreme for the adaptive model. 0 = The input conditions are too cold for occupants. 1 = The input conditions are comfortable for occupants. 2 = The input conditions are too hot for occupants.<br>Lastly, this component outputs the percent of time comfortable, hot, cold and monthly extreme as well as a lit of numbers indicating the upper temperature of comfort and lower temperature of comfort.<br>The adaptive comfort model was created in response to the shortcomings of the PMV model that became apparent when it was applied to buildings without air conditioning.  Namely, the PMV model was over-estimating the discomfort of occupants in warm conditions of nautrally ventilated buildings.<br>Accordingly, the adaptive comfort model was built on the work of hundreds of field studies in which people in naturally ventilated buildings were asked asked about how comfortable they were.<br>Results showed that users tended to adapt themselves to the monthly mean temperature and would be comfortable in buildings so long as the building temperature remained around a value close to that monthly mean.  This situation held true so long as the monthly mean temperature remained above 10 C and below 33.5 C.<br>The comfort models that make this component possible were translated to python from a series of validated javascript comfort models coded at the Berkely Center for the Built Environment (CBE).  The Adaptive model used by both the CBE Tool and this component was originally published in ASHARAE 55.<br>Special thanks goes to the authors of the online CBE Thermal Comfort Tool who first coded the javascript: Hoyt Tyler, Schiavon Stefano, Piccioli Alberto, Moon Dustin, and Steinfeld Kyle. http://cbe.berkeley.edu/comforttool/<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/adaptiveComfortCalculator.html"
    },
    {
      "name": "Analysis Period",
      "id": "Analysis Period",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to set an analysis period, which can be used as input for a variety of other Ladybug and Honeybee components",
      "description": "Use this component to set an analysis period, which can be used as input for a variety of other Ladybug and Honeybee components.  Default analysis period without any inputs is set to the entire year.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/analysisPeriod.html"
    },
    {
      "name": "Ankle Draft Discomfort",
      "id": "Ankle Draft Discomfort",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate discomfort from cold drafts at ankle-level",
      "description": "Use this component to calculate discomfort from cold drafts at ankle-level.  The original tests used to create the model involved blowing cold air on subject's ankles at a height of 10 cm off of the ground.<br>The formula has been submitted to be incorporated in the ASHRAE 55 standard with a recommendation that PPD from ankle draft not exceed 20%.  The papers in which this model is published can be found here:<br>Schiavon, S., D. Rim, W. Pasut, W. Nazaroff. 2016. Sensation of draft at uncovered ankles for women exposed to displacement ventilation and underfloor air distribution systems. Building and Environment, 96, 228–236.<br>Liu, S., S. Schiavon, A. Kabanshi, W. Nazaroff. 2016. Predicted percentage of dissatisfied with ankle draft. Accepted Author Manuscript. Indoor Environmental Quality. http://escholarship.org/uc/item/9076254n<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/ankleDraftDiscomfort.html"
    },
    {
      "name": "Average Data",
      "id": "Average Data",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to select the data out of an annual hourly data stream (from the importEPW component) using the \"Analysis Period\" component",
      "description": "Use this component to select the data out of an annual hourly data stream (from the importEPW component) using the \"Analysis Period\" component.<br>This componenent also averages or totals the connected hourly data for each day, month, and average hour of each month in the analysis period.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/averageData.html"
    },
    {
      "name": "Branch Data",
      "id": "Branch Data",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to convert any list of annual data into a data tree branched by day of the year, month of the year, or hour of the day",
      "description": "Use this component to convert any list of annual data into a data tree branched by day of the year, month of the year, or hour of the day. If the data is not 8760 value sof each hour, the number of _data items should match number of items in HOY_.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/branchData.html"
    },
    {
      "name": "CDD HDD",
      "id": "CDD HDD",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Calculates heating and cooling degree-days",
      "description": "Calculates heating and cooling degree-days.<br>Traditionally, degree-days are defined as the difference between a base temperature and the average ambient air temperature multiplied by the number of days that this difference exists.<br>By default, this component uses a more accurate calculation than the traditional method based on the minimum and maximum temperature of each day.<br>You may check the formulas in this page: \"http://www.vesma.com/ddd/ddcalcs.htm\"<br>If you rather to use the traditional method, set useDailyAvrMethod to True.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/cDDHDD.html"
    },
    {
      "name": "CDH HDH",
      "id": "CDH HDH",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Calculates heating and cooling degree-hours",
      "description": "Calculates heating and cooling degree-hours.<br>Degree-hours are defined as the difference between the base temperature and the average ambient outside air temperature multiplied by the number of hours that this difference condition exists.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/cDHHDH.html"
    },
    {
      "name": "Clothing Function",
      "id": "Clothing Function",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to generate a list of values representing a clothing schedule based on outdoor air temperature",
      "description": "Use this component to generate a list of values representing a clothing schedule based on outdoor air temperature.  This schedule can be plugged into the clothingLevel_ input of the PMV Comfort Calculator component.<br>By default, this function used to derive clothing levels based on outside temperature was developed by Schiavon, Stefano and implemented on the CBE comfort tool (http://smap.cbe.berkeley.edu/comforttool/).<br>This version of the component allows users to change the maximum and minimum clothing levels, which Schiavon set at 1 and 0.46 respectively, and the temperatures at which these clothing levels occur, which Schiavon set at 26C and -5 C respectively.<br>Note that Schiavon did not endorse the changing of these values but they are provided here to allow users an additional level of freedom.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/clothingFunction.html"
    },
    {
      "name": "Draft Discomfort",
      "id": "Draft Discomfort",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate discomfort from cold drafts on the back of the neck (arguably the most sensitive part of the human body to cold drafts)",
      "description": "Use this component to calculate discomfort from cold drafts on the back of the neck (arguably the most sensitive part of the human body to cold drafts).  This model was derived from empircal tests that involved blowing cold air on the back of subjects's necks who were otherwise at thermally neutral conditions by the pmv standard.  <br>This model used to be the standard endorsed by ASHRAE 55 and EN-12521 for all draft cases but has since been replaced with a model that more accurately targets draft discomfort at foot level. The paper in which this model was published can be found here:<br>Fanger, P.O., Melikov, A.K., Hanzawa, H., Ring, J. “Air Turbulence and Sensation of Draught.” Energy and Buildings 12, no. 1 (1988): 21–39.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/draftDiscomfort.html"
    },
    {
      "name": "Humidity Ratio Calculator",
      "id": "Humidity Ratio Calculator",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Calculates the humidity ratio from the ladybug weather file import parameters<br>Conversion formulas are taken from the following publications:<br>Vaisala",
      "description": "Calculates the humidity ratio from the ladybug weather file import parameters<br>Conversion formulas are taken from the following publications:<br>Vaisala. (2013) Humidity Conversion Formulas: Calculation Formulas for Humidity. www.vaisala.com/Vaisala%20Documents/Application%20notes/Humidity_Conversion_Formulas_B210973EN-F.pdf<br>W. Wagner and A. Pruß:\" The IAPWS Formulation 1995 for the Thermodynamic Properties of Ordinary Water Substance for General and Scientific Use \", Journal of Physical and Chemical Reference Data, June 2002 ,Volume 31, Issue 2, pp. 387535<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/humidityRatioCalculator.html"
    },
    {
      "name": "Outdoor Comfort Calculator",
      "id": "Outdoor Comfort Calculator",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate the Universal Thermal Climate Index (UTCI) for a set of input climate conditions",
      "description": "Use this component to calculate the Universal Thermal Climate Index (UTCI) for a set of input climate conditions.  Perhaps the most familiar application of Univeral Thermal Climate Index (UTCI) is the temperature given by TV weathermen and women when they say that, \"even though the dry bulb temperature outside is a certain value, the temperature actually \"feels like\" something higher or lower.\"<br>UTCI is this temperature of what the weather \"feels like\" and it takes into account the radiant temperature (sometimes including solar radiation), relative humidity, and wind speed.  UTCI uses these variables in a human energy balance model to give a temperature value that is indicative of the heat stress or cold stress felt by a human body in the outdoors.<br>A UTCI between 9 and 26 degrees Celcius indicates no thermal stress or comfortable conditions outdoors.<br>A UTCI between 26 and 28 degrees Celcius indicates slight heat stress (comfortable for short periods of time). Between 28 and 32 degrees, UTCI indicates moderate heat stress (hot but not dangerous).  Between 32 and 38 degrees, UTCI indicates strong heat stress (dangerous beyond short periods of time). Above 38, UTCI indicates very strong to extreme heat stress (very dangerous).<br>A UTCI between 0 and 9 degrees Celcius indicates slight cold stress (comfortable for short periods of time). Between 0 and -13 degrees, UTCI indicates moderate cold stress (cold but not dangerous).  Between -13 and -27 degrees, UTCI indicates strong cold stress (dangerous beyond short periods of time).  Below -27, UTCI indicates very stong to extreme cold stress (very dangerous).<br>_<br>UTCI is result of the world's leading comfort specailists' attempt to make an interational standard of outdoor temperature sensation that fills the follwoing requirements:<br>1)\tThermo-physiological significance in the whole range of heat exchange conditions of existing thermal environments<br>2)\tValid in all climates, seasons, and scales<br>3)\tUseful for key applications in human biometeorology.<br>_<br>The code that makes this component possible is a Python version of the original Fortran code for calculating UTCI.  Information on UTCI and the original Fortran code can be found here: http://www.utci.org/.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/outdoorComfortCalculator.html"
    },
    {
      "name": "PMV Comfort Calculator",
      "id": "PMV Comfort Calculator",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate comfort metrics of Predicted Mean Vote (PMV), the Percent of People Dissatisfied (PPD), and the Standard Effective Temperature (SET) for a set of climate conditions and occupant behavior/clothing",
      "description": "Use this component to calculate comfort metrics of Predicted Mean Vote (PMV), the Percent of People Dissatisfied (PPD), and the Standard Effective Temperature (SET) for a set of climate conditions and occupant behavior/clothing.<br>This component can also calculate Outdoor Standard Effective Temperature (OUT-SET) if EPW weather data is connected.  HOWEVER, if you are interested in knowing whether outdoor conditions are actually comfortable, it is highly recommended that you use the Ladybug UTCI Comfort Calculator.  OUT-SET has been shown to be a poor indicator of outdoor comfort and is better used as a tool to help understand what clothing and metabolic rate a comfortable person might have in the outdoors AFTER running a UTCI study.<br>Predicted Mean Vote (PMV) is a seven-point scale of occupant comfort from cold (-3) to hot (+3) that was used in the comfort surveys of P.O. Fanger, who initially developed the scale and the PMV comfort model off of it. Each interger value of the PMV scale indicates the following: -3:Cold, -2:Cool, -1:Slightly Cool, 0:Neutral, +1:Slightly Warm, +2:Warm, +3:Hot.  The range of comfort is generally accepted as a PMV between -1 and +1.  Exceeding +1 will result in an uncomfortably warm occupant while dropping below -1 will result in an uncomfortably cool occupant.  PMV is a MEAN vote because is meant to represent the average vote of all people under the input conditions.<br>This component will output the PMV of the occupant for the input conditions as well as an estimated Percentage of People Dissatisfied (PPD) under the given conditions.  PPD refers to the perceont of people that would give a PMV greater than/equal to 1 or less than/equal to -1.  Note that, with this model, it is not possible to get a PPD of 0% and most engineers just aim to have a PPD below 20% when designing a HVAC system.<br>This component will also output Standard Effective Temperature (SET), which is an ajusted temperature scale meant to reflect the heat stress or cold felt by the occupant.  Specifically, SET is definied as the equivalent temperature of an imaginary environment at 50% relative humidity, <0.1 m/s air speed, and mean radiant temperature equal to air temperature, in which the total heat loss from the skin of an imaginary occupant is the same as that from a person existing under the input conditions. It is also important to note that the imaginary occupant is modeled with an activity level of 1.0 met and a clothing level of 0.6 clo.  The actual occupant in the real environment can have different values from these.<br>The original PMV studies by Fanger involved placing subjects in an air conditioned climate chamber for an hour in which the subjects had no means to adjust their conditions to make them comfortable.  Subjects where then asked to pick an interger on the PMV scale.  Since PMV subjects could not change their layers of clothing or open windows to make themselves comfortable, the PMV model is most useful when applied to these conditions of an air conditioned building in which users cannot open windows, turn on fans or change dress code.  For comfort in conditions where people can adjust these factors, the adaptive comfort calculator or UTCI comfort calculator would be most useful.<br>The comfort models that make this component possible were translated to python from a series of validated javascript comfort models coded at the Berkely Center for the Built Environment (CBE).  The PMV model used by both the CBE Tool and this component was originally published in ASHARAE 55.<br>Special thanks goes to the authors of the online CBE Thermal Comfort Tool who first coded the javascript comfort models: Hoyt Tyler, Schiavon Stefano, Piccioli Alberto, Moon Dustin, and Steinfeld Kyle. http://cbe.berkeley.edu/comforttool/<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/pMVComfortCalculator.html"
    },
    {
      "name": "Radiant Asymmetry Discomfort",
      "id": "Radiant Asymmetry Discomfort",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate discomfort from radiant assymetry",
      "description": "Use this component to calculate discomfort from radiant assymetry.<br>The comfort functions in this function come from Figure 5.2.4.1 of ASHRAE 55 2010.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/radiantAsymmetryDiscomfort.html"
    },
    {
      "name": "Separate data",
      "id": "Separate data",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to separate the text strings from the numbers in the climate data streams output from the Import EPW component",
      "description": "Use this component to separate the text strings from the numbers in the climate data streams output from the Import EPW component.<br>You can then perform mathamatical functions on the numerical climate data using the Grasshopper math components or quickly preview the numerical data stream using the Grasshopper \"Quick Graph\" component.<br>This component can also be used generally to separate any data stream that contains both numbers and text strings.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/separateData.html"
    },
    {
      "name": "Thermal Comfort Indices",
      "id": "Thermal Comfort Indices",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate various thermal comfort indices:<br>",
      "description": "Use this component to calculate various thermal comfort indices:<br>------<br>- HI (Heat Index)<br>- humidex (humidity index)<br>- DI (Discomfort Index)<br>- WCI (Wind Chill Index)<br>- WCT (Wind Chill Temperature)<br>- WBGT (Wet-Bulb Globe Temperature) indoors<br>- WBGT (Wet-Bulb Globe Temperature) outdoors<br>- TE (Effective Temperature)<br>- AT (Apparent Temperature)<br>- TS (Thermal Sensation)<br>- ASV (Actual Sensation Vote)<br>- MRT (Mean Radiant Temperature)<br>- Iclp (Predicted Insulation Index Of Clothing)<br>- HR (Heart Rate)<br>- DhRa (Dehydration Risk)<br>- PET (Physiological Equivalent Temperature)<br>- THI (Temperature Humidity Index)<br>- PHS (Predicted Heat Strain)<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/thermalComfortIndices.html"
    },
    {
      "name": "Wet Bulb Temp",
      "id": "Wet Bulb Temp",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate Wet Bulb Temperature and Dew Point Temperature",
      "description": "Use this component to calculate Wet Bulb Temperature and Dew Point Temperature<br>This component uses the \"Method for obtaining wet-bulb temperatures by modifying the psychrometric formula\"<br>created by J. Sullivan and L. D. Sanders (Center for Experiment Design and Data Analysis).<br>NOAA - National Oceanic and Atmospheric Administration<br>Special thanks goes to the authors of the online wet-bulb temperature calculator <br>http://www.srh.noaa.gov/epz/?n=wxcalc_rh<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/wetBulbTemp.html"
    },
    {
      "name": "Wind Speed Calculator",
      "id": "Wind Speed Calculator",
      "library": "Ladybug",
      "category": "1 | AnalyzeWeatherData",
      "summary": "Use this component to calculate wind speed at a specific height for a given terrain type",
      "description": "Use this component to calculate wind speed at a specific height for a given terrain type.  By default, the component will calculate ground wind speed, which is useful for comfrt calculations.  Also, by hooking up wind data from an epw file, you can use the resulting data to create a wind rose at any height.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/windSpeedCalculator.html"
    },
    {
      "name": "3D Chart",
      "id": "3D Chart",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to make a 3D chart in the Rhino scene of any climate data or hourly simulation data",
      "description": "Use this component to make a 3D chart in the Rhino scene of any climate data or hourly simulation data.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/3DChart.html"
    },
    {
      "name": "Adaptive Comfort Chart",
      "id": "Adaptive Comfort Chart",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to calculate the adaptive comfort for a given set of input conditions",
      "description": "Use this component to calculate the adaptive comfort for a given set of input conditions.<br>This component will output a stream of 0's and 1's indicating whether certain conditions are comfortable given the prevailing mean monthly temperature that ocuppants tend to adapt themselves to.<br>This component will also output a series of interger numbers that indicate the following: -1 = The average monthly temperature is too extreme for the adaptive model. 0 = The input conditions are too cold for occupants. 1 = The input conditions are comfortable for occupants. 2 = The input conditions are too hot for occupants.<br>Lastly, this component outputs the percent of time comfortable, hot, cold and monthly extreme as well as a lit of numbers indicating the upper temperature of comfort and lower temperature of comfort.<br>The adaptive comfort model was created in response to the shortcomings of the PMV model that became apparent when it was applied to buildings without air conditioning.  Namely, the PMV model was over-estimating the discomfort of occupants in warm conditions of nautrally ventilated buildings.<br>Accordingly, the adaptive comfort model was built on the work of hundreds of field studies in which people in naturally ventilated buildings were asked asked about how comfortable they were.<br>Results showed that users tended to adapt themselves to the monthly mean temperature and would be comfortable in buildings so long as the building temperature remained around a value close to that monthly mean.  This situation held true so long as the monthly mean temperature remained above 10 C and below 33.5 C.<br>The comfort models that make this component possible were translated to python from a series of validated javascript comfort models coded at the Berkely Center for the Built Environment (CBE).  The Adaptive model used by both the CBE Tool and this component was originally published in ASHARAE 55.<br>Special thanks goes to the authors of the online CBE Thermal Comfort Tool who first coded the javascript: Hoyt Tyler, Schiavon Stefano, Piccioli Alberto, Moon Dustin, and Steinfeld Kyle. http://cbe.berkeley.edu/comforttool/<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/adaptiveComfortChart.html"
    },
    {
      "name": "Colored Sky Visualizer",
      "id": "Colored Sky Visualizer",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to visualize a Perez sky as a colored mesh in the Rhino scene using the weather file location, a time and date, and an estimate of turbidity (or amount of particulates in the atmosphere",
      "description": "Use this component to visualize a Perez sky as a colored mesh in the Rhino scene using the weather file location, a time and date, and an estimate of turbidity (or amount of particulates in the atmosphere.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/coloredSkyVisualizer.html"
    },
    {
      "name": "Gen Cumulative Sky Mtx",
      "id": "Gen Cumulative Sky Mtx",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "This component uses Radiance's gendaymtx function to calculate the sky's radiation for each hour of the year",
      "description": "This component uses Radiance's gendaymtx function to calculate the sky's radiation for each hour of the year. This is a necessary pre-step before doing radiation analysis with Rhino geometry or generating a radiation rose.<br>The first time you use this component, you will need to be connected to the internet so that the component can download the \"gendaymtx.exe\" function to your system.<br>Gendaymtx is written by Ian Ashdown and Greg Ward. For more information, check the Radiance manual at:<br>http://www.radiance-online.org/learning/documentation/manual-pages/pdfs/gendaymtx.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/genCumulativeSkyMtx.html"
    },
    {
      "name": "Import Ground Temp",
      "id": "Import Ground Temp",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to visualise ground temperatures throughout the year at specific depths",
      "description": "Use this component to visualise ground temperatures throughout the year at specific depths. Please note that epw files usually only provide ground temperature data at depths 0.5 meters, 2 meters and 4 meters thus data has been interpolated for all other depths. In particular this interpolation assumes that ground temperatures do not vary over the seasons once the depth has reach 9 meters below the ground surface.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/importGroundTemp.html"
    },
    {
      "name": "Monthly Bar Chart",
      "id": "Monthly Bar Chart",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to make a bar chart in the Rhino scene of any monhtly or avrMonthyPerHour climate data or simulation data",
      "description": "Use this component to make a bar chart in the Rhino scene of any monhtly or avrMonthyPerHour climate data or simulation data.<br>This component can also plot daily or hourly data but, for visualizing this type of data, it is recommended that you use the \"Ladybug_3D Chart\" component.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/monthlyBarChart.html"
    },
    {
      "name": "Outdoor Solar Temperature Adjustor",
      "id": "Outdoor Solar Temperature Adjustor",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to adjust an existing Mean Radiant Temperature for shortwave solar radiation",
      "description": "Use this component to adjust an existing Mean Radiant Temperature for shortwave solar radiation.  This adjusted mean radiant temperature can then be used in comfort studies.<br>Note that this component assumes that you have already accounted for longwave radiation in the form of the _baseTemperature input.  If you do not hook up a _baseTemperature, this component will assume that the surrounding radiant temperature is the same as the air temperature, which is a decent assumption for someone standing in an unobstructed field.  However, the more obstacles that surround the person (and the more \"context\" that you add), the more important it is to derive a starting mean radiant temperature from a Honeybee Energy simulation.  Also note that this component is not meant to account for shortwave radiation passing through glass.<br>This component uses Radiance functions in order to determine the amount of direct and diffuse solar radiation falling on a comfort mannequin.  The portion reflected off of the ground to the comfort mannequin is derived from these values of direct and diffuse radiation.<br>Lastly, the formulas to translate this radiation into an effective radiant field and into a solar-adjusted mean radiant temperature come from this paper:<br>Arens, Edward; Huang, Li; Hoyt, Tyler; Zhou, Xin; Shiavon, Stefano. (2014). Modeling the comfort effects of short-wave solar radiation indoors.  Indoor Environmental Quality (IEQ).<br>http://escholarship.org/uc/item/89m1h2dg#page-4<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/outdoorSolarTemperatureAdjustor.html"
    },
    {
      "name": "Psychrometric Chart",
      "id": "Psychrometric Chart",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to draw a psychrometric chart in the Rhino scene and evaluate a set of temperatures and humidity ratios in terms of indoor comfort",
      "description": "Use this component to draw a psychrometric chart in the Rhino scene and evaluate a set of temperatures and humidity ratios in terms of indoor comfort.  Connected data can include either outdoor temperature and humidty ratios from imported EPW weather data, indoor temperature and humidity ratios from an energy simulation, or indivdual numerical inputs of temperature and humidity.  The input data will be plotted alongside polygons on the chart representing comfort as well as polygons representing the efects of passive building strategies on comfort.<br>The specific human energy balance model used by the psychrometric chart is the Predicted Mean Vote (PMV) model developed by P.O. Fanger. PMV is a seven-point scale from cold (-3) to hot (+3) that is used in comfort surveys.  Each interger value of the scale indicates the following: -3:Cold, -2:Cool, -1:Slightly Cool, 0:Neutral, +1:Slightly Warm, +2:Warm, +3:Hot.  The range of comfort is generally accepted as a PMV between -1 and +1 and this is what defines the range of the comfort polygon on the psychrometric chart.<br>Accordingly, this component will also output the PMV of the occupant for the input conditions as well as an estimated percentage of people dissatisfied (PPD) in the given conditions.<br>The comfort models that make this component possible were translated to python from a series of validated javascript comfort models developed at the Berkely Center for the Built Environment (CBE).<br>Specific documentation on the comfort models can be found here: https://code.google.com/p/cbe-comfort-tool/wiki/ComfortModels<br>Special thanks goes to the authors of the online CBE Thermal Comfort Tool who first made the javascript models in order to power the tool:<br>Hoyt Tyler, Schiavon Stefano, Piccioli Alberto, Moon Dustin, and Steinfeld Kyle, 2013, CBE Thermal Comfort Tool. <br>Center for the Built Environment, University of California Berkeley, http://cbe.berkeley.edu/comforttool/<br>The information for the polygons representing passive strategies comes from the climate consultant psychrometric chart.  Further information on how these polygons are calculated can be found here:<br>http://apps1.eere.energy.gov/buildings/tools_directory/software.cfm/ID=123/pagename=alpha_list<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/psychrometricChart.html"
    },
    {
      "name": "Radiation Calla Dome",
      "id": "Radiation Calla Dome",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to draw Radiation Calla Dome, which shows you how radiation would fall on an object from all directions for a given sky",
      "description": "Use this component to draw Radiation Calla Dome, which shows you how radiation would fall on an object from all directions for a given sky.<br>It is useful for finding the best direction with which to orient solar panels and gives a sense of the consequences of deviating from such an orientation.<br>The Calla Dome can be understood in three different ways:<br>1) The Calla Dome a 3D representation of all possible radiation roses for a given sky since it includes all vertical angles from 0 to 90.<br>2) The Calla Dome is the reciprocal of the Tergenza Sky Dome since the Cala Dome essentially shows you how the radiation from the sky will fall onto a hemispherical object.<br>3) The Calla Dome is a smart radiation analysis of a hemisphere.  Your results would effectively be the same if you made a hemisphere in Rhino and ran it through the \"Radiation Analysis\" component but, with this component, you will get a smoother color gradient and the component will automatically output the point (or vector) with the most radiation.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/radiationCallaDome.html"
    },
    {
      "name": "Radiation Rose",
      "id": "Radiation Rose",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to make a radiation rose in the Rhino scene",
      "description": "Use this component to make a radiation rose in the Rhino scene.  Radiation roses give a sense of how much radiation comes from the different cardinal directions, which will give an initial idea of where glazing should be minimized, shading applied, or solar collectors placed.<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/radiationRose.html"
    },
    {
      "name": "select Sky Mtx",
      "id": "select Sky Mtx",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to select a specific sky matrix (skyMxt) for an hour of the year or for an analysis period",
      "description": "Use this component to select a specific sky matrix (skyMxt) for an hour of the year or for an analysis period.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/selectSkyMtx.html"
    },
    {
      "name": "Sky Dome",
      "id": "Sky Dome",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "This component allows you to visualize a selected sky matrix from the selectSkyMxt component in order to see the patches of the sky dome where radiation is coming from",
      "description": "This component allows you to visualize a selected sky matrix from the selectSkyMxt component in order to see the patches of the sky dome where radiation is coming from.<br>The component will produce 3 sky domes by default: a dome showing just the diffuse radiation, a dome showing just the direct radiation, and a dome showing the total radiation.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/skyDome.html"
    },
    {
      "name": "Sun Path",
      "id": "Sun Path",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to make a 3D sun-path (aka",
      "description": "Use this component to make a 3D sun-path (aka. sun plot) in the Rhino scene.  The component also outputs sun vectors that can be used for sunlight hours analysis or shading design with the other Ladybug components.<br>The sun-path function used here is a Python version of the RADIANCE sun-path script by Greg Ward. The RADIANCE source code can be accessed at:<br>http://www.radiance-online.org/download-install/CVS%20source%20code<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/sunPath.html"
    },
    {
      "name": "Wind Boundary Profile",
      "id": "Wind Boundary Profile",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to visualize a wind profile curve for a given terrain type",
      "description": "Use this component to visualize a wind profile curve for a given terrain type.  Wind speed increases as one leaves the ground and wind profiles are a means of visualizing this change in wind speed with height. <br>The wind profile will point you in the direction of prevailing wind if EPW data is connected to _windSpeed_tenMeters and windDirections_. In case you are trying to orient your building to take advantage of natural ventilation, as a good rule of thumb, it always a good strategy to align the shorter axis of your building parellel to the prevailing wind directions.<br>More information on the power law of the wind profile can be found here: http://en.wikipedia.org/wiki/Wind_profile_power_law<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/windBoundaryProfile.html"
    },
    {
      "name": "Wind Rose",
      "id": "Wind Rose",
      "library": "Ladybug",
      "category": "2 | VisualizeWeatherData",
      "summary": "Use this component to make a windRose in the Rhino scene",
      "description": "Use this component to make a windRose in the Rhino scene. In this wind rose diagram, each wedge represents the percentage of time the wind came from that direction during the analysis period you choose. You will note that each wedge is also colored. These colors relate directly with the legend displayed on the right. The colors in a wedge conveys the relative percentage of time the wind coming from that direction was within that speed range.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/windRose.html"
    },
    {
      "name": "Bounce from Surface",
      "id": "Bounce from Surface",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to get a sense of how direct sunlight is reflected off of an initial _sourceSrf and subsequently to a set of context_ geometries by tracing sun rays forwards through this geometry",
      "description": "Use this component to get a sense of how direct sunlight is reflected off of an initial _sourceSrf and subsequently to a set of context_ geometries by tracing sun rays forwards through this geometry.<br>Examples where this component might be useful include the evaluation of the diffusion of light by a light shelf, or testing to see whether a parabolic building geometry (like a Ghery building) might focus sunlight to dangerous levels at certain times of the year.<br>Note that this component assumes that all sun light is reflected off of these geometries specularly (as if they were a mirror) and, for more detailed raytrace analysis, the Honeybee daylight components should be used.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/bounceFromSurface.html"
    },
    {
      "name": "Comfort Shade Benefit Evaluator",
      "id": "Comfort Shade Benefit Evaluator",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "This is a component for visualizing the desirability of shade in terms of comfort temperature by using solar vectors, a series of hourly temperatures (usually outdoor temperatures), and an assumed balance temperature",
      "description": "This is a component for visualizing the desirability of shade in terms of comfort temperature by using solar vectors, a series of hourly temperatures (usually outdoor temperatures), and an assumed balance temperature.  The balance temperature represents the median temperture that people find comfortable, which can vary from climate to climate but is usually somewhere around 20C.<br>Solar vectors for hours when the temperature is above the balance point contribute positively to shade desirability while solar vectors for hours when the temperature is below the balance point contribute negatively.<br>The component outputs a colored mesh of the shade illustrating the net effect of shading each mesh face.  A higher saturation of blue indicates that shading the cell is very desirable.  A higher saturation of red indicates that shading the cell is harmful (blocking more winter sun than summer sun). Desaturated cells indicate that shading the cell will have relatively little effect on outdoor comfort or building performance.<br>The units for shade desirability are net temperture degree-days helped per unit area of shade if the test cell is blue.  If the test cell is red, the units are net heating degree-days harmed per unit area of shade.<br>The method used by this component is based off of the Shaderade method developed by Christoph Reinhart, Jon Sargent, Jeffrey Niemasz.  This component uses Shaderade's method for evaluating shade and window geometry in terms of solar vectors but substitutes Shaderade's energy simulation for an evaluation of heating and temperture degree-days about a balance temperature. <br>A special thanks goes to them and their research.  A paper detailing the Shaderade method is available at:<br>http://web.mit.edu/tito_/www/Publications/BS2011_Shaderade.pdf<br>The heating/temperture degree-day calculation used here works by first getting the percentage of sun blocked by the test cell for each hour of the year using the Shaderade method.  Next, this percentage for each hour is multiplied by the temperature above or below the balance point for each hour to get a \"degree-hour\" for each hour of the year for a cell.  Then, all the temperture-degree hours (above the balance point) and heating degree-hours (below the balance point) are summed to give the total heating or temperture degree-hours helped or harmed respectively.  This number is divided by 24 hours of a day to give degree-days.  These degree days are normalized by the area of the cell to make the metric consistent across cells of different area.  Lastly, the negative heating degree-days are added to the positive temperture degree-days to give a net effect for the cell.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/comfortShadeBenefitEvaluator.html"
    },
    {
      "name": "Cone Of Vision",
      "id": "Cone Of Vision",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate and visualize cones of vision",
      "description": "Use this component to generate and visualize cones of vision.<br>This component can help you to customize view analysis. Plug its outputs into Ladybug_View Analysis.<br>Car at 25 mph, Car at 45 mph, Car at 65 mph (horizontal angle, distance limits)<br>Source: U. S. Bureau of Land Management. Visual Resource Management Program (Course 8400-05) 2008.<br>Human, Color Recognition, Sign Recognition, Word Recognition (horizontal angle)<br>Human, Color Recognition, Optimal Video Display Area (vertical angle)<br>Source: INO - CNR Istituto Nazionale di Ottica www.ino.it Titolo: Il processo della Visione e Stereoscopia Relatore: Luca Mercatelli 16 aprile 2010 Polo viale.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/coneOfVision.html"
    },
    {
      "name": "Forward Raytracing",
      "id": "Forward Raytracing",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to get a sense of how sunlight is reflected by a set of context geometries by tracing sun rays forwards through this geometry",
      "description": "Use this component to get a sense of how sunlight is reflected by a set of context geometries by tracing sun rays forwards through this geometry.<br>Examples where this component might be useful include the evaluation of the diffusion of light by a light shelf, or testing to see whether a parabolic building geometry (like a Ghery building) might focus sunlight to dangerous levels at certain times of the year.<br>Note that this component assumes that all sun light is reflected off of these geometries specularly (as if they were a mirror) and, for more detailed raytrace analysis, the Honeybee daylight components should be used.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/forwardRaytracing.html"
    },
    {
      "name": "Radiation Analysis",
      "id": "Radiation Analysis",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "This component allows you to calculate the radiation fallin on input _geometry using a sky matrix from the selectSkyMxt component",
      "description": "This component allows you to calculate the radiation fallin on input _geometry using a sky matrix from the selectSkyMxt component.<br>This type of radiation sutdy is useful for building surfaces such as windows, where you might be interested in solar heat gain, or solar panels, where you might be interested in the energy that can be collected.<br>This component is also good for surfaces representing outdoor spaces (such as parks or seating areas) where radiation could affect thermal comfort or vegetation growth.<br>No reflection of sunlight is included in the radiation analysis with this component and it should therefore be used<br>neither for interior daylight studies nor for complex geometries nor for surfaces with high a reflectivity.<br>For these situations where the relfection of light is important, the Honeybee daylight components should be used instead of this one.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/radiationAnalysis.html"
    },
    {
      "name": "Shading Designer",
      "id": "Shading Designer",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate shading breps for any glazed surface or list of glazed surfaces",
      "description": "Use this component to generate shading breps for any glazed surface or list of glazed surfaces.  The component supports two methods for shading generation.  The first is a simple depth method, which will generate an overhang of the speficied depth (or multiple overhangs if the _numOfShds is increased).  The second method is to input a set of solar vectors from the Sunpath component that should be blocked by the shade.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/shadingDesigner.html"
    },
    {
      "name": "Shading Mask",
      "id": "Shading Mask",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to see the portion of the sky dome that is masked by context geometry around a given point",
      "description": "Use this component to see the portion of the sky dome that is masked by context geometry around a given point.<br>The component will generate separate meshs for the portions of the sky dome that are masked and visible.<br>The component will also calculate the percentage of the sky that is masked by the context geometry and the percentage that is visible (the sky view factor).<br>-output<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/shadingMask.html"
    },
    {
      "name": "Solar Envelope",
      "id": "Solar Envelope",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate a solar envelope for a given test surface, set of solar vectors, and context geometry that you want to ensure solar access to",
      "description": "Use this component to generate a solar envelope for a given test surface, set of solar vectors, and context geometry that you want to ensure solar access to.  Solar envelopes are typically used to illustrate the volume that can be built within in order to ensure that a new development does not shade the surrounding properties for a given set of sun vectors.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarEnvelope.html"
    },
    {
      "name": "Solar Envelope Basic",
      "id": "Solar Envelope Basic",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate a solar envelope for a closed boundary curve with minimum inputs",
      "description": "Use this component to generate a solar envelope for a closed boundary curve with minimum inputs. This component predefines monthly and hourly ranges in order to simplify the creation of useful envelope geometry.  <br>The solar envelope is used to ensure that its adjacent neighbors (defined as anything outside of the chosen boundary curve) will receive a specified minimum hours of direct solar access for each day in a specified month range of the year.<br>Any geometry built within the solar envelope boundaries will therefore not cast any shadow on adjacent property for the given hour and month range.<br>The start and end dates that determine the month range for solar access can be chosen from the following options:<br>0) Mar 21 - Jun 21<br>1) Mar 21 - Sep 21<br>2) Mar 21 - Dec 21<br>3) Jun 21 - Sep 21<br>4) Jun 21 - Dec 21<br>5) Sep 21 - Dec 21<br>The default set to 4) June 21 to December 21.<br>Reference: Niemasz, J., Sargent, J., Reinhart D.F., \"Solar Zoning and Energy in <br>Detached Residential Dwellings,\" Proceedings of SIMAUD 2011, Boston, April 2011.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarEnvelopeBasic.html"
    },
    {
      "name": "Solar Fan",
      "id": "Solar Fan",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate a solar fan for a given test surface and set of solar vectors",
      "description": "Use this component to generate a solar fan for a given test surface and set of solar vectors.  Solar fans essentially illustrate the volume that should be clear of shading in order to provide solar access to a test surface for a given set of sun vectors.<br>Solar fans are typically used to ensure solar access for park vegetation in the midst of large developments constructed around it.  It can be also used to ensure solar access for windows that might want to use the sun for heating for ceratin hours of the year.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarFan.html"
    },
    {
      "name": "Solar Fan Basic",
      "id": "Solar Fan Basic",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to generate a solar fan with minimumal input data",
      "description": "Use this component to generate a solar fan with minimumal input data. This component predefines monthly and hourly ranges in order to simplify the creation of useful fan geometry.    <br>The solar fan is used to ensure that a given property within a boundary curve is guarenteed a specified minimum hours of direct solar access for each day in a specified month range of the year.<br>Thus, context geometries surrounding this boundary curve that do not penetrate the solar fan will not cast shadows onto the boundary area for the specified hour and month range.<br>The start and end dates that determine the month range for solar access can be chosen from the following options:<br>0) Mar 21 - Jun 21<br>1) Mar 21 - Sep 21<br>2) Mar 21 - Dec 21<br>3) Jun 21 - Sep 21<br>4) Jun 21 - Dec 21<br>5) Sep 21 - Dec 21<br>The default set to 3) June 21 to September 21.<br>Note that extremely complicated concave shapes will take a long time to calculate a solar fan for.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarFanBasic.html"
    },
    {
      "name": "Steady State Surface Temperature",
      "id": "Steady State Surface Temperature",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to calculate a steady state interior/exterior surface temperature from given given indoor/outdoor air temperatures and surface U-Values",
      "description": "Use this component to calculate a steady state interior/exterior surface temperature from given given indoor/outdoor air temperatures and surface U-Values.  Note that this component does not currently account for solar radiation, which can greatly alter surface temperatures in the real world.<br>The formulas used to account for air film resistance in this component come from ASHRAE Fundementals 2013, Chapter 26, Table 10 (26.20).<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/steadyStateSurfaceTemperature.html"
    },
    {
      "name": "Sunlight Hours Analysis",
      "id": "Sunlight Hours Analysis",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "This component calculates the number of hours of direct sunlight received by input geometry using sun vectors from the sunPath component",
      "description": "This component calculates the number of hours of direct sunlight received by input geometry using sun vectors from the sunPath component.<br>This component can be used to evaluate the number of hours of sunlight received by vegetation in a park or the hours where direct sunlight might make a certain outdoor space comfortable or uncomfortable.<br>It can also be used for coarsely-gridded shadow studies in the Rhino scene .  For finer and more detailed shadow studies with simple input geometry, the Ladybug ShadowStudy component can be used.  For detailed shadow studies with complex geometry, the Honeybee daylight tools are recommended.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/sunlightHoursAnalysis.html"
    },
    {
      "name": "Surface View Analysis",
      "id": "Surface View Analysis",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to calculate view factors from a point or plane to a set of surfaces",
      "description": "Use this component to calculate view factors from a point or plane to a set of surfaces.  View factors are used in many thermal comfort calculations such as mean radiant temperture (MRT) or discomfort from radiant assymetry. <br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/surfaceViewAnalysis.html"
    },
    {
      "name": "View Analysis",
      "id": "View Analysis",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to evaluate the visibility of input _geometry from a set of key viewing points",
      "description": "Use this component to evaluate the visibility of input _geometry from a set of key viewing points.<br>For example, this component can be used to evaluate the visibility of an 3D architectural feature from a set of key viewing points along a nearby street or park where people congregate.<br>Another example would be evaluating the visibility of park vegetation geometry from a set of key sun position points from the sunPath component.<br>Yet another example would be evaluating the \"visibility\" of an outdoor overhead radiative heater from a set of key \"viewing\" points located over a human body standing beneath it.<br>This component outputs a percentage of viewpoints seen by the input _geometry.  In the three examples here, this would be the percentage of the 3D architectural feature seen from the street, the percentage of sunlit hours received by the vegetation, or the percentage of the human body warmed by the heater.<br>This component will evaluate view from the test points objectively in all directions. <br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/viewAnalysis.html"
    },
    {
      "name": "View From Sun",
      "id": "View From Sun",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to open a new viewport in Rhino that shows the view from the sun",
      "description": "Use this component to open a new viewport in Rhino that shows the view from the sun.  This is useful for understanding what parts of Rhino geometry are shaded at a particular hour of the day.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/viewFromSun.html"
    },
    {
      "name": "view Rose",
      "id": "view Rose",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to see the area visible from a given viewpoint across a 2D plane of vision",
      "description": "Use this component to see the area visible from a given viewpoint across a 2D plane of vision.<br>The component will create a circular surface in this plane of vision that is interrupted by context geometry to show the places that can be seen through this context geometry.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/viewRose.html"
    },
    {
      "name": "Window Downdraft",
      "id": "Window Downdraft",
      "library": "Ladybug",
      "category": "3 | EnvironmentalAnalysis",
      "summary": "Use this component to compute the floor-level downdraft air temperature and velocity at a given set of points that are located close to a cold surface such as a window",
      "description": "Use this component to compute the floor-level downdraft air temperature and velocity at a given set of points that are located close to a cold surface such as a window.  The draft conditions produced by this model are assumed to be 10 cm off of the floor.<br>The model used in this component comes from physical measurements of window downdraft that were further validated using several CFD experiments.  Ther are published in these papers:<br>Heiselberg, P. (1994). “Draft Risk from Cold Vertical Surfaces.” Building and Environment, 29: 297-301.<br>Manz, H. and Frank, T. (2003). \"Analysis of Thermal Comfort near Cold Vertical Surfaces by Means of Computational Fluid Dynamics.\" Indoor Built Environment. 13: 233-242.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/windowDowndraft.html"
    },
    {
      "name": "Cold Water Temperature",
      "id": "Cold Water Temperature",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate the cold (inlet, mains) water temperature, if water pipes are burried undeground",
      "description": "Use this component to calculate the cold (inlet, mains) water temperature, if water pipes are burried undeground.<br>Sources:<br>http://www.energy.ca.gov/2013publications/CEC-400-2013-003/CEC-400-2013-003-CMF-REV.pdf<br>http://www.nrel.gov/docs/fy04osti/35917.pdf<br>http://www.solarthermalworld.org/sites/gstec/files/story/2015-05-31/textbook_swh.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/coldWaterTemperature.html"
    },
    {
      "name": "Commercial Public Apartment Hot Water",
      "id": "Commercial Public Apartment Hot Water",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate domestic hot water consumption for each hour during a year, for Commercial, Public and Apartment buildings",
      "description": "Use this component to calculate domestic hot water consumption for each hour during a year, for Commercial, Public and Apartment buildings.<br>The following types of buildings are supported:<br>- office<br>- apartment house or multifamily building<br>- hotel/motel<br>- restaurants, cafeterias<br>- drive-ins, grilles, luncheonettes, sandwich, snack shops<br>- primary school<br>- junior and senior high school<br>- men's dormitory<br>- women's dormitory<br>- hospital<br>- nursing home<br>- factory<br>Component based on paper: ASHRAE 2003 Applications Handbook (SI), Chapter 49, Service water heating:<br>https://cours.etsmtl.ca/mec735/Documents/Notes_de_cours/2012/Hiver_2012/Service_Water_heating_ASHRAE.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/commercialPublicApartmentHotWater.html"
    },
    {
      "name": "DC to AC derate factor",
      "id": "DC to AC derate factor",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate overall DC to AC derate factor for Photovoltaics Surface's \"DCtoACderateFactor_\" input",
      "description": "Use this component to calculate overall DC to AC derate factor for Photovoltaics Surface's \"DCtoACderateFactor_\" input.<br>Overall DC to AC derate factor corresponds to various locations and instances in a PV system where power is lost from DC system nameplate to AC power.<br>Component first calculates PVWatts v5 Total losses, then converts them to PVWatts v1 overall DC to AC derate factor.<br>Based on PVWatts v5 Manual: http://www.nrel.gov/docs/fy14osti/62641.pdf<br>If nothing supplied to the inputs, default value of 0.85 will be used.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/dCToACDerateFactor.html"
    },
    {
      "name": "Photovoltaics Module",
      "id": "Photovoltaics Module",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to define the Photovoltaics crystalline silicon (c-Si) module settings",
      "description": "Use this component to define the Photovoltaics crystalline silicon (c-Si) module settings.<br>If nothing inputed, the following PV module settings will be used by default:<br>- module material: crystalline silicon (c-Si)<br>- mountType: Close (flush) roof mount <br>- moduleEfficiency: 15%<br>- temperatureCoefficient: -0.5 %/C<br>- moduleActiveAreaPercent: 90%<br>If you would like to use a thin-film module, then use the thin-film module from \"Import Sandia Photovoltaics Module\" component.<br>Sources:<br>http://prod.sandia.gov/techlib/access-control.cgi/2004/043535.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/photovoltaicsModule.html"
    },
    {
      "name": "Photovoltaics Performance Metrics",
      "id": "Photovoltaics Performance Metrics",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate various Photovoltaics performance metrics",
      "description": "Use this component to calculate various Photovoltaics performance metrics<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/photovoltaicsPerformanceMetrics.html"
    },
    {
      "name": "Photovoltaics Surface",
      "id": "Photovoltaics Surface",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate amount of electrical energy that can be produced by a surface<br>if a certain percentage of it is covered with Photovoltaics",
      "description": "Use this component to calculate amount of electrical energy that can be produced by a surface<br>if a certain percentage of it is covered with Photovoltaics.<br>Component based on NREL PVWatts v1 fixed tilt calculator for crystalline silicon (c-Si) and thin-film photovoltaics.<br>Sources:<br>http://www.nrel.gov/docs/fy14osti/60272.pdf<br>https://pvpmc.sandia.gov<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/photovoltaicsSurface.html"
    },
    {
      "name": "PV SWH System Size",
      "id": "PV SWH System Size",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to generate the PVsurface or SWHsurface for \"Photovoltaics surface\" or \"Solar Water Heating surface\" components, based on initial PV or SWH system sizes",
      "description": "Use this component to generate the PVsurface or SWHsurface for \"Photovoltaics surface\" or \"Solar Water Heating surface\" components, based on initial PV or SWH system sizes.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/pVSWHSystemSize.html"
    },
    {
      "name": "Residential Hot Water",
      "id": "Residential Hot Water",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate domestic hot water consumption for each hour during a year, for a single family household (house)",
      "description": "Use this component to calculate domestic hot water consumption for each hour during a year, for a single family household (house).<br>Component based on paper: \"Modeling patterns of hot water use in households\", Ernest Orlando Lawrence Berkeley National Laboratory; Lutz, Liu, McMahon, Dunham, Shown, McGrue; Nov 1996:<br>http://ees.lbl.gov/sites/all/files/modeling_patterns_of_hot_water_use_in_households_lbl-37805_rev.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/residentialHotWater.html"
    },
    {
      "name": "Simplified Photovoltaics Module",
      "id": "Simplified Photovoltaics Module",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to define simplified Photovoltaics crystalline silicon (c-Si) module settings",
      "description": "Use this component to define simplified Photovoltaics crystalline silicon (c-Si) module settings.<br>If nothing inputed, the following PV module settings will be used by default:<br>- module material: crystalline silicon (c-Si)<br>- mountType: Close (flush) roof mount <br>- moduleEfficiency: 15%<br>- temperatureCoefficient: -0.5 %/C<br>- moduleActiveAreaPercent: 90%<br>If you would like to use a thin-film module, then use the thin-film module from \"Import Sandia Photovoltaics Module\" or \"Import CEC Photovoltaics Module\" components.<br>Also for choosing a specific module, not a simplified one, use one of those two components as well.<br>Sources:<br>http://prod.sandia.gov/techlib/access-control.cgi/2004/043535.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/simplifiedPhotovoltaicsModule.html"
    },
    {
      "name": "Solar Water Heating Performance Metrics",
      "id": "Solar Water Heating Performance Metrics",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate various Solar water heating performance metrics",
      "description": "Use this component to calculate various Solar water heating performance metrics.<br>Also use it to calculate the optimal SWH system size and tank storage volume.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarWaterHeatingPerformanceMetrics.html"
    },
    {
      "name": "Solar Water Heating Surface",
      "id": "Solar Water Heating Surface",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to calculate amount of thermal energy that can be produced by a surface<br>if a certain percentage of it is covered with Solar water heating liquid collectors",
      "description": "Use this component to calculate amount of thermal energy that can be produced by a surface<br>if a certain percentage of it is covered with Solar water heating liquid collectors.<br>The thermal energy can then be used for domestic hot water, space heating or space cooling.<br>Component based on:<br>\"Solar Engineering of Thermal Processes\", John Wiley and Sons, J. Duffie, W. Beckman, 4th ed., 2013.<br>\"Technical Manual for the SAM Solar Water Heating Model\", NREL, N. DiOrio, C. Christensen, J. Burch, A. Dobos, 2014.<br>\"A simplified method for optimal design of solar water heating systems based on life-cycle energy analysis\", Renewable Energy journal, Yan, Wang, Ma, Shi, Vol 74, Feb 2015<br>http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470873663.html<br>https://sam.nrel.gov/system/tdf/SimpleSolarWaterHeatingModel_SAM_0.pdf?file=1&type=node&id=69521<br>http://www.sciencedirect.com/science/article/pii/S0960148114004807<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarWaterHeatingSurface.html"
    },
    {
      "name": "Solar Water Heating System",
      "id": "Solar Water Heating System",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to define Solar water heating system settings",
      "description": "Use this component to define Solar water heating system settings.<br>If nothing inputed, the following swh system will be used by default:<br>- glazed flat plate collectors<br>- active<br>- closed loop<br>- 1 story<br>- unshaded<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarWaterHeatingSystem.html"
    },
    {
      "name": "Solar Water Heating System Detailed",
      "id": "Solar Water Heating System Detailed",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "Use this component to define a detailed Solar water heating system settings",
      "description": "Use this component to define a detailed Solar water heating system settings.<br>If nothing inputed, the following swh system will be used by default:<br>- glazed flat plate collectors<br>- active<br>- closed loop<br>- pipe length: 20 meters<br>- unshaded<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/solarWaterHeatingSystemDetailed.html"
    },
    {
      "name": "Sunpath Shading",
      "id": "Sunpath Shading",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "This component calculates the shading of:<br>- Photovoltaic modules<br>- Solar Water Heating collectors<br>- any other purpose (shading of points)",
      "description": "This component calculates the shading of:<br>- Photovoltaic modules<br>- Solar Water Heating collectors<br>- any other purpose (shading of points)<br>Use \"annualShading\", \"Sep21toMar21Shading\" and \"Mar21toSep21Shading\" outputs for Photovoltaic modules shading. <br>Use \"beamIndexPerHour\" and \"skyExposureFactor\" outputs for Solar Water Heating collectors shading, or any other purpose.<br>Use \"shadedSolarRadiationPerHour\" data for \"solarRadiationPerHour_\" input of \"Thermal Comfort Indices\" component to account for shading.<br>\"annualShading\" output is based on \"Using sun path charts to estimate the effects of shading on PV arrays\", University of Oregon, Frank Vignola:<br>http://solardat.uoregon.edu/download/Papers/UsingSunPathChartstoEstimatetheEffectofShadingonPVArrays.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/sunpathShading.html"
    },
    {
      "name": "Tilt And Orientation Factor",
      "id": "Tilt And Orientation Factor",
      "library": "Ladybug",
      "category": "4 | Renewables",
      "summary": "This component calculates the Optimal Tilt, Optimal Orientation and TOF (Tilt and Orientation Factor) for PV modules or Solar water heating collectors",
      "description": "This component calculates the Optimal Tilt, Optimal Orientation and TOF (Tilt and Orientation Factor) for PV modules or Solar water heating collectors.<br>TOF is a solar radiation at the actual tilt and orientation divided by the solar radiation at the optimum tilt and orientation.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/tiltAndOrientationFactor.html"
    },
    {
      "name": "Activities Met List",
      "id": "ActivitiesList",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Provides a list of available activites and outputs the metabolic rate of that activity for use in the Ladybug PMV comfort calculator",
      "description": "Provides a list of available activites and outputs the metabolic rate of that activity for use in the Ladybug PMV comfort calculator.",
      "iconCss": "background: url('icons/ladybug.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/activitiesMetList.html"
    },
    {
      "name": "Adaptive Comfort Parameters",
      "id": "Adaptive Comfort Parameters",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to set Adaptive comfort parameters for the Adaptive Comfort Calculator or the Adaptive Comfort Chart",
      "description": "Use this component to set Adaptive comfort parameters for the Adaptive Comfort Calculator or the Adaptive Comfort Chart.  <br>Parameters include the ability to use either US (ASHRAE) or European (EN) standards as well as set the acceptability threshold for the percent of the occupants that are comfortable (which varies for different building types between the two standards).<br>This component also includes the ability to set a custom correlation between outdoor temperature and indoor desired temperature using a 'levelOfConditioning' variable and research that is not an official part of the ASHRAE or EN standards but is endorsed by many of the scientists who helped create these standards.<br>Detailed information on all of these parameters is described in this book:<br>Fergus Nicol, Michael Humphreys, Susan Roaf. Adaptive Thermal Comfort: Principles and Practice. Routledge, 2012. (https://books.google.com/books?id=vE7FBQAAQBAJ&dq=adaptive+thermal+comfort)<br>Users are also encouraged to use the 'Ladybug_Adaptive Comfort Chart' component or the Center for the Built Environment's (CBE) comfort tool to help visualize the differences between these parameters:<br>Special thanks goes to the authors of the online CBE Thermal Comfort Tool who first coded the javascript: Hoyt Tyler, Schiavon Stefano, Piccioli Alberto, Moon Dustin, and Steinfeld Kyle. http://cbe.berkeley.edu/comforttool/<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/adaptiveComfortParameters.html"
    },
    {
      "name": "Beaufort Ranges",
      "id": "Beaufort Ranges",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "This component outputs conditional statements as per beaufort scale that you can plug in conditionaStatement_ input of wind rose component",
      "description": "This component outputs conditional statements as per beaufort scale that you can plug in conditionaStatement_ input of wind rose component. These conditionals statements basically represent a range of wind velocity. For example, “Calm” relates to winds with velocities in the range of 0 m/s to 0.2 m/s. On plugging this component to wind rose, a summary would be added to the text displayed at the bottom of this wind rose.<br>For those interested in learning more about Beaufort scale, following is a good resource<br>https://github.com/devngc/References/tree/master/Beaufort%20Scale<br>https://en.wikipedia.org/wiki/Beaufort_scale <br>",
      "iconCss": "background: url('icons/ladybug.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/beaufortRanges.html"
    },
    {
      "name": "Body Characteristics",
      "id": "Body Characteristics",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to calculate the Basal Metabolic Rate, Body Mass Index indices and to create the \"bodyCharacterstics_\" input for the \"Thermal comfort indices\" component",
      "description": "Use this component to calculate the Basal Metabolic Rate, Body Mass Index indices and to create the \"bodyCharacterstics_\" input for the \"Thermal comfort indices\" component.<br>Basal Metabolic Rate formula by Mifflin-St. Jeor. Body Mass Index formula by Adolphe Quetelet.<br>Formulas from: \"Comparison of predictive equations for resting Metabolic rate in healthy nonobese and obese adults: a systematic review\",<br>Frankenfield, Roth-Yousey, Compher, American Dietetic Association, 2005.:<br>https://www.andeal.org/files/Docs/Frankenfield_et_al_2005%5B1%5D.pdf<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/bodyCharacteristics.html"
    },
    {
      "name": "BTU2Wh",
      "id": "BTU2Wh",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert energy values in BTU to Wh or kBTU to kWh",
      "description": "Use this component to convert energy values in BTU to Wh or kBTU to kWh.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/bTU2Wh.html"
    },
    {
      "name": "BTUft2Whm",
      "id": "BTUft2Whm",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert energy values in BTU/ft2 to Wh/m2 (or kBTU/ft2 to kWh/m2)",
      "description": "Use this component to convert energy values in BTU/ft2 to Wh/m2 (or kBTU/ft2 to kWh/m2).<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/bTUft2Whm.html"
    },
    {
      "name": "C2F",
      "id": "C2F",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert temperatures from Celcius to Fahrenheit",
      "description": "Use this component to convert temperatures from Celcius to Fahrenheit.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/c2F.html"
    },
    {
      "name": "Capture View",
      "id": "Capture View",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to capture Rhino views and save them to your hard drive as as a",
      "description": "Use this component to capture Rhino views and save them to your hard drive as as a .png files.<br>This is particularly useful if you are trying to create animations of Grasshopper geometry and want to automate the capturing of views.<br>Note that your images will have a Rhino world axes icon in the lower left of the image unless you go to Options > Grid > and uncheck \"Show world axes icon\" in Rhino.<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/captureView.html"
    },
    {
      "name": "Cfm2M3s",
      "id": "Cfm2M3s",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert volume flow rate from U",
      "description": "Use this component to convert volume flow rate from U.S. cubic feet per minute (cfm) to S.I. cubic meters per second (m3/s).<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/cfm2M3s.html"
    },
    {
      "name": "Combine Solar Envelopes",
      "id": "Combine Solar Envelopes",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to combine two or more solar envelopes from Ladybug_SolarEnvelope component",
      "description": "Use this component to combine two or more solar envelopes from Ladybug_SolarEnvelope component<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/combineSolarEnvelopes.html"
    },
    {
      "name": "Comfort Mannequin",
      "id": "Comfort Mannequin",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to color a mannequin based on their relation to a comfort temperature",
      "description": "Use this component to color a mannequin based on their relation to a comfort temperature.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/ladybug/comfortMannequin.html"
    },
    {
      "name": "Construct Time",
      "id": "Construct Time",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to construct a specific hour from corresponding time in hours, minutes and seconds",
      "description": "Use this component to construct a specific hour from corresponding time in hours, minutes and seconds.  The output can be plugged into the analysisPeriod or sunPath components.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/constructTime.html"
    },
    {
      "name": "Countour Mesh",
      "id": "Countour Mesh",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to create contoured visualizations of any analysis mesh and corresponding numerical dataset in Ladybug + Honeybee",
      "description": "Use this component to create contoured visualizations of any analysis mesh and corresponding numerical dataset in Ladybug + Honeybee.<br>Note that this component currently only works for planar meshes.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/countourMesh.html"
    },
    {
      "name": "Create Legend",
      "id": "Create Legend",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to create a custom legend for any set of data or to create a more flexible legend for any ladybug component with a legend",
      "description": "Use this component to create a custom legend for any set of data or to create a more flexible legend for any ladybug component with a legend.  Specifically, this component outputs data that can be plugged into the grasshopper \"Text Tag 3D\" component so that the legend text can be baked into the Rhino scene as actual text instead of surfaces representing text.<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/createLegend.html"
    },
    {
      "name": "Day Month Hour",
      "id": "Day Month Hour",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to calculate date information from an hour of the year",
      "description": "Use this component to calculate date information from an hour of the year.  Date information includes the day of the month, the month of the year and the hour of the day.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/dayMonthHour.html"
    },
    {
      "name": "DOY HOY",
      "id": "DOY HOY",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to calculate the day of the year and hour of the year from an input date with a day of the month, month of the year and hour of the day",
      "description": "Use this component to calculate the day of the year and hour of the year from an input date with a day of the month, month of the year and hour of the day.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/ladybug/dOYHOY.html"
    },
    {
      "name": "F2C",
      "id": "F2C",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert temperatures from Fahrenheit to Celcius",
      "description": "Use this component to convert temperatures from Fahrenheit to Celcius.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/f2C.html"
    },
    {
      "name": "False Start Toggle",
      "id": "Toggle",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Just like a normal Boolean Toggle, except it always reverts to \"False\" on file open",
      "description": "Just like a normal Boolean Toggle, except it always reverts to \"False\" on file open.",
      "iconCss": "background: url('icons/ladybug.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/falseStartToggle.html"
    },
    {
      "name": "fly",
      "id": "FLY!",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use Fly to cycle through all connected sliders",
      "description": "Use Fly to cycle through all connected sliders. If no slider is connects it will cycle through all the sliders in the document!<br>      Fly is originally posted as a code snippet by David Rutten. The code has been modified by James Ramsedn and Mostapha Sadeghipour Roudsari.<br><br>      -<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/fly.html"
    },
    {
      "name": "Generate Mesh",
      "id": "Generate Mesh",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to genrate a mesh with corresponding test points",
      "description": "Use this component to genrate a mesh with corresponding test points.  The resulting mesh will be in a format that the Recolor Mesh component will accept.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/generateMesh.html"
    },
    {
      "name": "Gradient Library",
      "id": "Gradient Library",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to access a library of typical gradients useful throughout Ladybug",
      "description": "Use this component to access a library of typical gradients useful throughout Ladybug.  The output from this component should be plugged into the customColors_ input of the \"Ladybug_Legend Parameters\" component.<br>For an image of each of the gardients in the library, check here:<br>https://github.com/mostaphaRoudsari/ladybug/blob/master/resources/gradients.jpg<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/gradientLibrary.html"
    },
    {
      "name": "Image Viewer",
      "id": "Viewer",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Preview image files<br>Please find the source code from:<br>https://github",
      "description": "Preview image files<br>Please find the source code from:<br>https://github.com/MingboPeng/Ironbug",
      "iconCss": "background: url('icons/ladybug.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/ladybug/imageViewer.html"
    },
    {
      "name": "L2G",
      "id": "L2G",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert the liquid volume from Liters to U",
      "description": "Use this component to convert the liquid volume from Liters to U.S. Gallons (not Imperial Gallons).<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/l2G.html"
    },
    {
      "name": "Legend Parameters",
      "id": "Legend Parameters",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to change the colors, numerical range, and/or number of divisions of any Ladybug legend along with the corresponding colored mesh that the legend refers to",
      "description": "Use this component to change the colors, numerical range, and/or number of divisions of any Ladybug legend along with the corresponding colored mesh that the legend refers to.<br>This component can also move a legend and change its scale.<br>Any Ladybug component that outputs a colored mesh and a legend will have an input that can accept Legend Parameters from this component.<br>This component particularly helpful in making the colors of Ladybug graphics consistent for a presentation or for synchonizing the numerical range and colors between Ladybug graphics.<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/legendParameters.html"
    },
    {
      "name": "lux2ft-cd",
      "id": "lux2ft-cd",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert illuminance from lux to foot-candles",
      "description": "Use this component to convert illuminance from lux to foot-candles.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/lux2ftcd.html"
    },
    {
      "name": "M3s2Cfm",
      "id": "M3s2Cfm",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert volume flow rate from S",
      "description": "Use this component to convert volume flow rate from S.I. cubic meters per second (m3/s) to U.S. cubic feet per minute (cfm).<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/m3s2Cfm.html"
    },
    {
      "name": "Mesh Threshold Selector",
      "id": "Mesh Threshold Selector",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to select out the part of a colored mesh that meets a certain conditional statement",
      "description": "Use this component to select out the part of a colored mesh that meets a certain conditional statement.  This has multiple uses: The generation of a custom shade from a shade benefit analysis, Quantifying the daylight area from a daylight analysis, Selecting out the portion of a roof with enough solar radiation for PV panels, and much more.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/meshThresholdSelector.html"
    },
    {
      "name": "Mesh-To-Hatch",
      "id": "Mesh-To-Hatch",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to bake a clored mesh into the Rhino scene as a series of colored hatches",
      "description": "Use this component to bake a clored mesh into the Rhino scene as a series of colored hatches.  This is particularly useful if you are trying to export ladybug graphics from Rhino to vector-based programs like Inkscape or Illustrator.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/meshToHatch.html"
    },
    {
      "name": "MRT Calculator",
      "id": "MRT Calculator",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component calculate Mean Radiant Temperature (MRT) given a set of temperatures and corresponding view factors",
      "description": "Use this component calculate Mean Radiant Temperature (MRT) given a set of temperatures and corresponding view factors.  This component will check to be sure view factors add to 1 and will use the following formula:<br>MRT = (V1*T1^4 + V2*T2^4 + ...) ^ (1/4)<br>Where V corresponds to a view factor and T corresponds to a temperature.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/mRTCalculator.html"
    },
    {
      "name": "ms2mph",
      "id": "ms2mph",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Convert from m/s to mile/h",
      "description": "Convert from m/s to mile/h <br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/ms2mph.html"
    },
    {
      "name": "North",
      "id": "North",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to create a compass sign that indicates the direction of North in the Rhino scene",
      "description": "Use this component to create a compass sign that indicates the direction of North in the Rhino scene.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/ladybug/north.html"
    },
    {
      "name": "Orient to Camera",
      "id": "Orient to Camera",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to generate a plane that is oriented perpendicular to the active Rhino viewport camera direction and centered at an input _initPosition point",
      "description": "Use this component to generate a plane that is oriented perpendicular to the active Rhino viewport camera direction and centered at an input _initPosition point.<br>This is useful for orienting geometry Grasshopper to the Rhino viewport camera, which may help in presenting certain Ladybug visualizations in Rhino.<br>Connect a Grasshopper \"Timer\" component to the refresh_ input of this component in order to get a real time update of the oriented plane based on the Rhino viewport camera direction.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/orientToCamera.html"
    },
    {
      "name": "Orientation Study Parameters",
      "id": "Orientation Study Parameters",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component with the Ladybug \"Radiation Analysis\", \"Sunlight Hours Analysis\", or \"View Analysis\" component to set up the parameters for an Orientation Study",
      "description": "Use this component with the Ladybug \"Radiation Analysis\", \"Sunlight Hours Analysis\", or \"View Analysis\" component to set up the parameters for an Orientation Study.<br>You can use an Orientation Study to answer questions like \"What orientation of my building will give me the highest or lowest radiation gain for my analysis period?\"<br>Another question might be \"What direction should I orient my static solar panel to get the maximum radiation during my analysis period?\"<br>An Orientation Study will automatically rotate your geometry around several times based on the inputs made to this component and the results will be recorded in the corresponding Analysis component that this one is hooked up to.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/orientationStudyParameters.html"
    },
    {
      "name": "Passive Strategy List",
      "id": "StrategyList",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Provides a list of passive thermal strategies to be plugged into the Ladybug_Psychrometric Chart",
      "description": null,
      "iconCss": "background: url('icons/ladybug.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/passiveStrategyList.html"
    },
    {
      "name": "Passive Strategy Parameters",
      "id": "Passive Strategy Parameters",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to adjust the assumptions of the passive strategies that can be overalid on the Ladybug the Psychrometric Chart",
      "description": "Use this component to adjust the assumptions of the passive strategies that can be overalid on the Ladybug the Psychrometric Chart. The default assumptions of each of the strategies are as follows: <br>Evaporative Cooling - This polygon represents the conditions under which direct evaporative cooling would be helpful.  As such, it takes as its upper limit the line of constant enthalpy from the edge of the comfort polygon and includes all warm temperatures below it.  If the user has set a minimum humidity tolerance, the polygon will also include the points beneath the comfort polygon as it is assumed that the evaporation of water will both humidify and cool the air.  Nothe that this direct evaporative cooling polygon is slightly different than 2-stage evaporative cooling.<br>Thermal Mass + Night Flush - The polygon represents the conditions under which shaded, night-flushed thermal mass can keep occupants cool. By default, this polygon assumes that temperatures can get as high as 16.7 C above the max temperature of the comfort polygon as long temperatures 12 hours before the hot period are 2.8 C lower than the max temperture of the comfort polygon.  This parameter component can be used to adjust these two numbers. The thermal mass polygon is limited in terms of humidity in that it obeys any limits on absolute humidity that the comfort polygon dies.<br>Occupant Use of Fans - This polygon is made by assuming that a wind speed of 1.5 m/s is the maximum speed tolerable before it starts blowing papers and becomes annoying to occupants.  This strategy parameters component can be used to adjust this maximum acceptable wind speed. As such, the polygon is determined by running a PMV model with this wind speed and the input rad temp, met rate and clo level of the psych chart.  This component obeys any limits on humidity that the comfort polygon does.  Note that this polygon assumes that you are already naturally ventilating and that your natural ventilation period is defined by your comfort polygon.<br>Internal Heat Gain - The component assumes a minimum building balance point of 12.8 C and any conditions that are warmer than that (up to the comfort polygon) will keep occupants comfortable.  It is assumed that, above this outdoor temperature, the building is free-running and occupants are able to open windows as they wish.  Note that this balance temperature of 12.8 is fairly low and assumes a large number of inside heat sources or people as well as in insulated envelope.  This balance temperature can be adjusted with this strategyPar component.<br>Dessicant Dehumidification - This polygon represents the conditions under which dessicant dehumidification would be helpful.  As such, it takes as its upper limit the line of constant enthalpy from the edge of the comfort polygon and includes all humid conditions below it.  Note that this polygon does not appear if there is no upper humidity limit on the comfort polygon.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/passiveStrategyParameters.html"
    },
    {
      "name": "PMV Comfort Parameters",
      "id": "PMV Comfort Parameters",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to set PMV comfort parameters for the PMV comfort calculator or the Psychrometric Chart",
      "description": "Use this component to set PMV comfort parameters for the PMV comfort calculator or the Psychrometric Chart.  <br>Parameters include whether comfort is defined by 80 or 90 percent of the occupants comfortable as well as maximum and minimum acceptable humidity ratios.  Note that the applied science and engineering community differs widely on its inderstanding of these parameters.<br>The air conditioning industy set out with the goal of satisfying 80% of the occupants (assuming they all had similar clothing and metabolic rates) but many today set 90% as their benchmark.  Also note that, if you try to restrict everyone's clothing and metabolic rate as the PMV model assumed, you can never make 100% of the people comfortable.<br>Further note that cultures differ widely in terms of their treatment of humidity at cooler temperatures and lack of humidity.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/pMVComfortParameters.html"
    },
    {
      "name": "r IP2r SI",
      "id": "r IP2r SI",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert R-Values in IP (h·ft2·°F/BTU) to R-Values in SI (K·m2/W) to plug into any of the Honeybee material components",
      "description": "Use this component to convert R-Values in IP (h·ft2·°F/BTU) to R-Values in SI (K·m2/W) to plug into any of the Honeybee material components.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/rIP2rSI.html"
    },
    {
      "name": "Real Time Radiation Analysis",
      "id": "Real Time Radiation Analysis",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to scroll through the results of a Ladybug Radiation Analysis on an hour-by-hour, day-by-day, or month-by-month basis in real time!<br>The component uses a sky matrix (SkyMxt) from the selectSkyMxt component and the intersection matrix (intersectionMxt) from the Radiation Analysis component to calculate real time radiation results",
      "description": "Use this component to scroll through the results of a Ladybug Radiation Analysis on an hour-by-hour, day-by-day, or month-by-month basis in real time!<br>The component uses a sky matrix (SkyMxt) from the selectSkyMxt component and the intersection matrix (intersectionMxt) from the Radiation Analysis component to calculate real time radiation results.<br>Once the correct inputs have been hooked up to this component, you should use the inputs of the connected selectSkyMxt component to scroll through results.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/realTimeRadiationAnalysis.html"
    },
    {
      "name": "Recolor Mesh",
      "id": "Recolor Mesh",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to re-color a mesh with new a numerical data set whose length corresponds to the number of faces in the _inputMesh",
      "description": "Use this component to re-color a mesh with new a numerical data set whose length corresponds to the number of faces in the _inputMesh.<br>This component is useful if you have post-processed any of the numerical data out of the Ladybug components using Grasshopper math components.<br>It is also necessary to view results from the Ladybug Real Time Radiation Analysis.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/ladybug/recolorMesh.html"
    },
    {
      "name": "Render View",
      "id": "Render View",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to render Rhino views and save them to your hard drive",
      "description": "Use this component to render Rhino views and save them to your hard drive.  This component is fully-functional with both Rhino Render and V-Ray for Rhino.  Other rendering plugins may still work but are not fully supported yet.<br>This component is particularly useful if you are trying to create animations of Grasshopper geometry and want to automate the capturing of views.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/renderView.html"
    },
    {
      "name": "Set Rhino Sun",
      "id": "Set Rhino Sun",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to set the Rhino sun from grasshopper and coordinate your Rhino visualizations with the Ladybug weatherfile and other solar parameters",
      "description": "Use this component to set the Rhino sun from grasshopper and coordinate your Rhino visualizations with the Ladybug weatherfile and other solar parameters.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/setRhinoSun.html"
    },
    {
      "name": "Set the View",
      "id": "Set the View",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to set the camera location and direction for the Rhino \"Perspective\" viewport",
      "description": "Use this component to set the camera location and direction for the Rhino \"Perspective\" viewport.<br>Here is the video that shows how it works: http://www.youtube.com/watch?v=7Mmhz867zY8<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/setTheView.html"
    },
    {
      "name": "Shading Parameters List",
      "id": "Shading Parameters List",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to generate shading depths, numbers of shades, horizontal or vertical boolean values, and shade angles for different cardinal directions to be plugged into the \"Ladybug_Shading Designer\" component or the \"Honeybee_EnergyPlus Window Shade Generator\"",
      "description": "Use this component to generate shading depths, numbers of shades, horizontal or vertical boolean values, and shade angles for different cardinal directions to be plugged into the \"Ladybug_Shading Designer\" component or the \"Honeybee_EnergyPlus Window Shade Generator\".<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/shadingParametersList.html"
    },
    {
      "name": "Texture Maker",
      "id": "Texture Maker",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to generate textures from colored meshes",
      "description": "Use this component to generate textures from colored meshes.<br>In order to export model as *obj you should Bake the new mesh and apply texture to its layer material.<br>It is also compatible with Google Earth.<br>How to use it:<br>1) connect colored mesh which comes from LB analysis component<br>2) run the component<br>The output are: a new mesh that you have to bake and a texture that you should add to material of the layer where your mesh will be.<br>Special thanks goes to the author of the function, Vincente Soler.<br>.<br>http://www.grasshopper3d.com/forum/topics/how-to-render-mesh-colors<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/textureMaker.html"
    },
    {
      "name": "True North",
      "id": "True North",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to calculate Earth's true north from magnetic north",
      "description": "Use this component to calculate Earth's true north from magnetic north.<br>If you are working with location plan generated by Google Maps or any other web mapping service, North will always be positioned in direction of Rhino's Y axis.<br>In case you imported a location plan to Rhino, which has a North direction assigned in a form of magnetic North, then you need to correct that North direction for the influence of Earth's magnetic variation. Which is what this component does.<br>All credit goes to Christopher Weiss (cmweiss@gmail.com), the author of the World Magnetic Model python code.<br>source: https://pypi.python.org/pypi/geomag<br>Based on World Magnetic Model of the NOAA:<br>http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/trueNorth.html"
    },
    {
      "name": "u IP2u SI",
      "id": "u IP2u SI",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert U-Values in IP (BTU/h·ft2·°F) to U-Values in SI (W/K·m2) to plug into any of the Honeybee material components",
      "description": "Use this component to convert U-Values in IP (BTU/h·ft2·°F) to U-Values in SI (W/K·m2) to plug into any of the Honeybee material components.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/uIP2uSI.html"
    },
    {
      "name": "Wh2BTU",
      "id": "Wh2BTU",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert energy values in Wh to BTU (or kWh to kBTU)",
      "description": "Use this component to convert energy values in Wh to BTU (or kWh to kBTU).<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/wh2BTU.html"
    },
    {
      "name": "Whm2BTUft",
      "id": "Whm2BTUft",
      "library": "Ladybug",
      "category": "5 | Extra",
      "summary": "Use this component to convert energy values in Wh/m2 to BTU/ft2 (or kWh/m2 to kBTU/ft2)",
      "description": "Use this component to convert energy values in Wh/m2 to BTU/ft2 (or kWh/m2 to kBTU/ft2).<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -336px",
      "helpLink": "https://rhino.github.io/components/ladybug/whm2BTUft.html"
    },
    {
      "name": "Export Ladybug",
      "id": "Export Ladybug",
      "library": "Ladybug",
      "category": "6 | Developers",
      "summary": "Code Developers of Ladybug and Honeybee can use this component to export Ladybug/Honeybee user objects and source code that they create to the Github folder on their computer",
      "description": "Code Developers of Ladybug and Honeybee can use this component to export Ladybug/Honeybee user objects and source code that they create to the Github folder on their computer.<br>This eases and automates the steps before commiting new components to the Github.<br>This component was written thanks to Giulio Piacentino a really helpful example.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/exportLadybug.html"
    },
    {
      "name": "Update Ladybug",
      "id": "Update Ladybug",
      "library": "Ladybug",
      "category": "6 | Developers",
      "summary": "Code Developers and Beta Testers of new Ladybug components can use this component to remove old Ladybug components, add new Ladybug components, and update existing Ladybug components from a synced Github folder on their computer",
      "description": "Code Developers and Beta Testers of new Ladybug components can use this component to remove old Ladybug components, add new Ladybug components, and update existing Ladybug components from a synced Github folder on their computer.<br>This component can also update outdated Ladybug components in an old Grasshopper file so long as the updates to the components do not involve new inputs or outputs.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -312px",
      "helpLink": "https://rhino.github.io/components/ladybug/updateLadybug.html"
    },
    {
      "name": "Bioclimatic Chart",
      "id": "Bioclimatic Chart",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This is the Bioclimactic Chart",
      "description": "This is the Bioclimactic Chart. It is based in the originally proposed chart by V. Olgyay and then in the chart presented in the book \"Sun, Climate and Architecture\" by Brown.<br>Use this component to draw a Bioclimatic chart in the Rhino scene and evaluate a set of temperatures and humidity ratios in terms of indoor comfort. Connected data can include either outdoor temperature and humidty ratios from imported EPW weather data, indoor temperature and humidity ratios from an energy simulation, or indivdual numerical inputs of temperature and humidity.  The input data will be plotted alongside polygons on the chart representing comfort as well as polygons representing the efects of passive building strategies on comfort.<br>References:<br>    1. Olgyay, V., 1963. Design with Climate. Bioclimatic Approach to Architectural Regionalism. Van Nostrand reinhold, New York.<br>    2. Givoni B., 1976. Man, Climate and Architecture. Applied Science Publishers, Ltd., London.<br>    3. Murray M. and Givoni B., 1979. Architectural Design Based on Climate in Watson D. (ed), 1979. Energy COnservation Through Building Design. McGraw Hill Book Company.<br>    4. Yezioro, A. & E. Shaviv. 1996. A Knowledge Based CAD System for Determining Thermal Comfort Design Strategies. Renewable Energy, 8: (1-4), (pp. 133-138).<br>    5. Brown G.Z. and DeKay M., 2001. Sun, WInd & Light. Architectural Design Strategies (2nd edition). John WIley  & Sons, Inc.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/ladybug/bioclimaticChart.html"
    },
    {
      "name": "ENVI-Met Building Terrain",
      "id": "ENVI-Met Building Terrain",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to generate inputs for \"LB ENVI-Met Spaces\"",
      "description": "Use this component to generate inputs for \"LB ENVI-Met Spaces\".<br>Sometimes some buildings are not generated when you connect terrain input. Try to move buildings or move the terrain to solve this issue.<br>",
      "iconCss": "background: url('icons/ladybug.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetBuildingTerrain.html"
    },
    {
      "name": "ENVI-Met Display",
      "id": "ENVI-Met Display",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to visualize ENVI-Met v4",
      "description": "Use this component to visualize ENVI-Met v4.0 3D geometry models.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetDisplay.html"
    },
    {
      "name": "ENVI-Met Find Output Folder",
      "id": "ENVI-Met Find Output Folder",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This component let you select output folders from Workspace folder",
      "description": "This component let you select output folders from Workspace folder.<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetFindOutputFolder.html"
    },
    {
      "name": "ENVI-Met Grid",
      "id": "ENVI-Met Grid",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to visualize ENVI-Met v4",
      "description": "Use this component to visualize ENVI-Met v4.0 data. Connect \"resultFileAddress\" which comes from ENVI-Met reader.<br>Component mainly based on:<br>https://www.researchgate.net/publication/281031049_Outdoor_Comfort_the_ENVI-BUG_tool_to_evaluate_PMV_values_point_by_point<br>",
      "iconCss": "background: url('icons/ladybug.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetGrid.html"
    },
    {
      "name": "ENVI-Met Manage Workspace",
      "id": "ENVI-Met Manage Workspace",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to create a Workspace folder",
      "description": "Use this component to create a Workspace folder.<br>Connect \"folder\" output to ENVI-Met Spaces.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetManageWorkspace.html"
    },
    {
      "name": "ENVI-Met Read Library",
      "id": "ENVI-Met Read Library",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This component let you select materials from ENVI-Met library",
      "description": "This component let you select materials from ENVI-Met library.<br>",
      "iconCss": "background: url('icons/ladybug.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetReadLibrary.html"
    },
    {
      "name": "ENVI-Met Results Reader",
      "id": "ENVI-Met Results Reader",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This component generate readable output files of ENVI-Met v4",
      "description": "This component generate readable output files of ENVI-Met v4.0 for Ladybug.<br>Component mainly based on:<br>https://www.researchgate.net/publication/281031049_Outdoor_Comfort_the_ENVI-BUG_tool_to_evaluate_PMV_values_point_by_point<br>Special thanks goes to MIT.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetResultsReader.html"
    },
    {
      "name": "ENVI-Met Soil Plant Source",
      "id": "ENVI-Met Soil Plant Source",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to generate ENVI-Met inputs for \"LB ENVI-Met Spaces\"",
      "description": "Use this component to generate ENVI-Met inputs for \"LB ENVI-Met Spaces\".<br>Some 'plant3Did_' could not work properly.<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetSoilPlantSource.html"
    },
    {
      "name": "ENVI-Met Spaces",
      "id": "ENVI-Met Spaces",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to generate ENVI-Met v4",
      "description": "Use this component to generate ENVI-Met v4.0 3D geometry models.<br>Analyze parametric models with ENVI-Met!<br>Save the model in the ENVI_MET Workspace, set the simulation file with ENVI_MET ConfigWizard and run the simulation.<br>N.B. It can write files with equidistant grid only. If you want to visualize INX file with ENVI_MET SPACES you need to use \"Open 3D view\".<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/ladybug/eNVIMetSpaces.html"
    },
    {
      "name": "Import CEC Photovoltaics Module",
      "id": "Import CEC Photovoltaics Module",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to import Photovoltaics module settings for particular module from \"California Energy Commission (CEC) Modules\" library",
      "description": "Use this component to import Photovoltaics module settings for particular module from \"California Energy Commission (CEC) Modules\" library.<br>Download library's newest version from the bottom of the following page:<br>https://sam.nrel.gov/libraries<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/ladybug/importCECPhotovoltaicsModule.html"
    },
    {
      "name": "Import Sandia Photovoltaics Module",
      "id": "Import Sandia Photovoltaics Module",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to import Photovoltaics module settings for particular module from \"Sandia National Laboratories Modules\" library",
      "description": "Use this component to import Photovoltaics module settings for particular module from \"Sandia National Laboratories Modules\" library.<br>Download library's newest version from the bottom of the following page:<br>https://sam.nrel.gov/libraries<br>",
      "iconCss": "background: url('icons/ladybug.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/importSandiaPhotovoltaicsModule.html"
    },
    {
      "name": "Kmz Generator",
      "id": "Kmz Generator",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to export geometries into an Google Earth file",
      "description": "Use this component to export geometries into an Google Earth file.<br>It requires Google Earth. You can download it at this link: https://www.google.it/earth/download/ge/agree.html<br>Once you open kmz file you can continue to update it. This is useful when you change geometries or you want to compare different scenarios.<br>.<br>Updating: Just setting again to \"True\" _writeKmz, after that right click and select \"update\" on Google Earth.<br>Special thanks goes to Google and the authors of gHowl.<br>",
      "iconCss": "background: url('icons/ladybug.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/kmzGenerator.html"
    },
    {
      "name": "Location Finder",
      "id": "Location Finder",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This component uses Google Maps API to generate locations",
      "description": "This component uses Google Maps API to generate locations.<br>This component requires an internet connection and a secure connection (HTTPS), it runs for free up to 2,500 requests per day. Once you go over this limit the component doesn't work.<br>For informations about the rules of use of Google Maps API, take a look at this link:<br>https://developers.google.com/maps/pricing-and-plans/#details<br>Special thanks goes to Google Maps.<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/ladybug/locationFinder.html"
    },
    {
      "name": "Pedestrian Wind Comfort",
      "id": "Pedestrian Wind Comfort",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to analyse pedestrian wind comfort and safety for the present and potential (newly built) urban environments",
      "description": "Use this component to analyse pedestrian wind comfort and safety for the present and potential (newly built) urban environments.<br>Construction of a new building changes the wind microclimate in its vicinity. These changes can result in either decreased or increased wind speeds around the building, which may be uncomfortable or even dangerous.<br>Based on Lawson’s Pedestrian Comfort Criteria (1990)<br>https://www.dropbox.com/s/t9pxhr45vwg2xd2/Wind_Microclimate.pdf?dl=0<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/ladybug/pedestrianWindComfort.html"
    },
    {
      "name": "Shading Mask II",
      "id": "Shading Mask II",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to see the portion of the sky dome that is masked by context geometry around a given viewpoint",
      "description": "Use this component to see the portion of the sky dome that is masked by context geometry around a given viewpoint.<br>The component will generate separate meshs for the portions of the sky dome that are masked and visible.<br>The component will also calculate the percentage of the sky that is masked by the context geometry and the percentage that is visible (the sky view factor).<br>",
      "iconCss": "background: url('icons/ladybug.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/ladybug/shadingMaskII.html"
    },
    {
      "name": "Shadow Study",
      "id": "Shadow Study",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to generate outline curves representing shadows cast by input _geometry for a given _sunVector",
      "description": "Use this component to generate outline curves representing shadows cast by input _geometry for a given _sunVector.<br>Note that, to see shadows cast onto a ground, a surface representing the ground plane must be included in the input _geometry.<br>Connect output of Ladybug_Analysis period component to analysisPeriod_ on Ladybug_SunPath component. This will let you use a range of sunvectors. Using these range of sunvectors, you can turn this shadow study into a shadow range study.<br>Also, please note that, for a list of input _geometry that is larger than 4 or 5 breps, the calculation time of this component can be very long.  Please keep the input geometry to small lists or be prepared to wait a long time.<br>WARNING: This component is a proof of concept that will not work in every situation.  It is not ideal for analyzing curved surfaces and it is not able to calculate shadows for geometries that are intersecting each other.<br>",
      "iconCss": "background: url('icons/ladybug.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/ladybug/shadowStudy.html"
    },
    {
      "name": "Sun Shades Calculator",
      "id": "Sun Shades Calculator",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to generate shading devices, either surface or pergola, for any glazed surface or list of glazed surfaces",
      "description": "Use this component to generate shading devices, either surface or pergola, for any glazed surface or list of glazed surfaces.  <br>The component first culls all sun vectors obstructed by the context, if provided.<br>By default it calculates the device as a \"new brand\" one but it also can calculate the cut profile for a given surface.<br>The default it will generate an overhang over the window (or multiple overhangs if the _numOfShds is increased).  <br>References:<br>Shaviv E., 1975. \"A Method for the Design of Fixed External Sun-Shades\". \"Build International\"  (8), Applied Science Publishers LTD, England, (pp.121-150).<br>Shaviv E., 1984. \"A Design Tool for Determining the Form of Fixed & Movable Sun-Shades\".  \"ASHRAE Trans.\" Vol. 90, AT-84-18 No. 4, Atlanta (pp.1-14).<br>",
      "iconCss": "background: url('icons/ladybug.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/sunShadesCalculator.html"
    },
    {
      "name": "Sunrise Sunset",
      "id": "Sunrise Sunset",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "Use this component to get information about the sun",
      "description": "Use this component to get information about the sun<br>This component is based on NOAA's research (National Oceanic and Atmospheric Administration) and it uses equations from Astronomical Algorithms, by Jean Meeus.<br>\"The sunrise and sunset results are theoretically accurate to within a minute for locations between +/- 72° latitude, and within 10 minutes outside of those latitudes.\"<br>Special thanks goes to the authors of the spreadsheets Solar Calculation and the web page<br>http://www.esrl.noaa.gov/gmd/grad/solcalc/index.html<br>This component calculates sunrise and sunset per hourly data. The approximation error of OfficialSunriseSunset could be about one-two minutes.<br>Despite this component does not consider the leap day (FEB 29th), results are accurate enough.<br>",
      "iconCss": "background: url('icons/ladybug.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/sunriseSunset.html"
    },
    {
      "name": "Terrain Generator",
      "id": "Terrain Generator",
      "library": "Ladybug",
      "category": "7 | WIP",
      "summary": "This component uses Google Maps API to achieve elevation data and satellite images of the terrain generated",
      "description": "This component uses Google Maps API to achieve elevation data and satellite images of the terrain generated.<br>This component requires an internet connection and it runs for free up to 2,500 requests per day. Once you go over this limit the component doesn't work.<br>Note that each surface is a request, for example if you use a surface made by sub-surfaces 6x6, this will be 36 requests.<br>For informations about the rules of use of Google Maps API, take a look at this link:<br>https://developers.google.com/maps/pricing-and-plans/#details<br>Special thanks goes to Google Maps and the authors of gHowl.<br>",
      "iconCss": "background: url('icons/ladybug.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/ladybug/terrainGenerator.html"
    },
    {
      "name": "Deconstruct Plant",
      "id": "Deconstruct Plant",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a plant into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlant.html"
    },
    {
      "name": "Deconstruct Plant Format Options",
      "id": "Deconstruct Plant Format Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a plant format options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlantFormatOptions.html"
    },
    {
      "name": "Deconstruct Plant Options",
      "id": "Deconstruct Plant Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a plant options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlantOptions.html"
    },
    {
      "name": "Deconstruct Plant Render Options",
      "id": "Deconstruct Plant Render Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a plant render options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlantRenderOptions.html"
    },
    {
      "name": "Deconstruct Specie Characteristics",
      "id": "Deconstruct Specie Characteristics",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a specie characteristics into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructSpecieCharacteristics.html"
    },
    {
      "name": "Deconstruct Specie Soil",
      "id": "Deconstruct Specie Soil",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a specie soil into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructSpecieSoil.html"
    },
    {
      "name": "Deconstruct Species",
      "id": "Deconstruct Species",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Deconstruct a species into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructSpecies.html"
    },
    {
      "name": "Plant",
      "id": "Plant",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Create a plant from point.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plant.html"
    },
    {
      "name": "Plant Format Options",
      "id": "Plant Format Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Create plant format options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plantFormatOptions.html"
    },
    {
      "name": "Plant Options",
      "id": "Plant Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Create plant options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plantOptions.html"
    },
    {
      "name": "Plant Render Options",
      "id": "Plant Render Options",
      "library": "Lands Design",
      "category": "01.Plant",
      "summary": "Create plant render options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plantRenderOptions.html"
    },
    {
      "name": "Deconstruct Plant Row",
      "id": "Deconstruct Plant Row",
      "library": "Lands Design",
      "category": "02.Plant Row",
      "summary": "Deconstruct a plant row into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlantRow.html"
    },
    {
      "name": "Deconstruct Plant Row Options",
      "id": "Deconstruct Plant Row Options",
      "library": "Lands Design",
      "category": "02.Plant Row",
      "summary": "Deconstruct a plant row options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPlantRowOptions.html"
    },
    {
      "name": "Plant Row",
      "id": "Plant Row",
      "library": "Lands Design",
      "category": "02.Plant Row",
      "summary": "Create a plant row from curve.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plantRow.html"
    },
    {
      "name": "Plant Row Options",
      "id": "Plant Row Options",
      "library": "Lands Design",
      "category": "02.Plant Row",
      "summary": "Create plant row options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/plantRowOptions.html"
    },
    {
      "name": "Deconstruct Forest",
      "id": "Deconstruct Forest",
      "library": "Lands Design",
      "category": "03.Forest",
      "summary": "Deconstruct a forest into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructForest.html"
    },
    {
      "name": "Deconstruct Forest Options",
      "id": "Deconstruct Forest Options",
      "library": "Lands Design",
      "category": "03.Forest",
      "summary": "Deconstruct a forest options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructForestOptions.html"
    },
    {
      "name": "Forest",
      "id": "Forest",
      "library": "Lands Design",
      "category": "03.Forest",
      "summary": "Create a forest from curve.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/forest.html"
    },
    {
      "name": "Forest Options",
      "id": "Forest Options",
      "library": "Lands Design",
      "category": "03.Forest",
      "summary": "Create forest options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/forestOptions.html"
    },
    {
      "name": "Deconstruct Shrub",
      "id": "Deconstruct Shrub",
      "library": "Lands Design",
      "category": "04.Shrub",
      "summary": "Deconstruct a shrub into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructShrub.html"
    },
    {
      "name": "Deconstruct Shrub Options",
      "id": "Deconstruct Shrub Options",
      "library": "Lands Design",
      "category": "04.Shrub",
      "summary": "Deconstruct a shrub options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructShrubOptions.html"
    },
    {
      "name": "Shrub",
      "id": "Shrub",
      "library": "Lands Design",
      "category": "04.Shrub",
      "summary": "Create a shrub from curve.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/landsdesign/shrub.html"
    },
    {
      "name": "Shrub Options",
      "id": "Shrub Options",
      "library": "Lands Design",
      "category": "04.Shrub",
      "summary": "Create shrub options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/shrubOptions.html"
    },
    {
      "name": "Deconstruct Groundcover",
      "id": "Deconstruct Groundcover",
      "library": "Lands Design",
      "category": "05.Groundcover",
      "summary": "Deconstruct a groundcover into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructGroundcover.html"
    },
    {
      "name": "Deconstruct Groundcover Options",
      "id": "Deconstruct Groundcover Options",
      "library": "Lands Design",
      "category": "05.Groundcover",
      "summary": "Deconstruct a groundcover options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructGroundcoverOptions.html"
    },
    {
      "name": "Groundcover",
      "id": "Groundcover",
      "library": "Lands Design",
      "category": "05.Groundcover",
      "summary": "Create a groundcover from curve.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/groundcover.html"
    },
    {
      "name": "Groundcover Options",
      "id": "Groundcover Options",
      "library": "Lands Design",
      "category": "05.Groundcover",
      "summary": "Create groundcover options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/groundcoverOptions.html"
    },
    {
      "name": "Deconstruct Path",
      "id": "Deconstruct Path",
      "library": "Lands Design",
      "category": "06.Path",
      "summary": "Deconstruct a path into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPath.html"
    },
    {
      "name": "Deconstruct Path Options",
      "id": "Deconstruct Path Options",
      "library": "Lands Design",
      "category": "06.Path",
      "summary": "Deconstruct a path options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructPathOptions.html"
    },
    {
      "name": "Path",
      "id": "Path",
      "library": "Lands Design",
      "category": "06.Path",
      "summary": "Create a path from curves.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/landsdesign/path.html"
    },
    {
      "name": "Path Options",
      "id": "Path Options",
      "library": "Lands Design",
      "category": "06.Path",
      "summary": "Create Path options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/landsdesign/pathOptions.html"
    },
    {
      "name": "Deconstruct Terrain",
      "id": "Deconstruct Terrain",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Deconstruct a terrain into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructTerrain.html"
    },
    {
      "name": "Deconstruct Terrain Options",
      "id": "Deconstruct Terrain Options",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Deconstruct a terrain options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructTerrainOptions.html"
    },
    {
      "name": "Terrain",
      "id": "Terrain",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Create a terrain from curves or points.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrain.html"
    },
    {
      "name": "Terrain Boundary",
      "id": "Terrain Boundary",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Set a terrain boundary.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainBoundary.html"
    },
    {
      "name": "Terrain Cut and Fill",
      "id": "Terrain Cut and Fill",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Add clearings to terrain.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainCutAndFill.html"
    },
    {
      "name": "Terrain Divide",
      "id": "Terrain Divide",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Create subdivisions in terrain.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainDivide.html"
    },
    {
      "name": "Terrain Earth Moving",
      "id": "Terrain Earth Moving",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Calculates the amount of earth.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainEarthMoving.html"
    },
    {
      "name": "Terrain Explode",
      "id": "Terrain Explode",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Extract the terrain contour lines and meshes.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainExplode.html"
    },
    {
      "name": "Terrain Options",
      "id": "Terrain Options",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Create terrain options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainOptions.html"
    },
    {
      "name": "Terrain Path",
      "id": "Terrain Path",
      "library": "Lands Design",
      "category": "07.Terrain",
      "summary": "Add paths to terrain.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/landsdesign/terrainPath.html"
    },
    {
      "name": "Deconstruct Sprinkler",
      "id": "Deconstruct Sprinkler",
      "library": "Lands Design",
      "category": "08.Sprinkler",
      "summary": "Deconstruct a sprinkler into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructSprinkler.html"
    },
    {
      "name": "Deconstruct Sprinkler Options",
      "id": "Deconstruct Sprinkler Options",
      "library": "Lands Design",
      "category": "08.Sprinkler",
      "summary": "Deconstruct a sprinkler options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/deconstructSprinklerOptions.html"
    },
    {
      "name": "Sprinkler",
      "id": "Sprinkler",
      "library": "Lands Design",
      "category": "08.Sprinkler",
      "summary": "Create a sprinkler from position.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/sprinkler.html"
    },
    {
      "name": "Sprinkler Options",
      "id": "Sprinkler Options",
      "library": "Lands Design",
      "category": "08.Sprinkler",
      "summary": "Create sprinkler options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/landsDesign.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/landsdesign/sprinklerOptions.html"
    },
    {
      "name": "Convert JSON to XML",
      "id": "JSON-XML",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Converts a JSON string to XML.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/convertJSONToXML.html"
    },
    {
      "name": "Convert XML to JSON",
      "id": "XML-JSON",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Converts a XML string to JSON",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/convertXMLToJSON.html"
    },
    {
      "name": "Create Chart",
      "id": "Chart",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Creates a saveable Winform chart.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createChart.html"
    },
    {
      "name": "Create CSV",
      "id": "CSV",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Create a CSV string",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createCSV.html"
    },
    {
      "name": "Create Data Grid",
      "id": "DataGrid",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Creates a Data Grid view of data.  Data can be saved as CSV file.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createDataGrid.html"
    },
    {
      "name": "Create DataSet",
      "id": "DataSet",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Create a DataSet",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createDataSet.html"
    },
    {
      "name": "Create DataTable",
      "id": "DataTable",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Create a DataTable",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createDataTable.html"
    },
    {
      "name": "Create JSON",
      "id": "JSON",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Create JSON from a DataSet",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createJSON.html"
    },
    {
      "name": "Create XML",
      "id": "XML",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Create XML from a DataSet",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createXML.html"
    },
    {
      "name": "Read CSV",
      "id": "CSV",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Read a CSV string. (Comma Separated Value)",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/readCSV.html"
    },
    {
      "name": "Read XML by Tag",
      "id": "XML",
      "library": "LunchBox",
      "category": "Data",
      "summary": "Read XML data by tag.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/lunchbox/readXMLByTag.html"
    },
    {
      "name": "Constant Quad Subdivide",
      "id": "ConstQuad",
      "library": "LunchBox",
      "category": "Generate",
      "summary": "Subdivides a triangular panel into quadrangular cells",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/constantQuadSubdivide.html"
    },
    {
      "name": "Panel Frame",
      "id": "Frame",
      "library": "LunchBox",
      "category": "Generate",
      "summary": "Creates an offset frame using a panel.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/panelFrame.html"
    },
    {
      "name": "Subdivide Quad",
      "id": "QuadSub",
      "library": "LunchBox",
      "category": "Generate",
      "summary": "Subdivides a quad into self-similar cells.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/subdivideQuad.html"
    },
    {
      "name": "Subdivide Triangle",
      "id": "TriSub",
      "library": "LunchBox",
      "category": "Generate",
      "summary": "Subdivides a triangle into self-similar cells.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/subdivideTriangle.html"
    },
    {
      "name": "Gaussian Mixture",
      "id": "GaussianMix",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Gaussian Mixture models.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/gaussianMixture.html"
    },
    {
      "name": "Hidden Markov Model",
      "id": "HiddenMark",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Hidden Markov Model problems.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/hiddenMarkovModel.html"
    },
    {
      "name": "K-Means Clustering",
      "id": "K-Means",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for K-Means Clustering.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/kMeansClustering.html"
    },
    {
      "name": "Linear Regression",
      "id": "LineReg",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for linear regression problems.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/linearRegression.html"
    },
    {
      "name": "Logistic Regression",
      "id": "LogReg",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Logistic regression problems.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/logisticRegression.html"
    },
    {
      "name": "Multivariate Linear Regression",
      "id": "MultiLineReg",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for multivariate linear regression problems.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/multivariateLinearRegression.html"
    },
    {
      "name": "Naive Bayes Classification",
      "id": "NaiveBayes",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Naive Bayes classification.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/naiveBayesClassification.html"
    },
    {
      "name": "Neural Network",
      "id": "Neural",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Neural Network problems.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/neuralNetwork.html"
    },
    {
      "name": "Nonlinear Regression",
      "id": "NonlineReg",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for nonlinear regression problems using Sequential Minimal Optimization.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/lunchbox/nonlinearRegression.html"
    },
    {
      "name": "Restricted Boltzmann Machine",
      "id": "ResBoltz",
      "library": "LunchBox",
      "category": "Machine Learning",
      "summary": "Solver for Restricted Boltzmann machines.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/restrictedBoltzmannMachine.html"
    },
    {
      "name": "Diamond Grid",
      "id": "DGrid",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates a diamond corner point grid on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/diamondGrid.html"
    },
    {
      "name": "Diamond Panels",
      "id": "Diamond",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates diamond panels on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/diamondPanels.html"
    },
    {
      "name": "Hexagon Cells",
      "id": "Hex",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates hexagonal cells on surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/hexagonCells.html"
    },
    {
      "name": "Quad Grid",
      "id": "QGrid",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates a quad corner point grid on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/quadGrid.html"
    },
    {
      "name": "Quad Panels",
      "id": "Quads",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates quadrangular panels on a surface",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/lunchbox/quadPanels.html"
    },
    {
      "name": "Random Quad Panels",
      "id": "QuadRand",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates randomly staggered quad panels on a surface",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/randomQuadPanels.html"
    },
    {
      "name": "Skewed Quads",
      "id": "SQuads",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates 'skewed' quadrangular panels on a surface",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/skewedQuads.html"
    },
    {
      "name": "Staggered Quad Panels",
      "id": "QuadStag",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates staggered quad panels on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/staggeredQuadPanels.html"
    },
    {
      "name": "Triangle Panels B",
      "id": "TriB",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates triangular panels on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/trianglePanelsB.html"
    },
    {
      "name": "Triangle Panels C",
      "id": "TriC",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates triangular panels on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/trianglePanelsC.html"
    },
    {
      "name": "Triangular Panels A",
      "id": "TriA",
      "library": "LunchBox",
      "category": "Panels",
      "summary": "Creates triangular panels on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/triangularPanelsA.html"
    },
    {
      "name": "2D Truss",
      "id": "Truss",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a 2-D Truss using a set of edge curves.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/2DTruss.html"
    },
    {
      "name": "Braced Grid 1-D Structure",
      "id": "GridBraced1D",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a 1-Direction braced grid structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/bracedGrid1DStructure.html"
    },
    {
      "name": "Braced Grid 2-D Structure",
      "id": "GridBraced2D",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a 2-Direction braced grid structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/bracedGrid2DStructure.html"
    },
    {
      "name": "Diagrid Structure",
      "id": "Diagrid",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a diagrid structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/diagridStructure.html"
    },
    {
      "name": "Grid Structure",
      "id": "Grid",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a simple grid structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/lunchbox/gridStructure.html"
    },
    {
      "name": "Hexagonal Structure",
      "id": "Hex",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a hexagonal structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/hexagonalStructure.html"
    },
    {
      "name": "Space Truss Structure 1",
      "id": "SpaceTruss 1",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a space truss structure on a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/spaceTrussStructure1.html"
    },
    {
      "name": "Space Truss Structure 2",
      "id": "SpaceTruss 2",
      "library": "LunchBox",
      "category": "Structure",
      "summary": "Creates a space truss structure using two driver surfaces",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/spaceTrussStructure2.html"
    },
    {
      "name": "Arc Divide",
      "id": "ArcDivide",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Divides a spline curve into tangent arc segments.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/arcDivide.html"
    },
    {
      "name": "Create RTree",
      "id": "RTree",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Creates a searchable RTree",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createRTree.html"
    },
    {
      "name": "Deconstruct Wireframe",
      "id": "DeWire",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Organizes a wireframe curve structure into nodes and centerlines",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/deconstructWireframe.html"
    },
    {
      "name": "Flatness Check",
      "id": "Flat",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Checks the flatness of a quad panel.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/flatnessCheck.html"
    },
    {
      "name": "Mesh Edges (with Tolerance)",
      "id": "MshEdge",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Finds naked mesh edges and edges between faces greater than a specified angle.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/meshEdgeswithTolerance.html"
    },
    {
      "name": "Mesh Reduce",
      "id": "MshReduce",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Reduce mesh polygons to simplify.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/meshReduce.html"
    },
    {
      "name": "Patch Surface",
      "id": "Patch",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Returns a patch surface using a list of edge curves. (Rhino 5 only)",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/lunchbox/patchSurface.html"
    },
    {
      "name": "Random Split List",
      "id": "RandomSplit",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Randomly splits a list into two lists.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/randomSplitList.html"
    },
    {
      "name": "Rebuild Surface",
      "id": "RebuildSrf",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Rebuilds an untrimmed surface using U and V parameters.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/rebuildSurface.html"
    },
    {
      "name": "Relative Coordinates",
      "id": "Relative",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Returns coordinates of a point relative to a plane.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/relativeCoordinates.html"
    },
    {
      "name": "Reverse Surface Direction",
      "id": "RevSrf",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Reverse the UV directions of a surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/reverseSurfaceDirection.html"
    },
    {
      "name": "RTree Closest Point",
      "id": "RTree CP",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Find the closest point in an RTree from search points",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/rTreeClosestPoint.html"
    },
    {
      "name": "RTree Points in Range",
      "id": "RTree Range",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Find points in an RTree within range of search points",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/lunchbox/rTreePointsInRange.html"
    },
    {
      "name": "Sort Duplicate Breps",
      "id": "Sort Brep",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Sort a list of Breps based on duplicates.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/sortDuplicateBreps.html"
    },
    {
      "name": "Sort Duplicate Curves",
      "id": "Sort Crv",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Sort a list of curves based on duplicates using document tolerances.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/sortDuplicateCurves.html"
    },
    {
      "name": "Sort Duplicate Points",
      "id": "Sort Pts",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Sort a list of points based on duplicates.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/sortDuplicatePoints.html"
    },
    {
      "name": "Sort Duplicate Values",
      "id": "Sort Val",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Sort a list of numbers or strings based on duplicates.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/sortDuplicateValues.html"
    },
    {
      "name": "Unroll Brep",
      "id": "Unroll",
      "library": "LunchBox",
      "category": "Util",
      "summary": "Unroll a brep or surface.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/unrollBrep.html"
    },
    {
      "name": "Create Layers",
      "id": "Layer",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Create a list of layers in Rhino.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/createLayers.html"
    },
    {
      "name": "Excel Reader",
      "id": "ExcelRead",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Reads an open Excel file.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/excelReader.html"
    },
    {
      "name": "Excel Write",
      "id": "ExcelWrite",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Write to an open Excel file.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/excelWrite.html"
    },
    {
      "name": "Launch Application",
      "id": "LaunchApp",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Launch an external application or file",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/launchApplication.html"
    },
    {
      "name": "Layer Information",
      "id": "Layer Info",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Get layer information from the current document.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/layerInformation.html"
    },
    {
      "name": "Layer Reference",
      "id": "Layer Ref",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Reference geometry on layers with GUIDs and Names.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/layerReference.html"
    },
    {
      "name": "Object Bake",
      "id": "Bake",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Bake objects to a layer in the active Rhino document.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/lunchbox/objectBake.html"
    },
    {
      "name": "Object Save",
      "id": "Save",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Saves geometry to a specified file location.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/objectSave.html"
    },
    {
      "name": "Rhino Command",
      "id": "RhCOM",
      "library": "LunchBox",
      "category": "Workflow",
      "summary": "Sends a command to the Rhino command-line.",
      "description": null,
      "iconCss": "background: url('icons/lunchBox.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/lunchbox/rhinoCommand.html"
    },
    {
      "name": "Mesh Add Attributes",
      "id": "AddAttr2Mesh",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Add Attributes to a Mesh",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshAddAttributes.html"
    },
    {
      "name": "Mesh Area",
      "id": "Area",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Solve mesh Area properties",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshArea.html"
    },
    {
      "name": "Mesh Convert Quads",
      "id": "ConvQuads",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Convert non planar quads to triangles",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshConvertQuads.html"
    },
    {
      "name": "Mesh Explode",
      "id": "Explode",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Decompose a mesh into its faces",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshExplode.html"
    },
    {
      "name": "Mesh Extract Attributes",
      "id": "ExtractAttr",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Extract attributes from a Mesh",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshExtractAttributes.html"
    },
    {
      "name": "Mesh Naked Edge",
      "id": "NakedEdge",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Find naked edges",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshNakedEdge.html"
    },
    {
      "name": "Mesh Triangulate",
      "id": "Triangulate",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Convert quads to triangles",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshTriangulate.html"
    },
    {
      "name": "Mesh Volume",
      "id": "Volume",
      "library": "MeshEdit",
      "category": "Analysis",
      "summary": "Solve mesh Volume properties",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshVolume.html"
    },
    {
      "name": "3D Convex Hull",
      "id": "ConvexHull",
      "library": "MeshEdit",
      "category": "Triangulation",
      "summary": "Computes the Convex Hull surface based on MIConvexHull by David Sehnal, Matthew Campbell",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/3DConvexHull.html"
    },
    {
      "name": "3D Delaunay",
      "id": "Del3D",
      "library": "MeshEdit",
      "category": "Triangulation",
      "summary": "Computes the 3D delaunay of a pointcloud based based on MIConvexHull by David Sehnal, Matthew Campbell",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/3DDelaunay.html"
    },
    {
      "name": "3D Delaunay Cell",
      "id": "Del3DCell",
      "library": "MeshEdit",
      "category": "Triangulation",
      "summary": "Computes the 3D delaunay Tetrahedron of a pointcloud based on MIConvexHull by David Sehnal, Matthew Campbell",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/3DDelaunayCell.html"
    },
    {
      "name": "3D Voronoi",
      "id": "3DVoro",
      "library": "MeshEdit",
      "category": "Triangulation",
      "summary": "Computes the 3D voronoi cells of a pointcloud based on MIConvexHull by David Sehnal, Matthew Campbell",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/3DVoronoi.html"
    },
    {
      "name": "Convex Hull Points",
      "id": "HullPt",
      "library": "MeshEdit",
      "category": "Triangulation",
      "summary": "Computes the Convex Hull points for 2D or 3D  based on MIConvexHull by David Sehnal, Matthew Campbell",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/convexHullPoints.html"
    },
    {
      "name": "Mesh Cull Unused Vertices",
      "id": "cullVertices",
      "library": "MeshEdit",
      "category": "Util",
      "summary": "Cull (remove) all vertices that are currently not used by the Face list",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshCullUnusedVertices.html"
    },
    {
      "name": "Mesh Flip",
      "id": "Flip",
      "library": "MeshEdit",
      "category": "Util",
      "summary": "Reverse the direction of the mesh",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshFlip.html"
    },
    {
      "name": "Mesh From Points",
      "id": "FromPoints",
      "library": "MeshEdit",
      "category": "Util",
      "summary": "Create a mesh from a grid of points.",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshFromPoints.html"
    },
    {
      "name": "Mesh Unify Normals",
      "id": "UnifyNormals",
      "library": "MeshEdit",
      "category": "Util",
      "summary": "Attempts to fix inconsistencies in the directions of meshfaces for a mesh",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshUnifyNormals.html"
    },
    {
      "name": "Mesh Weld Vertices",
      "id": "weldVertices",
      "library": "MeshEdit",
      "category": "Util",
      "summary": "Merge identical or vertices in threshold range",
      "description": null,
      "iconCss": "background: url('icons/meshEdit.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/meshedit/meshWeldVertices.html"
    },
    {
      "name": "Connected Edge Angles",
      "id": "m+V-E Ang",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each vertex normal of a mesh tested against the vector along each connected edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/connectedEdgeAngles.html"
    },
    {
      "name": "Connected Edge Lengths",
      "id": "m+VEL",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the cumulative length of each edge connected to a given vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/connectedEdgeLengths.html"
    },
    {
      "name": "Connected Faces",
      "id": "m+ConFace",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the number of faces connected to each face.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/connectedFaces.html"
    },
    {
      "name": "Connected Vertex Normal Angle",
      "id": "m+V-V Ang",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each vertex normal of a mesh tested against the connected vertex normals.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/connectedVertexNormalAngle.html"
    },
    {
      "name": "Edge Lengths",
      "id": "m+EdgeLen",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the length for each edge of the mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/edgeLengths.html"
    },
    {
      "name": "Edge Shared Face Angles",
      "id": "m+EdgeAng",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle of the faces connected to each edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/edgeSharedFaceAngles.html"
    },
    {
      "name": "Extract Edges",
      "id": "m+Edges",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the edge lines and topology vertices in the topology order of the mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/extractEdges.html"
    },
    {
      "name": "Face Edge Lengths",
      "id": "m+FEL",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the cumulative edge length of each face of a mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceEdgeLengths.html"
    },
    {
      "name": "Face Normal Direction",
      "id": "m+FaceDir",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each face normal of a mesh tested against a vector.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceNormalDirection.html"
    },
    {
      "name": "Face to Face Angles",
      "id": "m+F-F Ang",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each face normal of a mesh tested against its connected face normals.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceToFaceAngles.html"
    },
    {
      "name": "Face Vertex Angles",
      "id": "m+F-V Ang",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each face normal of a mesh tested the normals at it's vertices.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceVertexAngles.html"
    },
    {
      "name": "Mesh Face Area",
      "id": "m+FaceArea",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the area of each face of a mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshFaceArea.html"
    },
    {
      "name": "Topology Vertices",
      "id": "m+Vert",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the mesh vertices per earch topology vertex of the mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/topologyVertices.html"
    },
    {
      "name": "Unitize Mesh Distances",
      "id": "m+Unit",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns a unitized value for each specifed component of a mesh, vertex, face center, or edge midpoint based on its distance to the closest sample index point relative to the furthest point from all sample points",
      "description": "Returns a unitized value for each specifed component of a mesh, vertex, face center, or edge midpoint based on its distance to the closest sample index point relative to the furthest point from all sample points. This value is remapped to a user specified domain.",
      "iconCss": "background: url('icons/meshPlus.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/unitizeMeshDistances.html"
    },
    {
      "name": "Valence",
      "id": "m+Valence",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the valence or number of connected vertices to a given vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/valence.html"
    },
    {
      "name": "Vertex Face Angles",
      "id": "m+V-F Ang",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each vertex normal of a mesh tested against the connected vertex normals.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/vertexFaceAngles.html"
    },
    {
      "name": "Vertex Normal Direction",
      "id": "m+VecDir",
      "library": "MeshPlus",
      "category": "Analyze",
      "summary": "Returns the angle at each vertex normal of a mesh tested against a vector.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/vertexNormalDirection.html"
    },
    {
      "name": "Explode Unwelded",
      "id": "m+ExpUnweld",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Implements Explode Unwelded. <br>\"Explode the mesh into submeshes where a submesh is a collection of faces that are contained within a closed loop of \"unwelded\" edges.\"",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/explodeUnwelded.html"
    },
    {
      "name": "Mesh Caps",
      "id": "m+Caps",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Caps all naked edges in a mesh by introducing a new point at the averaged volumetric center fanning about it.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshCaps.html"
    },
    {
      "name": "Mesh Explode",
      "id": "m+Explode",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Explodes each face of a mesh into a new single faced mesh which maintains vertex colors and whose normals can either be rebuilt or retain the existing vertex normals.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshExplode.html"
    },
    {
      "name": "Mesh Extend",
      "id": "m+Extend",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Extends all naked edges of a mesh by a given distance by adding a new row of mesh faces",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshExtend.html"
    },
    {
      "name": "Mesh Offset & Extrude",
      "id": "m+Offset/Extrude",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Takes a mesh and offsets along each vertex normal or aligned with input vectors with independent options for closing the top, bottom and edges as well as offseting in both directions.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshOffsetExtrude.html"
    },
    {
      "name": "Offset Edges",
      "id": "m+Edges",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Takes edge of a mesh and offsets it along the vertex normal or extrudes along a input vector. Output can be toggled between a single mesh or individual meshes per face.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/offsetEdges.html"
    },
    {
      "name": "Span & Bridge",
      "id": "m+Span & Bridge",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Removes multiple pairs of mesh faces at given indices from either one or two meshes and bridges the resulting naked edges",
      "description": "Removes multiple pairs of mesh faces at given indices from either one or two meshes and bridges the resulting naked edges. An optional sorting boolean attempts to organize the vertexes to avoid torsion in the bridging",
      "iconCss": "background: url('icons/meshPlus.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/spanBridge.html"
    },
    {
      "name": "Unweld & Explode",
      "id": "m+UWX",
      "library": "MeshPlus",
      "category": "Edit",
      "summary": "Unwelds a mesh at the user specified angle and explodes it into new meshes at unwelded edges.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/unweldExplode.html"
    },
    {
      "name": "Antisnub",
      "id": "m+Antisnub",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced face effect by creating the antiprism extrusion from each face and snubbing the top corner vertex of each new face on each face of the original mesh outwards along the direction of the face normal",
      "description": "Creates an advanced face effect by creating the antiprism extrusion from each face and snubbing the top corner vertex of each new face on each face of the original mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/antisnub.html"
    },
    {
      "name": "Hair",
      "id": "m+Hair",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced hair effect from a tapered extrusion which can rotate within a pore relief on each face of the mesh outwards along the direction of the face normal",
      "description": "Creates an advanced hair effect from a tapered extrusion which can rotate within a pore relief on each face of the mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/hair.html"
    },
    {
      "name": "Node",
      "id": "m+Node",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced face effect stellating the face and creating an optional directional pore from each new face on each face of the original mesh outwards along the direction of the face normal",
      "description": "Creates an advanced face effect stellating the face and creating an optional directional pore from each new face on each face of the original mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/node.html"
    },
    {
      "name": "Peel",
      "id": "m+Peel",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced peeling effect rotating subdivided faes outwards about each edge of each face of the mesh outwards along the direction of the face normal",
      "description": "Creates an advanced peeling effect rotating subdivided faes outwards about each edge of each face of the mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/peel.html"
    },
    {
      "name": "Pinch",
      "id": "m+Pinch",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced pinching moving points at the vertex and edge centers independently towards the center of each face of the mesh outwards along the direction of the face normal",
      "description": "Creates an advanced pinching moving points at the vertex and edge centers independently towards the center of each face of the mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/pinch.html"
    },
    {
      "name": "Polyp",
      "id": "m+Polyp",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates an advanced polyp effect from the edge of each face of the mesh outwards along the direction of the face normal",
      "description": "Creates an advanced polyp effect from the edge of each face of the mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/polyp.html"
    },
    {
      "name": "Pore",
      "id": "m+Pore",
      "library": "MeshPlus",
      "category": "Effects",
      "summary": "Creates a pore effect with a flat edge and raised facet on each face of the mesh outwards along the direction of the face normal",
      "description": "Creates a pore effect with a flat edge and raised facet on each face of the mesh outwards along the direction of the face normal. All (c,s,d,t) values corespond to the input meshes face sequence and can recieve either a single value are a corresponding list of values.",
      "iconCss": "background: url('icons/meshPlus.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/pore.html"
    },
    {
      "name": "Branch",
      "id": "m+Branch",
      "library": "MeshPlus",
      "category": "Loop",
      "summary": "Recursively branches each mesh face which is parallel to the original mesh faces into a set of new subdivided quad extrusions.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/branch.html"
    },
    {
      "name": "Crumple",
      "id": "m+Crumple",
      "library": "MeshPlus",
      "category": "Loop",
      "summary": "Recursively stellates each mesh face into a new mesh offset along the face normal.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/crumple.html"
    },
    {
      "name": "Crystalize",
      "id": "m+Crystalize",
      "library": "MeshPlus",
      "category": "Loop",
      "summary": "Recursively decomposes each mesh face into a new truncated open mesh pyramid offset along the face normal",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/crystalize.html"
    },
    {
      "name": "Expand",
      "id": "m+Expand",
      "library": "MeshPlus",
      "category": "Loop",
      "summary": "Recursively decomposes each mesh face into a new mesh offset along the face normal connected only by the corner vertices.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/expand.html"
    },
    {
      "name": "Facet",
      "id": "m+Facet",
      "library": "MeshPlus",
      "category": "Loop",
      "summary": "Recursively stellates a new face made from the midpoints of the edge lines.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/facet.html"
    },
    {
      "name": "Cairo Tiling",
      "id": "m+Cairo",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on the Cairo Tiling tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/cairoTiling.html"
    },
    {
      "name": "Diamond Tiling",
      "id": "m+Diamond",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on Diamond Tiling tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/diamondTiling.html"
    },
    {
      "name": "Elongated Triangle Tiling",
      "id": "m+ElongTri",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on the Elongated Triangle tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/elongatedTriangleTiling.html"
    },
    {
      "name": "Fill Mesh Holes",
      "id": "m+Fill",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Creates a simple fan mesh from an input curve with options for introducing vertex colors",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/fillMeshHoles.html"
    },
    {
      "name": "Mesh Loft",
      "id": "m+Loft",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Creates a mesh from the control points of input curves with multiple methods for defining topology",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshLoft.html"
    },
    {
      "name": "ngon Mesh",
      "id": "m+ngon Mesh",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "This experimental component creates a topology map for mesh comprised of faces of with a vertex count of 3 or higher",
      "description": "This experimental component creates a topology map for mesh comprised of faces of with a vertex count of 3 or higher. This component takes a list of polylines with coincident control points and merges these points into a mesh, creating unified vertices, edge, faces, and normals as well as a map of the topological relationships between the elements.",
      "iconCss": "background: url('icons/meshPlus.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/ngonMesh.html"
    },
    {
      "name": "Patterned Triangulation",
      "id": "m+TriPat",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a boolean pattern based Triangular Mesh to a surface covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/patternedTriangulation.html"
    },
    {
      "name": "Regular Triangulation",
      "id": "m+RegTriGrid",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Regular Triangular Mesh to a surface covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/regularTriangulation.html"
    },
    {
      "name": "Rhombitrihexagonal Tiling",
      "id": "m+Rhombitrihexagonal",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on the Rhombitrihexagonal tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows",
      "description": "Applies a Mesh to a surface based on the Rhombitrihexagonal tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows. All non quad faces are triangulated at output.",
      "iconCss": "background: url('icons/meshPlus.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/rhombitrihexagonalTiling.html"
    },
    {
      "name": "Snub Square Tiling",
      "id": "m+SnubSqr",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on the Snubbed Square tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/snubSquareTiling.html"
    },
    {
      "name": "Truncated Square Tiling",
      "id": "m+TruncatedSqr",
      "library": "MeshPlus",
      "category": "Make",
      "summary": "Applies a Mesh to a surface based on the Truncated Square tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows",
      "description": "Applies a Mesh to a surface based on the Truncated Square tesselation covering its domain, recognizing closure in both the U and V directions when the patterning allows. All non quad faces are triangulated at output.",
      "iconCss": "background: url('icons/meshPlus.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/truncatedSquareTiling.html"
    },
    {
      "name": "Baycentric Mesh Morph",
      "id": "m+Map Mesh to Mesh",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph meshes from reference boundaries to each face of a target mesh, or pair of meshes with identical topologies.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/baycentricMeshMorph.html"
    },
    {
      "name": "Map Curve to Curve",
      "id": "m+Map Crv to Crv",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph curves from a reference boundary polyline to a target polyline of the same topology.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapCurveToCurve.html"
    },
    {
      "name": "Map Curves to Mesh",
      "id": "m+Map Crv to Mesh",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph curves from reference boundaries to each face of a target mesh, or pair of meshes with identical topologies.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapCurvesToMesh.html"
    },
    {
      "name": "Map Edge Values",
      "id": "m+Map Edge",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Maps and averages unitized values cooresponding to each edge of a mesh to its other constituent elements.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapEdgeValues.html"
    },
    {
      "name": "Map Face Values",
      "id": "m+Map Face",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Maps and averages unitized values cooresponding to each face of a mesh to its other constituent elements.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapFaceValues.html"
    },
    {
      "name": "Map Mesh to Curves",
      "id": "m+Map Mesh to Crv",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph meshes from a reference boundary polyline to a target polyline of the same topology.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapMeshToCurves.html"
    },
    {
      "name": "Map Points to Curve",
      "id": "m+Map Pt to Crv",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph points from a reference boundary polyline to a target polyline of the same topology.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapPointsToCurve.html"
    },
    {
      "name": "Map Points to Mesh",
      "id": "m+Map Pt to Mesh",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Uses Barycentric Mapping to morph points from reference boundaries to each face of a target mesh, or pair of meshes with identical topologies.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapPointsToMesh.html"
    },
    {
      "name": "Map Vertex Values",
      "id": "m+Map Vert",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Maps and averages unitized values cooresponding to each vertex of a mesh to its other constituent elements.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/mapVertexValues.html"
    },
    {
      "name": "Mesh Twisted Box",
      "id": "m+Twisted Box",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Creates twisted boxes which either span or project off of quad mesh faces creating 8 points which can be used to define a twisted box",
      "description": "Creates twisted boxes which either span or project off of quad mesh faces creating 8 points which can be used to define a twisted box. This allows for box morphing to be mapped to meshes, replacing the faces with morphed objects.",
      "iconCss": "background: url('icons/meshPlus.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/meshTwistedBox.html"
    },
    {
      "name": "Wrap Data",
      "id": "WrapData",
      "library": "MeshPlus",
      "category": "Map",
      "summary": "Converts a list of data into an integer indexed dictionary which is wrapped into a single object",
      "description": "Converts a list of data into an integer indexed dictionary which is wrapped into a single object.<br>The component was developed for mapping colors, numbers, and other data to ngon components to simplify the process of data matching.",
      "iconCss": "background: url('icons/meshPlus.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/wrapData.html"
    },
    {
      "name": "Align Mesh Vertices",
      "id": "m+AlignVert",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Collapses vertex positions based on their proximity and the sequence in which they are toplogically ordered.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/alignMeshVertices.html"
    },
    {
      "name": "Calculate Vertex Normals",
      "id": "m+VertNorm",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Rebuilds vertex normals with a full range of options.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/calculateVertexNormals.html"
    },
    {
      "name": "Compute Face Normals",
      "id": "m+FaceNorm",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Rebuilds the Face Normals for a mesh with a full range of options.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/computeFaceNormals.html"
    },
    {
      "name": "Mirror Face Orientation",
      "id": "m+MFO",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Mirrors selected face topology.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/mirrorFaceOrientation.html"
    },
    {
      "name": "Reverse Face Normal",
      "id": "m+RFN",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Reverses selected face normals",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/reverseFaceNormal.html"
    },
    {
      "name": "Shift Face Orientation",
      "id": "m+SFO",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Shifts selected face topology, similar to rotating the face.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/shiftFaceOrientation.html"
    },
    {
      "name": "Triangulate Mesh",
      "id": "m+Tri",
      "library": "MeshPlus",
      "category": "Modify",
      "summary": "Triangulates the quad faces of mesh based on natural direction, shortest/ longest length, or greatest or smallest area.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/triangulateMesh.html"
    },
    {
      "name": "Face Bands",
      "id": "m+Bands",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Indexes Mesh Faces based on their topological distance from naked edges or selected points.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceBands.html"
    },
    {
      "name": "Proximity Vertex Selection",
      "id": "m+ProxSel",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Selects vertices based on their closest point distance to sample geometries.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/proximityVertexSelection.html"
    },
    {
      "name": "Select by Topological Distance",
      "id": "m+TopoSel",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Returns a series of unitized values per vertex based on their topological edge's cumulative physical distance, divided by a user specified range for selection.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/selectByTopologicalDistance.html"
    },
    {
      "name": "Select by Vertex Angle",
      "id": "m+SelAng",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Selects vertices based on an angle tolerance, determined by testing the angle between all edges shared by a vertex about a face and sums the value.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/selectByVertexAngle.html"
    },
    {
      "name": "Select Mesh Edge",
      "id": "m+SelEdge",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Allows for the selection of Grasshopper or Rhino Mesh Edges. Returning the Indices, Mid Point, and Representational Line at each selection. <br>(",
      "description": "Allows for the selection of Grasshopper or Rhino Mesh Edges. Returning the Indices, Mid Point, and Representational Line at each selection. <br>(Note: Grasshopper geometry is made selectable by temporarily baking it to Rhino to acquire the topology information.)",
      "iconCss": "background: url('icons/meshPlus.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/selectMeshEdge.html"
    },
    {
      "name": "Select Mesh Faces",
      "id": "m+SelFace",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Allows for the selection of Grasshopper or Rhino Mesh Faces. Returning the Indices, Face Center, Face, and Face Normal at each selection. <br>(",
      "description": "Allows for the selection of Grasshopper or Rhino Mesh Faces. Returning the Indices, Face Center, Face, and Face Normal at each selection. <br>(Note: Grasshopper geometry is made selectable by temporarily baking it to Rhino to acquire the topology information.)",
      "iconCss": "background: url('icons/meshPlus.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/selectMeshFaces.html"
    },
    {
      "name": "Select Mesh Vertices",
      "id": "m+SelVert",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Allows for the selection of Grasshopper or Rhino Mesh Vertices. Returning the Indices, Point, and Normal at each selection. <br>(",
      "description": "Allows for the selection of Grasshopper or Rhino Mesh Vertices. Returning the Indices, Point, and Normal at each selection. <br>(Note: Grasshopper geometry is made selectable by temporarily baking it to Rhino to acquire the topology information.)",
      "iconCss": "background: url('icons/meshPlus.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/selectMeshVertices.html"
    },
    {
      "name": "Vertex Rings",
      "id": "m+Rings",
      "library": "MeshPlus",
      "category": "Select",
      "summary": "Indexes Vertices based on their topological distance from naked edges or selected points.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/vertexRings.html"
    },
    {
      "name": "Highlight",
      "id": "m+Highlight",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Applies a color to all naked edge or non naked vertex points in a mesh",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/highlight.html"
    },
    {
      "name": "Label Edge",
      "id": "m+Edges",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Creates point lists of points at each mesh edge at its midpoint",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/labelEdge.html"
    },
    {
      "name": "Label Face",
      "id": "m+Face",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Creates point lists of center points of each mesh face at its center",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/labelFace.html"
    },
    {
      "name": "Label Topo Vert",
      "id": "m+TopoVert",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Creates point lists of the meshes topology vertex points offset on the face to remove overlap",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/labelTopoVert.html"
    },
    {
      "name": "Label Vertex",
      "id": "m+Vertex",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Creates point lists of the meshes vertex points offset on the face to remove overlap",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/labelVertex.html"
    },
    {
      "name": "Label Vertex Indices",
      "id": "m+Index",
      "library": "MeshPlus",
      "category": "Show",
      "summary": "Creates point lists of vertex sequence of each face offset on the face to remove overlap",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/labelVertexIndices.html"
    },
    {
      "name": "Catmull Clark nGon Subdivision",
      "id": "m+CatmullClark",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Catmull Clark Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/catmullClarkNGonSubdivision.html"
    },
    {
      "name": "Doo Sabin Subdivision",
      "id": "m+Doo Sabin",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Doo Sabin Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/dooSabinSubdivision.html"
    },
    {
      "name": "Expansion Subdivision",
      "id": "m+Expansion",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Expansion Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh",
      "description": "Applies Expansion Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh. Expansion is similar to the Doo Sabin method, but creates its new vertices at a unitized position between the existing vertex and face center.",
      "iconCss": "background: url('icons/meshPlus.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/expansionSubdivision.html"
    },
    {
      "name": "Face Center Subdivision",
      "id": "m+FaceCenter",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Face Center Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/faceCenterSubdivision.html"
    },
    {
      "name": "Mid Edge Subdivision",
      "id": "m+MidEdge",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Mid Edge Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/midEdgeSubdivision.html"
    },
    {
      "name": "Modified Kobbelt Subdivision",
      "id": "m+ModKobbelt",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies a modified version of Kobbelt Subdivision which creates new quad faces from a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/modifiedKobbeltSubdivision.html"
    },
    {
      "name": "Root 3 Subdivision",
      "id": "m+Root3",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Applies Root 3 Subdivision to a list of closed polylines which are treated as the faces and vertices of a nGon mesh.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/meshplus/root3Subdivision.html"
    },
    {
      "name": "Weighted Butterfly Subdivision",
      "id": "m+Butterfly",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Implements the basic form of Butterfly subdivision which maintains the original meshes vertex locations. This method does requires a closed mesh volume with only triangular faces.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/weightedButterflySubdivision.html"
    },
    {
      "name": "Weighted Catmull Clark Subdivision",
      "id": "m+Catmull Clark",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Based off of the implementation of Weaverbird's subdivision, this implementation of Catmull Clark Subdivision introduced the option to modify the weight of smoothing or displacement from origin, of the face, edge, and vertex based vertices",
      "description": "Based off of the implementation of Weaverbird's subdivision, this implementation of Catmull Clark Subdivision introduced the option to modify the weight of smoothing or displacement from origin, of the face, edge, and vertex based vertices.",
      "iconCss": "background: url('icons/meshPlus.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/weightedCatmullClarkSubdivision.html"
    },
    {
      "name": "Weighted Loop Subdivision",
      "id": "m+Loop",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "Based off of the implementation of Weaverbird's subdivision, this implementation of Loop Subdivision introduced the option to modify the weight of smoothing or displacement from origin, of the edge and vertex based vertices",
      "description": "Based off of the implementation of Weaverbird's subdivision, this implementation of Loop Subdivision introduced the option to modify the weight of smoothing or displacement from origin, of the edge and vertex based vertices.",
      "iconCss": "background: url('icons/meshPlus.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/weightedLoopSubdivision.html"
    },
    {
      "name": "Weighted Root 3 Subdivision",
      "id": "m+Root 3",
      "library": "MeshPlus",
      "category": "Smooth",
      "summary": "An implementation of Root 3 Subdivision, this method follows the model established in weaverbird for resolving edge conditions",
      "description": "An implementation of Root 3 Subdivision, this method follows the model established in weaverbird for resolving edge conditions. For a correct implementation, mesh faces should be triangular, however the method has been modified to allow for quad faces as well.",
      "iconCss": "background: url('icons/meshPlus.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/weightedRoot3Subdivision.html"
    },
    {
      "name": "Aperture+0",
      "id": "m+Aperture+0",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the points along face's edges to its center, creating 0 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/aperture0.html"
    },
    {
      "name": "Aperture+2",
      "id": "m+Aperture+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from points along the face's edge to its center, creating 2 new points along the edge and removing the face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from points along the face's edge to its center, creating 2 new points along the edge and removing the face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/aperture2.html"
    },
    {
      "name": "Aperture+3",
      "id": "m+Aperture+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from points along the face's edge to its center, creating 3 new points along the edge and removing the face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from points along the face's edge to its center, creating 3 new points along the edge and removing the face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/aperture3.html"
    },
    {
      "name": "Center+1",
      "id": "m+Center+1",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by creating 1 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/center1.html"
    },
    {
      "name": "Center+3",
      "id": "m+Center+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by creating 3 new points along the edge and removes the face's vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/center3.html"
    },
    {
      "name": "Dense+1",
      "id": "m+Dense+1",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by adding a vertex at the face center and creating 1 new point along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/dense1.html"
    },
    {
      "name": "Fan+2",
      "id": "m+Fan+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by creating 2 new points along the edge and one at its center, removing the face's vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/fan2.html"
    },
    {
      "name": "Fan+3",
      "id": "m+Fan+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by creating 3 new points along the edge and removing the face's vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/fan3.html"
    },
    {
      "name": "Frame+0",
      "id": "m+Frame+0",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 0 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/frame0.html"
    },
    {
      "name": "Frame+1",
      "id": "m+Frame+1",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 1 new points along the edge",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 1 new points along the edge.",
      "iconCss": "background: url('icons/meshPlus.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/frame1.html"
    },
    {
      "name": "Frame+2",
      "id": "m+Frame+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 2 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/frame2.html"
    },
    {
      "name": "Frame+3",
      "id": "m+Frame+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 3 new points along the edge",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 3 new points along the edge.",
      "iconCss": "background: url('icons/meshPlus.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/frame3.html"
    },
    {
      "name": "Pinwheel+2",
      "id": "m+Pinwheel+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by creating 2 new points along the edge and removing the face's vertex.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/pinwheel2.html"
    },
    {
      "name": "Snub+0",
      "id": "m+Snub+0",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 0 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/snub0.html"
    },
    {
      "name": "Snub+1",
      "id": "m+Snub+1",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 1 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/snub1.html"
    },
    {
      "name": "Snub+2",
      "id": "m+Snub+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 2 new points along the edge and removing the face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 2 new points along the edge and removing the face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/snub2.html"
    },
    {
      "name": "Snub+3",
      "id": "m+Snub+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 3 new points along the edge and removing the face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 3 new points along the edge and removing the face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/snub3.html"
    },
    {
      "name": "Stellate+0",
      "id": "m+Stellate+0",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by adding a vertex at the face center and creating 0 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/stellate0.html"
    },
    {
      "name": "T+3",
      "id": "m+T+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 3 new points along the edge and removing the face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 3 new points along the edge and removing the face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/t3.html"
    },
    {
      "name": "Tri Frame+1",
      "id": "m+Tri Frame+1",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 1 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/meshplus/triFrame1.html"
    },
    {
      "name": "Tri Frame+2",
      "id": "m+Tri Frame+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 2 new points along the edge and removing the existing face's vertex",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's vertex to its center, creating 2 new points along the edge and removing the existing face's vertex.",
      "iconCss": "background: url('icons/meshPlus.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/triFrame2.html"
    },
    {
      "name": "Tri Frame+3",
      "id": "m+Tri Frame+3",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 3 new points along the edge",
      "description": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating points from the face's vertex and edge midpoint to its center, creating 3 new points along the edge.",
      "iconCss": "background: url('icons/meshPlus.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/triFrame3.html"
    },
    {
      "name": "X+2",
      "id": "m+X+2",
      "library": "MeshPlus",
      "category": "Subdivision",
      "summary": "Replaces selected faces of a mesh or the interior of a curve with a frame around the edge by evaluating a point from the face's edge midpoint to its center, creating 2 new points along the edge.",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/x2.html"
    },
    {
      "name": "Batwing",
      "id": "m+Batwing",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Batwing adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Batwing adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with quad faces, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/meshplus/batwing.html"
    },
    {
      "name": "Box",
      "id": "m+Box",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a mesh which spans two meshes bridging them from either the vertex or edge center",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/box.html"
    },
    {
      "name": "CLP",
      "id": "m+CLP",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz CLP adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz CLP adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with quad faces, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/meshplus/cLP.html"
    },
    {
      "name": "Cross",
      "id": "m+Cross",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a mesh which spans two meshes bridging them from the face center and connecting faces at either the vertex point or edge centers",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/cross.html"
    },
    {
      "name": "D",
      "id": "m+D",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz D adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz D adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with even point counts, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/d.html"
    },
    {
      "name": "F-RD",
      "id": "m+F-RD",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RD adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RD adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with even point counts, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/meshplus/fRD.html"
    },
    {
      "name": "F-RDr",
      "id": "m+F-RDr",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RDr adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RDr adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with even point counts, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/fRDr.html"
    },
    {
      "name": "F-RDr2",
      "id": "m+F-RDr2",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RDr with higher vertex count, adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen F-RDr with higher vertex count, adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.<br>(Note: Only works with even point counts, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/meshplus/fRDr2.html"
    },
    {
      "name": "I-WP",
      "id": "m+I-WP",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen I-WP adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen I-WP adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/iWP.html"
    },
    {
      "name": "I-WPr",
      "id": "m+I-WPr",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen I-WPr adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schoen I-WPr adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/meshplus/iWPr.html"
    },
    {
      "name": "Nevious",
      "id": "m+Nevious",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Neovious adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Neovious adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/nevious.html"
    },
    {
      "name": "P",
      "id": "m+P",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz P adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz P adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/p.html"
    },
    {
      "name": "Pa",
      "id": "m+Pa",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz Pa adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the Schwarz Pa adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/meshplus/pa.html"
    },
    {
      "name": "SS",
      "id": "m+SS",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the SS adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces",
      "description": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction based on the topology of the SS adapted with parametric inputs to the geometric proportions within the bounds of each offset pair of mesh faces.",
      "iconCss": "background: url('icons/meshPlus.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/sS.html"
    },
    {
      "name": "Switch",
      "id": "m+Switch",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a mesh which spans two meshes bridging them from either the vertex or edge center",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/switch.html"
    },
    {
      "name": "X&T",
      "id": "m+X&T",
      "library": "MeshPlus",
      "category": "Volume",
      "summary": "Creates a volumetric mesh from either a single mesh face and depth or between two parallel meshes of idential construction bridging the vertices to the face center between two mesh faces",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/meshplus/xT.html"
    },
    {
      "name": "Continuum",
      "id": "m+Continuum",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Creates a series of connections perpendicular and parallel to each meshes face creating a loop from front face to back face. Inspired by the work of Erwin Hauer.<br>(",
      "description": "Creates a series of connections perpendicular and parallel to each meshes face creating a loop from front face to back face. Inspired by the work of Erwin Hauer.<br>(Note: Only works with even point counts, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/continuum.html"
    },
    {
      "name": "Criss Cross",
      "id": "m+CrissCross",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Creates a series of connections perpendicular and parallel to each meshes face bridging between every other edge. <br>(",
      "description": "Creates a series of connections perpendicular and parallel to each meshes face bridging between every other edge. <br>(Note: Only works with even quad faces and polygons with 4 control points, for best results adjacent faces should have similar vertex organization)",
      "iconCss": "background: url('icons/meshPlus.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/meshplus/crissCross.html"
    },
    {
      "name": "Link",
      "id": "m+Link",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Creates a series of radially arrayed links from each mesh face edge about each face center and back to the same edge",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/meshplus/link.html"
    },
    {
      "name": "Net",
      "id": "m+Net",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Creates a series of radially arrayed interlocking ribbons from each mesh face edge about each face center",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/meshplus/net.html"
    },
    {
      "name": "Thatch",
      "id": "m+Thatch",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Converts each face into a quad set of thatch woven meshes",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/meshplus/thatch.html"
    },
    {
      "name": "Weave",
      "id": "m+Weave",
      "library": "MeshPlus",
      "category": "Weave",
      "summary": "Converts each face of a mesh into two interwoven meshes",
      "description": null,
      "iconCss": "background: url('icons/meshPlus.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/meshplus/weave.html"
    },
    {
      "name": "Mesh Pipe",
      "id": "MPipe",
      "library": "MeshTools",
      "category": "Primitive",
      "summary": "Create a mesh pipe.",
      "description": null,
      "iconCss": "background: url('icons/meshTools.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/meshtools/meshPipe.html"
    },
    {
      "name": "Mesh Sweep",
      "id": "MSweep",
      "library": "MeshTools",
      "category": "Primitive",
      "summary": "Create a mesh sweep with one rail curve.",
      "description": null,
      "iconCss": "background: url('icons/meshTools.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/meshtools/meshSweep.html"
    },
    {
      "name": "Bake Object",
      "id": "Bake",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Programmatically bake the geometry of specified objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/bakeObject.html"
    },
    {
      "name": "Control Wire Display",
      "id": "WireDisplay",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Control the display of wires for parameters and components.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/controlWireDisplay.html"
    },
    {
      "name": "Enable/Disable Object",
      "id": "OnOff",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Programmatically enable/disable solving for specified objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/enableDisableObject.html"
    },
    {
      "name": "Hide/Show Object Preview",
      "id": "HideShow",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Programmatically control the preview visibility of specified objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/hideShowObjectPreview.html"
    },
    {
      "name": "Move Object",
      "id": "Move",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Reposition an object on the GH canvas",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/moveObject.html"
    },
    {
      "name": "Rename Object",
      "id": "Rename",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Programmatically set the nickname of specified objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/renameObject.html"
    },
    {
      "name": "Set Group Properties",
      "id": "SetGroup",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Set the name, color, and style of a group.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setGroupProperties.html"
    },
    {
      "name": "Set Panel Properties",
      "id": "SetPanel",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Modify the properties of a panel object",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setPanelProperties.html"
    },
    {
      "name": "Set Scribble Properties",
      "id": "SetScribble",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Set the text, size, and font of a Scribble.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setScribbleProperties.html"
    },
    {
      "name": "Set Sketch",
      "id": "Set Sketch",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Modify the form of an existing sketch object.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setSketch.html"
    },
    {
      "name": "Set Slider Properties",
      "id": "Set Slider",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Modify the properties of a slider object",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setSliderProperties.html"
    },
    {
      "name": "Wire Display Toggle",
      "id": "WireToggle",
      "library": "MetaHopper",
      "category": "Attributes",
      "summary": "Switch all document wires between hidden and faint.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/wireDisplayToggle.html"
    },
    {
      "name": "Batch Animator",
      "id": "BAnim",
      "library": "MetaHopper",
      "category": "Batch",
      "summary": "Saves a screenshot of every state of the model in the batch to a folder.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/batchAnimator.html"
    },
    {
      "name": "Batch Variable from List",
      "id": "BVarList",
      "library": "MetaHopper",
      "category": "Batch",
      "summary": "Converts a list of values such as a series or range into a variable input to the Batch Driver",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/batchVariableFromList.html"
    },
    {
      "name": "BatchSlider",
      "id": "BSlider",
      "library": "MetaHopper",
      "category": "Batch",
      "summary": "Converts a standard GH Slider into a variable input to the Batch Driver",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/batchSlider.html"
    },
    {
      "name": "Assembly Info",
      "id": "Assembly Info",
      "library": "MetaHopper",
      "category": "Document",
      "summary": "Gets information about an assembly",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/assemblyInfo.html"
    },
    {
      "name": "Component Info",
      "id": "Component Info",
      "library": "MetaHopper",
      "category": "Document",
      "summary": "Get information about a component object. Retrieve components with Document Info, Get Attached Component, or Get Selected Component.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/componentInfo.html"
    },
    {
      "name": "Document Info",
      "id": "DocInfo",
      "library": "MetaHopper",
      "category": "Document",
      "summary": "Get information about the GH document and its components",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/documentInfo.html"
    },
    {
      "name": "Object Info",
      "id": "Object Info",
      "library": "MetaHopper",
      "category": "Document",
      "summary": "Gets basic information from any DocumentObject",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/objectInfo.html"
    },
    {
      "name": "Param Info",
      "id": "Param Info",
      "library": "MetaHopper",
      "category": "Document",
      "summary": "Gets information about param objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/paramInfo.html"
    },
    {
      "name": "Get Connected Objects",
      "id": "Connected",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Gets all components and params connected to this component",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getConnectedObjects.html"
    },
    {
      "name": "Get Groups",
      "id": "Groups",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Get all groups in the document",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getGroups.html"
    },
    {
      "name": "Get Object By Nickname",
      "id": "ObjByNN",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Retrieves all objects matching the specified nickname. Wildcard patterns accepted.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/getObjectByNickname.html"
    },
    {
      "name": "Get Objects in Group",
      "id": "ObjFromGroup",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Gets all components and params in the same group as this component (or the specified group if supplied)",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getObjectsInGroup.html"
    },
    {
      "name": "Get Objects of Same Library",
      "id": "SameLib",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Gets all components and params that are from the same library as the attached.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getObjectsOfSameLibrary.html"
    },
    {
      "name": "Get Objects of Same Type",
      "id": "SameType",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Gets all components and params that are of the same type as the attached.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getObjectsOfSameType.html"
    },
    {
      "name": "Get Scribbles",
      "id": "Scribbles",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Get all Scribbles in the document",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getScribbles.html"
    },
    {
      "name": "Get Selected Objects",
      "id": "SelObj",
      "library": "MetaHopper",
      "category": "Object Retrieval",
      "summary": "Get the objects currently selected on the canvas",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/getSelectedObjects.html"
    },
    {
      "name": "design",
      "id": "BatchDriver",
      "library": "MetaHopper",
      "category": "Run a batch analysis across a range of variable parameters",
      "summary": "BatchDriver",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/design.html"
    },
    {
      "name": "Best Practicizer",
      "id": "BestPracticizer",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Takes a selected group and inserts input and output params at both edges for any data that goes outside the group.",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/metahopper/bestPracticizer.html"
    },
    {
      "name": "Capture GH Canvas",
      "id": "CanvasCap",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Capture a hi-res image of the GH Canvas",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/captureGHCanvas.html"
    },
    {
      "name": "Expire Object",
      "id": "Expire",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Expire / recompute a component or param",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/expireObject.html"
    },
    {
      "name": "Get List Data",
      "id": "ListData",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Gets data from the Value List, Item Selector, etc components",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getListData.html"
    },
    {
      "name": "Get Param Data",
      "id": "ParamData",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Get the set of data in a given param",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/metahopper/getParamData.html"
    },
    {
      "name": "Get Runtime Messages",
      "id": "Msgs",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Gets errors and warnings from selected objects",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/getRuntimeMessages.html"
    },
    {
      "name": "Get Slider Properties",
      "id": "SliderInfo",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Gets the properties of the slider",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/getSliderProperties.html"
    },
    {
      "name": "Highlight Objects",
      "id": "Hilite",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Highlight objects by adding them a new group",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/highlightObjects.html"
    },
    {
      "name": "Instantiate Object",
      "id": "Create",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Attempts to create an instance of an object on the canvas",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/instantiateObject.html"
    },
    {
      "name": "Internalize Param Data",
      "id": "Internalize",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Internalize data into a param",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/internalizeParamData.html"
    },
    {
      "name": "Label Groups",
      "id": "LblGrp",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Auto-create a scribble in the upper left corner of a group that matches the group's name",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/metahopper/labelGroups.html"
    },
    {
      "name": "Relative Path",
      "id": "RelPath",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Appends the directory this definition is saved in to a file path. Auto-converts the contents of a text panel containing an absolute path",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/relativePath.html"
    },
    {
      "name": "Select GH Object",
      "id": "Select",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Select objects on the Grasshopper Canvas",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/selectGHObject.html"
    },
    {
      "name": "Set Object Value",
      "id": "SetObj",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Tries to set the value of an object. What value it sets varies by type - it sets a slider's numeric value, a panel or scribble's text contents, etc",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/setObjectValue.html"
    },
    {
      "name": "Set Param Data",
      "id": "SetParamData",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Set the data in a given param",
      "description": "Set the data in a given param. This is highly experimental and probably dangerous! For best results, match the types of the param you're setting and the param containing the data you're trying to push in.",
      "iconCss": "background: url('icons/metaHopper.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/setParamData.html"
    },
    {
      "name": "SwapParamType",
      "id": "SwapParam",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Switch the type of one param object to another",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/metahopper/swapParamType.html"
    },
    {
      "name": "Unwrap List",
      "id": "Unwrap",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Converts a data wrapper into a list",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/unwrapList.html"
    },
    {
      "name": "Unwrap List N Levels",
      "id": "UnwrapN",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Unwraps data wrappers N levels (or all the way if N=0)",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/unwrapListNLevels.html"
    },
    {
      "name": "Wrap List",
      "id": "Wrap",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Converts a list of data into a single object",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/wrapList.html"
    },
    {
      "name": "Wrap List N Levels",
      "id": "WrapN",
      "library": "MetaHopper",
      "category": "Utility",
      "summary": "Wraps and Path-shifts a list by N levels",
      "description": null,
      "iconCss": "background: url('icons/metaHopper.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/metahopper/wrapListNLevels.html"
    },
    {
      "name": "Displace By Spectrum",
      "id": "Displace By Spectrum",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Displace By Spectrum",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/displaceBySpectrum.html"
    },
    {
      "name": "EigenSystem",
      "id": "EigenSystem",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Builds the EigenSystem of the discrete Laplace Beltrami operator of a given mesh",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/eigenSystem.html"
    },
    {
      "name": "Extract EigenVector",
      "id": "Extract EigenVector",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Extract EigenVector",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/extractEigenVector.html"
    },
    {
      "name": "Extract spectrum",
      "id": "Extract spectrum",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Extract spectrum",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/extractSpectrum.html"
    },
    {
      "name": "Mesh Visualization",
      "id": "Mesh Visualization",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Mesh Visualization",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/meshVisualization.html"
    },
    {
      "name": "Reconstruct",
      "id": "Reconstruct",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Reconstruct From spectrums",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/reconstruct.html"
    },
    {
      "name": "Spectral Filter",
      "id": "Spectral Filter",
      "library": "Millipede",
      "category": "Eigen",
      "summary": "Spectral Filter",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/spectralFilter.html"
    },
    {
      "name": "FE Point Load",
      "id": "FEPointLoad",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Point Load",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/fEPointLoad.html"
    },
    {
      "name": "FE Point Supports",
      "id": "FEPointSupports",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Point Support",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/fEPointSupports.html"
    },
    {
      "name": "FE Solver",
      "id": "FE Solver",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Solver For FE Analysis",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/fESolver.html"
    },
    {
      "name": "FEA System",
      "id": "FEA System",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Finite Element System [frames and shells]",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/fEASystem.html"
    },
    {
      "name": "Frame Results",
      "id": "Frame Results",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Frame Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/frameResults.html"
    },
    {
      "name": "Frame Visualization",
      "id": "Frame Visualization",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Frame Visualization",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/frameVisualization.html"
    },
    {
      "name": "Graph structure",
      "id": "Graph structure",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Connectivity Graph of structural elements",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/millipede/graphStructure.html"
    },
    {
      "name": "Load Region",
      "id": "Load Region",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Boundary within which loads are applied",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/loadRegion.html"
    },
    {
      "name": "Material Properties Region",
      "id": "Material Properties",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Boundary within which material properties are applied",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/materialPropertiesRegion.html"
    },
    {
      "name": "MSupport Type region",
      "id": "Support Region",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Boundary within which support properties are changed",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/mSupportTypeRegion.html"
    },
    {
      "name": "Node Results",
      "id": "Node Results",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Node Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/nodeResults.html"
    },
    {
      "name": "Quad Results",
      "id": "Quad Results",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Quad Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/quadResults.html"
    },
    {
      "name": "Stress Lines",
      "id": "StressLines",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Stress Line Visualization",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/millipede/stressLines.html"
    },
    {
      "name": "Stress Pattern",
      "id": "Stress Pattern",
      "library": "Millipede",
      "category": "FESystem",
      "summary": "Stress Pattern",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/stressPattern.html"
    },
    {
      "name": "Discretization",
      "id": "Discretization",
      "library": "Millipede",
      "category": "Geometry",
      "summary": "Discretization",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/discretization.html"
    },
    {
      "name": "Mesh Contour field",
      "id": "Mesh Contours",
      "library": "Millipede",
      "category": "Geometry",
      "summary": "Mesh Contour field",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/meshContourField.html"
    },
    {
      "name": "Minimal Surface",
      "id": "MiniSrf",
      "library": "Millipede",
      "category": "Geometry",
      "summary": "Mesh Surface Minimizer",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/minimalSurface.html"
    },
    {
      "name": "Minimal Surface From Edges",
      "id": "MiniSrfEdge",
      "library": "Millipede",
      "category": "Geometry",
      "summary": "Mesh Surface Minimizer From Edges",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/minimalSurfaceFromEdges.html"
    },
    {
      "name": "Curves",
      "id": "Curves",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Extracts the iso-curves from the reparameterized surface",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/curves.html"
    },
    {
      "name": "Distance Pattern",
      "id": "Distance Pattern",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Distance Pattern",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/distancePattern.html"
    },
    {
      "name": "Image Pattern",
      "id": "Image Pattern",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Image Pattern",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/imagePattern.html"
    },
    {
      "name": "Mesh",
      "id": "Mesh",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Extracts the mesh with the new UV parameters as texture coordinates. Can be used for texture mapping",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/mesh.html"
    },
    {
      "name": "Pattern",
      "id": "Pattern",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Given a pattern made of lines and points this components remaps it using the new parameterization of the surface",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/millipede/pattern.html"
    },
    {
      "name": "Planes",
      "id": "Planes",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Extracts the planes from the reparameterized surface",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/millipede/planes.html"
    },
    {
      "name": "Quads",
      "id": "Quads",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Extracts a quad mesh fro the reparameterized surface. This mesh might have holes around singularities where the grid collapses",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/millipede/quads.html"
    },
    {
      "name": "Reparameterization",
      "id": "Reparameterization",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Mesh Reparameterization",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/reparameterization.html"
    },
    {
      "name": "Vector Field",
      "id": "Vector Field",
      "library": "Millipede",
      "category": "Parameterization",
      "summary": "Extracts the vector field from the reparameterized surface",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/vectorField.html"
    },
    {
      "name": "Cross Section",
      "id": "Csection",
      "library": "Millipede",
      "category": "Stock",
      "summary": "Cross Section definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/crossSection.html"
    },
    {
      "name": "Isotropic Material",
      "id": "Mat",
      "library": "Millipede",
      "category": "Stock",
      "summary": "Custom Material definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/isotropicMaterial.html"
    },
    {
      "name": "LoadCase",
      "id": "LoadCase",
      "library": "Millipede",
      "category": "Stock",
      "summary": "LoadCase",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/loadCase.html"
    },
    {
      "name": "Material",
      "id": "Mat",
      "library": "Millipede",
      "category": "Stock",
      "summary": "Material definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/material.html"
    },
    {
      "name": "MillC_ForceField",
      "id": "Mat",
      "library": "Millipede",
      "category": "Stock",
      "summary": "Material definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/millipede/millCForceField.html"
    },
    {
      "name": "MillC_MillC_StockDummyMaterial",
      "id": "Mat",
      "library": "Millipede",
      "category": "Stock",
      "summary": "Material definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/millCMillCStockDummyMaterial.html"
    },
    {
      "name": "2D boundary Region",
      "id": "Boundary",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D boundary Region",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DBoundaryRegion.html"
    },
    {
      "name": "2D Cell Results",
      "id": "2D Cell Results",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D Cell Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DCellResults.html"
    },
    {
      "name": "2D density Region",
      "id": "Density",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D density Region",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DDensityRegion.html"
    },
    {
      "name": "2D Iso Contour",
      "id": "2D Iso Contour",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D Iso Contour",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DIsoContour.html"
    },
    {
      "name": "2D Mesh Results",
      "id": "2D Mesh Results",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D Mesh Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DMeshResults.html"
    },
    {
      "name": "2D Node Results",
      "id": "2D Node Results",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "2D Node Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/millipede/2DNodeResults.html"
    },
    {
      "name": "Thickness",
      "id": "Thickness",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "Thickness",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/thickness.html"
    },
    {
      "name": "Topostruct 2D model",
      "id": "Topostruct 2D",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "Topostruct 2D model",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/topostruct2DModel.html"
    },
    {
      "name": "Topostruct 2D solver",
      "id": "Topostruct 2D solver",
      "library": "Millipede",
      "category": "Topostruct2D",
      "summary": "Topostruct 2D solver",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/topostruct2DSolver.html"
    },
    {
      "name": "3D boundary Region",
      "id": "Boundary",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D boundary Region",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DBoundaryRegion.html"
    },
    {
      "name": "3D Cell Results",
      "id": "3D Cell Results",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D Cell Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DCellResults.html"
    },
    {
      "name": "3D density Region",
      "id": "Density",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D density Region",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DDensityRegion.html"
    },
    {
      "name": "3D Iso Mesh",
      "id": "3D Iso Mesh",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D Iso Mesh",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DIsoMesh.html"
    },
    {
      "name": "3D Mesh Results",
      "id": "3D Mesh Results",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D Mesh Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DMeshResults.html"
    },
    {
      "name": "3D Node Results",
      "id": "3D Node Results",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D Node Results",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DNodeResults.html"
    },
    {
      "name": "3D Support Region",
      "id": "Support",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "3D Support Region",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/3DSupportRegion.html"
    },
    {
      "name": "Topostruct 3D model",
      "id": "Topostruct 3D",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "Topostruct 3D model",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/topostruct3DModel.html"
    },
    {
      "name": "Topostruct 3D solver",
      "id": "Topostruct 3D solver",
      "library": "Millipede",
      "category": "Topostruct3D",
      "summary": "Topostruct 3D solver",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/millipede/topostruct3DSolver.html"
    },
    {
      "name": "FFT",
      "id": "FFT",
      "library": "Millipede",
      "category": "Utilities",
      "summary": "Fast Fourier Transform",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/fFT.html"
    },
    {
      "name": "FFT 2D",
      "id": "FFT2D",
      "library": "Millipede",
      "category": "Utilities",
      "summary": "Fast Fourier Transform in 2D",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/fFT2D.html"
    },
    {
      "name": "MillC_FFT3D",
      "id": "Mat",
      "library": "Millipede",
      "category": "Utilities",
      "summary": "Material definition for FEA",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/millCFFT3D.html"
    },
    {
      "name": "Sparse System Solver",
      "id": "Sparse Solver",
      "library": "Millipede",
      "category": "Utilities",
      "summary": "Solver for Sparse Linear Systems A X = B",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/sparseSystemSolver.html"
    },
    {
      "name": "Symmetric EigenSystem",
      "id": "EigenSystem",
      "library": "Millipede",
      "category": "Utilities",
      "summary": "Symmetric EigenSystem",
      "description": null,
      "iconCss": "background: url('icons/millipede.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/millipede/symmetricEigenSystem.html"
    },
    {
      "name": "Mesh Relax",
      "id": "Mesh Relax",
      "library": "MinSurf",
      "category": "MinSurf",
      "summary": "Relax a mesh",
      "description": null,
      "iconCss": "background: url('icons/minSurf.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/minsurf/meshRelax.html"
    },
    {
      "name": "Minimal Surface",
      "id": "MinSurf 2C",
      "library": "MinSurf",
      "category": "MinSurf",
      "summary": "Construct a minimal surface based on 2 boundry curves",
      "description": null,
      "iconCss": "background: url('icons/minSurf.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/minsurf/minimalSurface.html"
    },
    {
      "name": "Minimal Surface Mesh",
      "id": "MinSurf 2C Mesh",
      "library": "MinSurf",
      "category": "MinSurf",
      "summary": "Construct a minimal surface based on 2 boundry curves as mesh",
      "description": null,
      "iconCss": "background: url('icons/minSurf.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/minsurf/minimalSurfaceMesh.html"
    },
    {
      "name": "Add Sources",
      "id": "Add Sources",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Add sources to generate a density field for different voxel channels",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/addSources.html"
    },
    {
      "name": "Bitmap Blend",
      "id": "Bitmap Blend",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Blend one or more bitmap sources together along orthographic axes.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/bitmapBlend.html"
    },
    {
      "name": "Bitmap Loft",
      "id": "Bitmap Loft",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Loft two or more bitmap sources together along the Z-axis.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/bitmapLoft.html"
    },
    {
      "name": "Construct 2D Paint Bitmap",
      "id": "2D Paint",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Construct a two dimensional bitmap on the fly by using free-hand painting techniques.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/construct2DPaintBitmap.html"
    },
    {
      "name": "Construct Bitmap Source",
      "id": "Bitmap Source",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Construct a bitmap source for field generation.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/constructBitmapSource.html"
    },
    {
      "name": "Construct Bitmap Stack Source",
      "id": "Bitmap Stack",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Construct a voxel image from a stack of images.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/constructBitmapStackSource.html"
    },
    {
      "name": "Construct Function Source",
      "id": "Function Source",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Construct a function source for field generation.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/constructFunctionSource.html"
    },
    {
      "name": "Construct Geometric Source",
      "id": "Geom Source",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Define a geometric source for field generation",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/constructGeometricSource.html"
    },
    {
      "name": "Construct Voxels From File",
      "id": "Read Voxels",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Reads voxel data from a Monolith volume (.vol) file",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/constructVoxelsFromFile.html"
    },
    {
      "name": "Function Presets",
      "id": "Presets",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Select from a list of pre-defined implicit functions.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/functionPresets.html"
    },
    {
      "name": "Multiply Sources",
      "id": "Mult Sources",
      "library": "Monolith",
      "category": "Construct",
      "summary": "Multiply sources to generate a density field for different voxel channels",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/multiplySources.html"
    },
    {
      "name": "Blur Filter (Kernel)",
      "id": "Blur",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform a kernel based blur filter.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/blurFilterKernel.html"
    },
    {
      "name": "Gaussian Blur Filter",
      "id": "Gaussian Blur",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform 3D Gaussian Blur on a voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/gaussianBlurFilter.html"
    },
    {
      "name": "Inside Out Filter",
      "id": "Inside Out",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform 3D Inside Out filter on a voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/insideOutFilter.html"
    },
    {
      "name": "Laplacian Filter",
      "id": "Laplacian",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform a laplacian filter.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/laplacianFilter.html"
    },
    {
      "name": "Maximum Filter (Kernel)",
      "id": "Maximum",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform a kernel based maximum (dilation) filter.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/maximumFilterKernel.html"
    },
    {
      "name": "Median Filter (Kernel)",
      "id": "Median",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform a kernel based median filter.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/medianFilterKernel.html"
    },
    {
      "name": "Minimum Filter (Kernel)",
      "id": "Minimum",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform a kernel based minimum (erosion) filter.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/minimumFilterKernel.html"
    },
    {
      "name": "Symmetry Filter",
      "id": "Symmetry",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Ensure voxel field is symmetric about all three major axes.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/symmetryFilter.html"
    },
    {
      "name": "Twist Filter",
      "id": "Twist",
      "library": "Monolith",
      "category": "Filters",
      "summary": "Perform 3D twist to a voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/twistFilter.html"
    },
    {
      "name": "Get Millipede Field",
      "id": "Get Millipede Field",
      "library": "Monolith",
      "category": "Millipede",
      "summary": "Convert a topostruct3d system from Millipede into a voxel field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getMillipedeField.html"
    },
    {
      "name": "Set Millipede Densities",
      "id": "Set Millipede Densities",
      "library": "Monolith",
      "category": "Millipede",
      "summary": "Set Millipede densities for a topostruct3d model transferring values from an input voxel field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/setMillipedeDensities.html"
    },
    {
      "name": "Color Mesh By Ratio",
      "id": "Color Mesh",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Colorize a mesh based on the density values of a single channel.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/colorMeshByRatio.html"
    },
    {
      "name": "Color Mesh By RGB",
      "id": "Color Mesh",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Colorize a mesh based on the density values of the RGB channels.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/colorMeshByRGB.html"
    },
    {
      "name": "Get Channel Names",
      "id": "Get Channels",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Extract the channel names stored in a voxel field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getChannelNames.html"
    },
    {
      "name": "Get Iso Mesh",
      "id": "Iso Mesh",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Extracts a mesh contour of the density field channel",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getIsoMesh.html"
    },
    {
      "name": "Get Mesh Slices",
      "id": "Mesh Slices",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Get a series of nested slices using two voxel channels.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getMeshSlices.html"
    },
    {
      "name": "Get Slice Plane",
      "id": "Slice Plane",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Extract a horizontal slice through a voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getSlicePlane.html"
    },
    {
      "name": "Get Voxel Points",
      "id": "Get Voxel Points",
      "library": "Monolith",
      "category": "Outputs",
      "summary": "Extract the location points of the voxels stored in a voxel field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getVoxelPoints.html"
    },
    {
      "name": "Get Monolith Data",
      "id": "GetMonolithData",
      "library": "Monolith",
      "category": "Stream",
      "summary": "Reads the active voxel data from a running instance of Monolith",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getMonolithData.html"
    },
    {
      "name": "StreamToMonolith",
      "id": "StreamToMonolith",
      "library": "Monolith",
      "category": "Stream",
      "summary": "Stream a voxel field to a monolith layer [requires monolith to be running]",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/streamToMonolith.html"
    },
    {
      "name": "Channel Fill",
      "id": "Fill",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Assign a single number to all values in a voxel channel.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/monolith/channelFill.html"
    },
    {
      "name": "Channel Histogram",
      "id": "Histogram",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Compute a histogram for the values in a voxel channel.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/channelHistogram.html"
    },
    {
      "name": "Channel Invert",
      "id": "Invert",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Invert the values of a voxel channel.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/channelInvert.html"
    },
    {
      "name": "Channel Noise",
      "id": "Noise",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Generate a 3D noise filter for a voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/monolith/channelNoise.html"
    },
    {
      "name": "Channel Swap",
      "id": "Channel Swap",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Swap one voxel channel with another.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/channelSwap.html"
    },
    {
      "name": "Get Voxel Values",
      "id": "Get Values",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Extract the channel values of the voxels stored in a voxel field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/monolith/getVoxelValues.html"
    },
    {
      "name": "Set Voxel Values",
      "id": "Set Values",
      "library": "Monolith",
      "category": "Transform Channels",
      "summary": "Set the values of the voxels in a field",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/setVoxelValues.html"
    },
    {
      "name": "3d Viewport",
      "id": "3d Viewport",
      "library": "Monolith",
      "category": "Views",
      "summary": "Visualize the current voxel field.",
      "description": null,
      "iconCss": "background: url('icons/monolith.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/monolith/3dViewport.html"
    },
    {
      "name": "GEO Project",
      "id": "Project",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Projects coordinates from WGS84 to a state-plane) - by Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/gEOProject.html"
    },
    {
      "name": "GoogleMap",
      "id": "GMaps",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Google Map Hack -still in development, use with caution - Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/googleMap.html"
    },
    {
      "name": "MapPlaces",
      "id": "Places API Data",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Extracts Google Places data (Requires GooglePlaces APIKey. Visit the Google APIs Console at https://code.google.com/apis/console) - by Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/mapPlaces.html"
    },
    {
      "name": "MapProject",
      "id": "Project Points",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Projects point data to and from lon/lat - by Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/mapProject.html"
    },
    {
      "name": "Mosquito-Direct",
      "id": "GDirect",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Returns routes, times, and directions - Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/mosquitoDirect.html"
    },
    {
      "name": "MosquitoLocation",
      "id": "Location",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Location and reverse geo-coding hack - Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/mosquitoLocation.html"
    },
    {
      "name": "MosquitoStep",
      "id": "GStep",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Map Step (use with Mosquito Direct) - Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/mosquitoStep.html"
    },
    {
      "name": "Vector Maps",
      "id": "Vector Maps",
      "library": "Mosquito",
      "category": "Geo",
      "summary": "Extracts Vector maps of cities from OSM. Roads, Buildings etc (Building Heights are not available for all locations) - by Carson Smuts 2015",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/mosquito/vectorMaps.html"
    },
    {
      "name": "Download Images",
      "id": "ImageDL",
      "library": "Mosquito",
      "category": "Image",
      "summary": "Downloads images to a directory by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/downloadImages.html"
    },
    {
      "name": "EXIF",
      "id": "EXIF",
      "library": "Mosquito",
      "category": "Image",
      "summary": "Extract EXIF data from Photos by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/eXIF.html"
    },
    {
      "name": "Material",
      "id": "Mat",
      "library": "Mosquito",
      "category": "Image",
      "summary": "Applies a material to a Surface by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/material.html"
    },
    {
      "name": "GoogleStock",
      "id": "Stock",
      "library": "Mosquito",
      "category": "Media",
      "summary": "Stock Market values from Google - concept by Mia Zinni + Carson Smuts",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/googleStock.html"
    },
    {
      "name": "MosquitoFlicker",
      "id": "Flicker",
      "library": "Mosquito",
      "category": "Media",
      "summary": "Flicker API tap  by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/mosquitoFlicker.html"
    },
    {
      "name": "SonicTweet",
      "id": "Twitter",
      "library": "Mosquito",
      "category": "Media",
      "summary": "Access Twitter API by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/sonicTweet.html"
    },
    {
      "name": "SonicTweet User",
      "id": "tUser",
      "library": "Mosquito",
      "category": "Media",
      "summary": "GH Twitter API User Info by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/sonicTweetUser.html"
    },
    {
      "name": "Audio Play",
      "id": "Play",
      "library": "Mosquito",
      "category": "Sound",
      "summary": "Play the audio wave from an MP3 by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/audioPlay.html"
    },
    {
      "name": "Audio Scrub",
      "id": "AudioScrub",
      "library": "Mosquito",
      "category": "Sound",
      "summary": "Scrub through audio from an MP3 by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/audioScrub.html"
    },
    {
      "name": "Audio Wave",
      "id": "AudioWave",
      "library": "Mosquito",
      "category": "Sound",
      "summary": "Extract the audio wave from an MP3 by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/audioWave.html"
    },
    {
      "name": "Levels",
      "id": "Levels",
      "library": "Mosquito",
      "category": "Sound",
      "summary": "Metering levels for Audio Samples and Other cool stuff by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/levels.html"
    },
    {
      "name": "SonicStringSearch",
      "id": "FindString",
      "library": "Mosquito",
      "category": "Strings",
      "summary": "Search for words in a body of text by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/sonicStringSearch.html"
    },
    {
      "name": "String Recorder",
      "id": "Recorder",
      "library": "Mosquito",
      "category": "Strings",
      "summary": "Record strings over time and cull duplicates by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/stringRecorder.html"
    },
    {
      "name": "Branch Count",
      "id": "Bs",
      "library": "Mosquito",
      "category": "Tools",
      "summary": "Returns the number of branches in a list by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/branchCount.html"
    },
    {
      "name": "Sub Graft",
      "id": "SubGraft",
      "library": "Mosquito",
      "category": "Tools",
      "summary": "Graft A flat Tree into grouped Branches by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/subGraft.html"
    },
    {
      "name": "Flow",
      "id": "Flow",
      "library": "Mosquito",
      "category": "Vector",
      "summary": "Calculates Flow Paths On Surface by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/mosquito/flow.html"
    },
    {
      "name": "Refraction",
      "id": "Refract",
      "library": "Mosquito",
      "category": "Vector",
      "summary": "A plugin that calculates refaction of rays through a material by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/refraction.html"
    },
    {
      "name": "SonicRoot",
      "id": "Root",
      "library": "Mosquito",
      "category": "Vector",
      "summary": "Fast-Square Root Calculation by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/sonicRoot.html"
    },
    {
      "name": "SurfaceRays",
      "id": "SurfaceRays",
      "library": "Mosquito",
      "category": "Vector",
      "summary": "Calculates Reflections Off Surfaces From Source Pnt by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/surfaceRays.html"
    },
    {
      "name": "TargetRays",
      "id": "TargetRays",
      "library": "Mosquito",
      "category": "Vector",
      "summary": "Calculates Reflections From Target Points by Carson",
      "description": null,
      "iconCss": "background: url('icons/mosquito.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/mosquito/targetRays.html"
    },
    {
      "name": "NGon Face Edges by NGon Pairs",
      "id": "EdgeByFP",
      "library": "Ngon",
      "category": "Edge",
      "summary": "Get NGon Face Edges by NGon Pairs",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/nGonFaceEdgesByNGonPairs.html"
    },
    {
      "name": "NGons Connected To NGon Edge",
      "id": "EdgeNGon",
      "library": "Ngon",
      "category": "Edge",
      "summary": "Gets ngons connected to ngons edges, -1 is added to beggining of the list edge is naked (left / right property for clean meshes)",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/nGonsConnectedToNGonEdge.html"
    },
    {
      "name": "Scale NGon Face Edges by NGon Pairs",
      "id": "SEdge",
      "library": "Ngon",
      "category": "Edge",
      "summary": "Scale Get NGon Face Edges by NGon Pairs",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/scaleNGonFaceEdgesByNGonPairs.html"
    },
    {
      "name": "NGon To NGons",
      "id": "NGonToNgons",
      "library": "Ngon",
      "category": "Face",
      "summary": "Get adjancent NGons to current NGon",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/nGonToNGons.html"
    },
    {
      "name": "BFS",
      "id": "BFS",
      "library": "Ngon",
      "category": "Graph",
      "summary": "BreathFirstSearch from mesh",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/bFS.html"
    },
    {
      "name": "Coloring",
      "id": "Coloring",
      "library": "Ngon",
      "category": "Graph",
      "summary": "Coloring Edges by n colors",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/coloring.html"
    },
    {
      "name": "Convex Hull",
      "id": "ConvexHull",
      "library": "Ngon",
      "category": "Graph",
      "summary": "ConvexHull from points",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/convexHull.html"
    },
    {
      "name": "KMeans",
      "id": "KMeans",
      "library": "Ngon",
      "category": "Graph",
      "summary": "KMeans",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/kMeans.html"
    },
    {
      "name": "Line Graph",
      "id": "LineGraph",
      "library": "Ngon",
      "category": "Graph",
      "summary": "LineGraph",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/lineGraph.html"
    },
    {
      "name": "Mesh Curve",
      "id": "MeshCurve",
      "library": "Ngon",
      "category": "Graph",
      "summary": "MeshCurve",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/meshCurve.html"
    },
    {
      "name": "Mesh Skeleton",
      "id": "MeshSkeleton",
      "library": "Ngon",
      "category": "Graph",
      "summary": "MeshSkeleton",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/meshSkeleton.html"
    },
    {
      "name": "Walker",
      "id": "Walker",
      "library": "Ngon",
      "category": "Graph",
      "summary": "Walker",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/ngon/walker.html"
    },
    {
      "name": "Reci Move",
      "id": "ReciMove",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Translation of Edges, forming nexorade",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/reciMove.html"
    },
    {
      "name": "Reci Move Vol",
      "id": "ReciMoveVol",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Adding volumetric elements to translation reciprocal",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/reciMoveVol.html"
    },
    {
      "name": "Reciprical Edges",
      "id": "RecipricalEdges",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Rotate mesh edge by average normal",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/recipricalEdges.html"
    },
    {
      "name": "Reciprical Extend",
      "id": "RecipricalExtend",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Rotate mesh edge and extend to the next line",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/recipricalExtend.html"
    },
    {
      "name": "Reciprical Thickness",
      "id": "RecipricalThickness",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Rotate mesh edge by average normal and give thickness",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/recipricalThickness.html"
    },
    {
      "name": "Reciprical Volume",
      "id": "RecipricalVolume",
      "library": "Ngon",
      "category": "Reci",
      "summary": "Volumetric elements",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/recipricalVolume.html"
    },
    {
      "name": "Joints VDA",
      "id": "JointsVDA",
      "library": "Ngon",
      "category": "Transform",
      "summary": "JointsVDA",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/jointsVDA.html"
    },
    {
      "name": "Boolean",
      "id": "Boolean",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline boolean",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/boolean.html"
    },
    {
      "name": "Boundary First Flatenning",
      "id": "BoundaryFirstFlatenning",
      "library": "Ngon",
      "category": "Util",
      "summary": "BoundaryFirstFlatenning",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/boundaryFirstFlatenning.html"
    },
    {
      "name": "Chamfer",
      "id": "Chamfer",
      "library": "Ngon",
      "category": "Util",
      "summary": "Cut an open Curve with Closed Curve",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/chamfer.html"
    },
    {
      "name": "Curve Cut",
      "id": "CurveCut",
      "library": "Ngon",
      "category": "Util",
      "summary": "Cut an open Curve with Closed Curve",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/curveCut.html"
    },
    {
      "name": "Curve Ends",
      "id": "CurveEnds",
      "library": "Ngon",
      "category": "Util",
      "summary": "Fix Curve Ends",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/curveEnds.html"
    },
    {
      "name": "Curve Preview",
      "id": "Display",
      "library": "Ngon",
      "category": "Util",
      "summary": "CurvePreview",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/curvePreview.html"
    },
    {
      "name": "Curve Shatter",
      "id": "CurveShatter",
      "library": "Ngon",
      "category": "Util",
      "summary": "Shatter Curves by Points",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/curveShatter.html"
    },
    {
      "name": "Curve Sort",
      "id": "CurveSort",
      "library": "Ngon",
      "category": "Util",
      "summary": "Sort a list of curve by other curves",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/curveSort.html"
    },
    {
      "name": "Explode Mesh",
      "id": "ExplodeMesh",
      "library": "Ngon",
      "category": "Util",
      "summary": "Explodes mesh and assigns average color to each vertex of a face",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/explodeMesh.html"
    },
    {
      "name": "Intersection",
      "id": "Intersection",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline intersection",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/intersection.html"
    },
    {
      "name": "Map Crv",
      "id": "MapCrv",
      "library": "Ngon",
      "category": "Util",
      "summary": "Maps a list of curve from one polyline to another",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/mapCrv.html"
    },
    {
      "name": "Map Mesh",
      "id": "MapMesh",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline Map Mesh",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/mapMesh.html"
    },
    {
      "name": "Map Srf",
      "id": "MapSrf",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline Map Surface",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/mapSrf.html"
    },
    {
      "name": "Mesh Prop",
      "id": "MeshProp",
      "library": "Ngon",
      "category": "Util",
      "summary": "MeshProp",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/meshProp.html"
    },
    {
      "name": "Polyline Center",
      "id": "PCenter",
      "library": "Ngon",
      "category": "Util",
      "summary": "Gets center,normal and plane for polylines",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/polylineCenter.html"
    },
    {
      "name": "Polyline Difference",
      "id": "Difference",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline Difference",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/polylineDifference.html"
    },
    {
      "name": "Polyline Offset",
      "id": "Offset",
      "library": "Ngon",
      "category": "Util",
      "summary": "Polyline Offset",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/polylineOffset.html"
    },
    {
      "name": "Remesh",
      "id": "Remesh",
      "library": "Ngon",
      "category": "Util",
      "summary": "Remesh",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/remesh.html"
    },
    {
      "name": "Simplify",
      "id": "Simplify",
      "library": "Ngon",
      "category": "Util",
      "summary": "Simplify Polyline",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/ngon/simplify.html"
    },
    {
      "name": "Text",
      "id": "Text",
      "library": "Ngon",
      "category": "Util",
      "summary": "Text for LaserCutting or Milling",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/ngon/text.html"
    },
    {
      "name": "NGons Around Vertices",
      "id": "Vertex Ngons",
      "library": "Ngon",
      "category": "Vertex",
      "summary": "Get Ngons that are around mesh topology vertices",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/ngon/nGonsAroundVertices.html"
    },
    {
      "name": "NGons Edges Around Vertices",
      "id": "VEdge Ngons",
      "library": "Ngon",
      "category": "Vertex",
      "summary": "Get Ngons that are around mesh topology vertices",
      "description": null,
      "iconCss": "background: url('icons/ngon.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/ngon/nGonsEdgesAroundVertices.html"
    },
    {
      "name": "Bouncers",
      "id": "Bouncers",
      "library": "Nudibranch",
      "category": "Animators",
      "summary": "Generates and animates particles moving within a user defined box (Timer defined).",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/bouncers.html"
    },
    {
      "name": "Railway",
      "id": "Railway",
      "library": "Nudibranch",
      "category": "Animators",
      "summary": "Generates and animates random points on any given curve (Timer defined).",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/railway.html"
    },
    {
      "name": "Satellite",
      "id": "Satellite",
      "library": "Nudibranch",
      "category": "Animators",
      "summary": "Generates and animates satellite-like points around any collection of objects (Timer defined).",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/satellite.html"
    },
    {
      "name": "Walkers",
      "id": "Walkers",
      "library": "Nudibranch",
      "category": "Animators",
      "summary": "Generates and animates particles attached on a surface (Timer defined).",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/walkers.html"
    },
    {
      "name": "Attractor Values",
      "id": "AttValues",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates numerical values for any given pointlist, being affected by a certain number of point attractors.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/attractorValues.html"
    },
    {
      "name": "Bundle Attractor",
      "id": "Bundle",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates an iteratively bundled pointlist for any given datatree population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/bundleAttractor.html"
    },
    {
      "name": "Curve Attractor",
      "id": "CrvAttractor",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates an iteratively defined new point/vector list for any given, curve attractor affected, population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/curveAttractor.html"
    },
    {
      "name": "Curve Ravel",
      "id": "CrvRavel",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates distance raveled numerical values for any given pointlist, being affected by any number of curve attractors.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/curveRavel.html"
    },
    {
      "name": "Curve Values",
      "id": "CrvValues",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates numerical values for any given pointlist, being affected by any number of curve attractors.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/curveValues.html"
    },
    {
      "name": "Point Attractor",
      "id": "PtAttractor",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates an iteratively defined new point/vector list for any given ,attractor affected, population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/pointAttractor.html"
    },
    {
      "name": "Point Ravel",
      "id": "PtRavel",
      "library": "Nudibranch",
      "category": "Attractors",
      "summary": "Generates distance raveled numerical values for any given pointlist, being affected by any number of point attractors.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/pointRavel.html"
    },
    {
      "name": "Climber",
      "id": "Climber",
      "library": "Nudibranch",
      "category": "Scramblers",
      "summary": "Generates the gradient descent or ascent paths on a surface for any provided point list.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/climber.html"
    },
    {
      "name": "Curve Hicking",
      "id": "HickingCrv",
      "library": "Nudibranch",
      "category": "Scramblers",
      "summary": "Generates the surface paths for any given ,curve attractor affected, population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/curveHicking.html"
    },
    {
      "name": "Mesh Climber",
      "id": "MeshClimber",
      "library": "Nudibranch",
      "category": "Scramblers",
      "summary": "Generates the gradient descent or ascent paths on a Mesh object for any provided point list.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/nudibranch/meshClimber.html"
    },
    {
      "name": "Point Hicking",
      "id": "HickingPt",
      "library": "Nudibranch",
      "category": "Scramblers",
      "summary": "Generates the surface paths for any given ,point attractor affected, population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/pointHicking.html"
    },
    {
      "name": "Point Patrolling",
      "id": "PatrolPt",
      "library": "Nudibranch",
      "category": "Scramblers",
      "summary": "Generates the surface paths for any given ,twirl attractor affected, population of points.",
      "description": null,
      "iconCss": "background: url('icons/nudibranch.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/nudibranch/pointPatrolling.html"
    },
    {
      "name": "Breeder (oEL)",
      "id": "NEAT (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Evolves artificial neural networks with the NEAT algorithm, using SharpNeatLib by Sebastian Risi",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/breederoEL.html"
    },
    {
      "name": "Breeder Settings - All (oEL)",
      "id": "SetAll (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Settings for the NEAT Algorithm to evolve an ANN",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/breederSettingsAlloEL.html"
    },
    {
      "name": "Breeder Settings - Basics (oEL)",
      "id": "SetBase (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Basic Settings for the NEAT Algorithm to evolve an ANN. These will override any changes made to the properties in the All-Settings Component.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/breederSettingsBasicsoEL.html"
    },
    {
      "name": "Crossover (oEL)",
      "id": "MutW (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Mutate connection weights of a Network",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/crossoveroEL.html"
    },
    {
      "name": "Deconstruct Network (oEL)",
      "id": "DeconN (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Deconstruct a network into its nodes, connections, weights, functions and metadata like performance data.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/deconstructNetworkoEL.html"
    },
    {
      "name": "Deconstruct Network Obj (oEL)",
      "id": "DeconNObj (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Gives the Network's Objective and Fitness Values",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/deconstructNetworkObjoEL.html"
    },
    {
      "name": "Evaluate Network (oEL)",
      "id": "EvalN (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Forward-Pass through the Network: Takes values for the input nodes and calculates the outputs.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/evaluateNetworkoEL.html"
    },
    {
      "name": "Field Curve (oEL)",
      "id": "FC (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Draws a curve following the direction field defined by a Network. Integration with Runge-Kutta 4th order.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/fieldCurveoEL.html"
    },
    {
      "name": "Field Curve MT (oEL)",
      "id": "FCMT (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Draws a curve following the direction field defined by a Network. Integration with Runge-Kutta 4th order. Uses Parallel Computation for a list of starting points.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/fieldCurveMToEL.html"
    },
    {
      "name": "Modify Weights (oEL)",
      "id": "Crossover (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Takes a pool of Networks and produces offspring by crossover mating",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/modifyWeightsoEL.html"
    },
    {
      "name": "Mutate Weights (oEL)",
      "id": "MutW (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Mutate connection weights of a Network",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/mutateWeightsoEL.html"
    },
    {
      "name": "Random Network (oEL)",
      "id": "RN (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Generate a random network",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/randomNetworkoEL.html"
    },
    {
      "name": "Show Network (oEL)",
      "id": "SN (octEvoLearn)",
      "library": "Octopus",
      "category": "Evolutionary Learning",
      "summary": "Opens a window to show the Network",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/showNetworkoEL.html"
    },
    {
      "name": "Check Pareto Dominance",
      "id": "Check Pareto Dominance",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Takes two individuals and returns the dominance relation, assuming a minimization problem.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/checkParetoDominance.html"
    },
    {
      "name": "Compute Diversity",
      "id": "Compute Diversity",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Computes the paremetric diversity of each solution in the list and adds it as an objective",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/computeDiversity.html"
    },
    {
      "name": "Construct Solution",
      "id": "Construct Solution",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Takes a lists of numbers for parameters and/or objectives to wrap them in a single object for better handling of pools of solutions [generations etc.]",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/constructSolution.html"
    },
    {
      "name": "Crossover",
      "id": "Simulated Binary Crossover",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Takes two individuals and exchanges parameters between them - after 'SBX - Simulated Binary Crossover'",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/crossover.html"
    },
    {
      "name": "Cull Duplicate Solutions",
      "id": "Cull Duplicate Solutions",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Removes duplicate solutions",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/cullDuplicateSolutions.html"
    },
    {
      "name": "Cull Elite",
      "id": "Cull Elite",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Selects an elite of best multi-objective solutions, assuming a minimization problem.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/cullElite.html"
    },
    {
      "name": "Cull Pareto Fronts",
      "id": "Pareto Fronts",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Divides a set of solutions into pareto-fronts, assuming a minimization problem.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/cullParetoFronts.html"
    },
    {
      "name": "Deconstruct Solution",
      "id": "Deconstruct Solution",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Takes an OctopusSolution object and explodes it into parameters and objectives",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/deconstructSolution.html"
    },
    {
      "name": "Hypervolume",
      "id": "Hypervolume",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Calculates the Hypervolume of the ParetoFront of a multi-dimensional set of points; exact algorithm; normalizes the pareto front to objectives between 0 and 1",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/hypervolume.html"
    },
    {
      "name": "Hypervolume Contributions",
      "id": "HV+",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Calculates the Hypervolume contributions of a multi-dimensional set of points in relation to a reference point",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/hypervolumeContributions.html"
    },
    {
      "name": "Mutate",
      "id": "Mutate an Octopus Solution",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Mutate a solution's parameter values",
      "description": "Mutate a solution's parameter values. It is recommended to work with parameters between 0 and 1. Although the mutation-algorithm can handle values outside this domain, the approach to scaling the mutation is experimental and not according to literature.",
      "iconCss": "background: url('icons/octopus.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/mutate.html"
    },
    {
      "name": "Tournament Selection",
      "id": "TS",
      "library": "Octopus",
      "category": "Explicit Components",
      "summary": "Tournament Selection for single or multi objective solutions, assuming a minimization problem.",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/tournamentSelection.html"
    },
    {
      "name": "Octopus Evaluator",
      "id": "Octopus Eval",
      "library": "Octopus",
      "category": "Loop",
      "summary": "Octopus Evaluator",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/octopusEvaluator.html"
    },
    {
      "name": "Octopus Generic Evaluator",
      "id": "Octopus Generic Eval",
      "library": "Octopus",
      "category": "Loop",
      "summary": "Octopus Generic Evaluator",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/octopusGenericEvaluator.html"
    },
    {
      "name": "Octopus Loop",
      "id": "Octopus Loop",
      "library": "Octopus",
      "category": "Loop",
      "summary": "Octopus Loop",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/octopusLoop.html"
    },
    {
      "name": "Octopus",
      "id": "Octopus",
      "library": "Octopus",
      "category": "Octopus",
      "summary": "Multi-objective seach and optimzation",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/octopus.html"
    },
    {
      "name": "Network Evaluate (oSL)",
      "id": "EvalN (octSupervLearn)",
      "library": "Octopus",
      "category": "Supervised Learning",
      "summary": "Evaluate a network for some input values",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/networkEvaluateoSL.html"
    },
    {
      "name": "Network Learning (oSL)",
      "id": "NetLearn (octSupervLearn)",
      "library": "Octopus",
      "category": "Supervised Learning",
      "summary": "Supervised example training of a Network by multi-core resilient propagation algorithm, using the Encog library by Jeff Heaton",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/networkLearningoSL.html"
    },
    {
      "name": "Network Training Settings (oSL)",
      "id": "NTS (octSupervLearn)",
      "library": "Octopus",
      "category": "Supervised Learning",
      "summary": "Settings for RPROP Supervised Learning of an ANN",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/octopus/networkTrainingSettingsoSL.html"
    },
    {
      "name": "SVM Evaluate (oSL)",
      "id": "SVMEval (octSupervLearn)",
      "library": "Octopus",
      "category": "Supervised Learning",
      "summary": "Evaluate the learnt SVM function",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/sVMEvaluateoSL.html"
    },
    {
      "name": "SVM Learning (oSL)",
      "id": "SVMLearn (octSupervLearn)",
      "library": "Octopus",
      "category": "Supervised Learning",
      "summary": "Train SVM and optionally estimate parameters using grid search and cross validation",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/octopus/sVMLearningoSL.html"
    },
    {
      "name": "ControllerComponent",
      "id": "CntrlComponent",
      "library": "Octopus",
      "category": "Test",
      "summary": "Controller test component",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/controllerComponent.html"
    },
    {
      "name": "If",
      "id": "If",
      "library": "Octopus",
      "category": "Test",
      "summary": "If component",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/octopus/if.html"
    },
    {
      "name": "MD NearestNeighbors",
      "id": "MD NearN",
      "library": "Octopus",
      "category": "Utilities",
      "summary": "Neighbourhood search of multi-dimensional points (euclidean kd-tree)",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/mDNearestNeighbors.html"
    },
    {
      "name": "Select Solutions",
      "id": "Select Solutions",
      "library": "Octopus",
      "category": "View",
      "summary": "Takes octopus solutions or networks with saved phenotype meshes to show them for selection",
      "description": null,
      "iconCss": "background: url('icons/octopus.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/octopus/selectSolutions.html"
    },
    {
      "name": "OpenNest",
      "id": "OpenNest",
      "library": "OpenNest",
      "category": "Nest",
      "summary": "OpenNest",
      "description": null,
      "iconCss": "background: url('icons/openNest.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/opennest/openNest.html"
    },
    {
      "name": "Backpropagation",
      "id": "BackProp",
      "library": "Owl",
      "category": "Backprop",
      "summary": "Teach the Network with backpropagation",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/owl/backpropagation.html"
    },
    {
      "name": "BackpropagationEx",
      "id": "BackEx",
      "library": "Owl",
      "category": "Backprop",
      "summary": "Backpropagation, threaded.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/owl/backpropagationEx.html"
    },
    {
      "name": "DataTree to TensorSet",
      "id": "DT->TS",
      "library": "Owl",
      "category": "Convert",
      "summary": "Convert a DataTree of Numbers into a TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/owl/dataTreeToTensorSet.html"
    },
    {
      "name": "Feature TensorSet",
      "id": "FeatureTS",
      "library": "Owl",
      "category": "Convert",
      "summary": "Convert multiple types of data into a TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/owl/featureTensorSet.html"
    },
    {
      "name": "OneHot TensorSet",
      "id": "OneHot",
      "library": "Owl",
      "category": "Convert",
      "summary": "Construct a OneHot TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/owl/oneHotTensorSet.html"
    },
    {
      "name": "TensorSet to DataTree",
      "id": "TS->DT",
      "library": "Owl",
      "category": "Convert",
      "summary": "Deconstruct Owl TensorSet into a DataTree",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/owl/tensorSetToDataTree.html"
    },
    {
      "name": "Display Compute",
      "id": "DComp",
      "library": "Owl",
      "category": "Display",
      "summary": "Computes the network output",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/owl/displayCompute.html"
    },
    {
      "name": "List Devices",
      "id": "Devices",
      "library": "Owl",
      "category": "Display",
      "summary": "Image capturing devices",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/owl/listDevices.html"
    },
    {
      "name": "TensorSet Polylines",
      "id": "TSPoly",
      "library": "Owl",
      "category": "Display",
      "summary": "Plot a TensorSet as a set of polylines",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/owl/tensorSetPolylines.html"
    },
    {
      "name": "WebCamCapture",
      "id": "Capture",
      "library": "Owl",
      "category": "Display",
      "summary": "Capture a single frame from a webcam",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/owl/webCamCapture.html"
    },
    {
      "name": "Load Bitmap",
      "id": "LoadBmp",
      "library": "Owl",
      "category": "I/O",
      "summary": "Loads a bitmap as a Tensor.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/owl/loadBitmap.html"
    },
    {
      "name": "Load TensorSet",
      "id": "LoadTSet",
      "library": "Owl",
      "category": "I/O",
      "summary": "Loads the TensorSet from a file.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/owl/loadTensorSet.html"
    },
    {
      "name": "Save IDX TensorSet",
      "id": "ToIDX",
      "library": "Owl",
      "category": "I/O",
      "summary": "Saves the TensorSet in an IDX file.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/owl/saveIDXTensorSet.html"
    },
    {
      "name": "Save TBIN TensorSet",
      "id": "ToTBIN",
      "library": "Owl",
      "category": "I/O",
      "summary": "Saves the TensorSet to a binary TBIN file.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/owl/saveTBINTensorSet.html"
    },
    {
      "name": "Save TensorSet",
      "id": "ToTTXT",
      "library": "Owl",
      "category": "I/O",
      "summary": "Saves the TensorSet to a text file.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/owl/saveTensorSet.html"
    },
    {
      "name": "Evaluate 2D",
      "id": "Eval2D",
      "library": "Owl",
      "category": "Image",
      "summary": "Evaluate 2D Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/owl/evaluate2D.html"
    },
    {
      "name": "Mesh T2",
      "id": "MT2",
      "library": "Owl",
      "category": "Image",
      "summary": "Preview 2D Tensor as a mesh",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/owl/meshT2.html"
    },
    {
      "name": "Resize",
      "id": "Resize",
      "library": "Owl",
      "category": "Image",
      "summary": "Resize a 2D Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/owl/resize.html"
    },
    {
      "name": "Samples",
      "id": "Samples",
      "library": "Owl",
      "category": "Image",
      "summary": "Create sampling frames",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/owl/samples.html"
    },
    {
      "name": "Assign Values",
      "id": "SetNet",
      "library": "Owl",
      "category": "Network",
      "summary": "Assing network weights and biases directly.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/owl/assignValues.html"
    },
    {
      "name": "Compute",
      "id": "Compute",
      "library": "Owl",
      "category": "Network",
      "summary": "Compute the output values for the given input TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/owl/compute.html"
    },
    {
      "name": "Extract Values",
      "id": "GetNet",
      "library": "Owl",
      "category": "Network",
      "summary": "Get network weights and biases as Tensors",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/owl/extractValues.html"
    },
    {
      "name": "Layer Compute",
      "id": "ComputeL",
      "library": "Owl",
      "category": "Network",
      "summary": "Compute the output values for each layer, given the input Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/owl/layerCompute.html"
    },
    {
      "name": "Trim Network",
      "id": "Trim",
      "library": "Owl",
      "category": "Network",
      "summary": "Trim the network",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/owl/trimNetwork.html"
    },
    {
      "name": "Construct Network",
      "id": "Network",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Construct Owl.Accord Network",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/owl/constructNetwork.html"
    },
    {
      "name": "Construct Tensor",
      "id": "Tensor",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Construct Owl Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/owl/constructTensor.html"
    },
    {
      "name": "Construct TensorSet",
      "id": "TensorSet",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Construct Owl TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/owl/constructTensorSet.html"
    },
    {
      "name": "Deconstruct Tensor",
      "id": "DeTensor",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Deconstruct Owl Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/owl/deconstructTensor.html"
    },
    {
      "name": "Deconstruct TensorSet",
      "id": "DeTSet",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Deconstruct Owl TensorSet",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/owl/deconstructTensorSet.html"
    },
    {
      "name": "Deconstruct Trigger",
      "id": "DeTrigger",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Deconstruct Trigger",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/owl/deconstructTrigger.html"
    },
    {
      "name": "Load Network",
      "id": "Network",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Load Activation Network",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/owl/loadNetwork.html"
    },
    {
      "name": "Save Network",
      "id": "Network",
      "library": "Owl",
      "category": "Primitive",
      "summary": "Save Activation Network",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/owl/saveNetwork.html"
    },
    {
      "name": "Choose Action",
      "id": "Action",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Choose agent next action",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/owl/chooseAction.html"
    },
    {
      "name": "Construct QAgent",
      "id": "QAgent",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Construct QAgent",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/owl/constructQAgent.html"
    },
    {
      "name": "Construct QMatrix",
      "id": "QMatrix",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Construct QMatrix",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/owl/constructQMatrix.html"
    },
    {
      "name": "Deconstruct QAgent",
      "id": "DeQAgent",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Deconstruct QAgent",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/owl/deconstructQAgent.html"
    },
    {
      "name": "Matrix2QMatrix",
      "id": "M2Q",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Convert a spare adjacency matrix to QMatrix.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/owl/matrix2QMatrix.html"
    },
    {
      "name": "UpdateQ",
      "id": "UpdateQ",
      "library": "Owl",
      "category": "Reinforcement",
      "summary": "Update QAgent values",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/owl/updateQ.html"
    },
    {
      "name": "File Watch",
      "id": "Watcher",
      "library": "Owl",
      "category": "Scripting",
      "summary": "Watch file for changes",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/owl/fileWatch.html"
    },
    {
      "name": "Run Process",
      "id": "RunProcess",
      "library": "Owl",
      "category": "Scripting",
      "summary": "Run any application.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/owl/runProcess.html"
    },
    {
      "name": "Construct Network Ex",
      "id": "NetworkEx",
      "library": "Owl",
      "category": "Supervised",
      "summary": "Construct Owl.Learning Network from the atomic data.<br>Use this component when importing already trained models from other frameworks.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/owl/constructNetworkEx.html"
    },
    {
      "name": "Deconstruct Network",
      "id": "DeNetwork",
      "library": "Owl",
      "category": "Supervised",
      "summary": "Deconstruct Owl.Learning Network",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/owl/deconstructNetwork.html"
    },
    {
      "name": "Highest Activation",
      "id": "High",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Indicates which dimension of the Tensor has the greatest value.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/owl/highestActivation.html"
    },
    {
      "name": "Reshape",
      "id": "Reshape",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Reshape a Tensor.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/owl/reshape.html"
    },
    {
      "name": "Tensor Addition",
      "id": "Add",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Tensor Addition.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/owl/tensorAddition.html"
    },
    {
      "name": "Tensor Crop",
      "id": "Crop",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Tensor Crop.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/owl/tensorCrop.html"
    },
    {
      "name": "Tensor Split",
      "id": "SplitT",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Splits Tensor by it's leftmost dimension.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/owl/tensorSplit.html"
    },
    {
      "name": "Tensor Stats",
      "id": "Stats",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Get various information about the Tensor.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/owl/tensorStats.html"
    },
    {
      "name": "Tensor Subtraction",
      "id": "Subtract",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Tensor Subtraction.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/owl/tensorSubtraction.html"
    },
    {
      "name": "Threshold",
      "id": "T",
      "library": "Owl",
      "category": "Tensor",
      "summary": "Apply threshold filter on the Tensor",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/owl/threshold.html"
    },
    {
      "name": "Average TSet",
      "id": "Average",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Get TensorSet average.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/owl/averageTSet.html"
    },
    {
      "name": "Bounds TSet",
      "id": "Bounds",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Get TensorSet bounds.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/owl/boundsTSet.html"
    },
    {
      "name": "Classes",
      "id": "Classes",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Generate classification TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/owl/classes.html"
    },
    {
      "name": "Interpolate TSet",
      "id": "Intrp",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Interpolate a TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/owl/interpolateTSet.html"
    },
    {
      "name": "Merge TSet",
      "id": "MergeTS",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Merge multiple TensorSets into one.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/owl/mergeTSet.html"
    },
    {
      "name": "Pick Tensor",
      "id": "Pick",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Pick single Tensors out of the TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/owl/pickTensor.html"
    },
    {
      "name": "Shuffle TSet",
      "id": "Shuffle",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Shuffle TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/owl/shuffleTSet.html"
    },
    {
      "name": "Split TSet",
      "id": "SplitTS",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Split TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/owl/splitTSet.html"
    },
    {
      "name": "Subsample TSet",
      "id": "Subsample",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Subsample TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/owl/subsampleTSet.html"
    },
    {
      "name": "TensorSet Stats",
      "id": "Stats",
      "library": "Owl",
      "category": "TensorSet",
      "summary": "Get various information about the TensorSet.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/owl/tensorSetStats.html"
    },
    {
      "name": "Cluster Lines",
      "id": "ClusterL",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "Cluster lines",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/owl/clusterLines.html"
    },
    {
      "name": "KMeans Clustering",
      "id": "KMeans",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "A KMeans clustering component",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/owl/kMeansClustering.html"
    },
    {
      "name": "KMeans Clustering Ex",
      "id": "KMeansEx",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "A KMeans clustering component",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/owl/kMeansClusteringEx.html"
    },
    {
      "name": "Markov Chain",
      "id": "MChain",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "Markov Chain series generator",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/owl/markovChain.html"
    },
    {
      "name": "t-SNE",
      "id": "t-SNE",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "Laurens van der Maaten's dimensionality reduction method.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/owl/tSNE.html"
    },
    {
      "name": "t-SNE Ex",
      "id": "t-SNE",
      "library": "Owl",
      "category": "Unsupervised",
      "summary": "Laurens van der Maaten's dimensionality reduction method.",
      "description": null,
      "iconCss": "background: url('icons/owl.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/owl/tSNEEx.html"
    },
    {
      "name": "Append Metadata",
      "id": "pcAppendData",
      "library": "Pancake",
      "category": "Data",
      "summary": "Append an associative array as metadata to geometry. Compared to an assoc, the result is still a geometric object.The metadata will be preserved after many operations.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/appendMetadata.html"
    },
    {
      "name": "Associative Array To Datatable",
      "id": "pcAssocToDatatable",
      "library": "Pancake",
      "category": "Data",
      "summary": "Create a datatable (a set of headers and values), so that data can be used by LunchBox, Human UI, etc, or exported",
      "description": "Create a datatable (a set of headers and values), so that data can be used by LunchBox, Human UI, etc, or exported. Only named value will be extracted.By default, each column is stored as one branch. Use the option in the context menu to store entries as branches.",
      "iconCss": "background: url('icons/pancake.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/associativeArrayToDatatable.html"
    },
    {
      "name": "Associative Array To String",
      "id": "pcAssocToString",
      "library": "Pancake",
      "category": "Data",
      "summary": "Convert an associative array to a string of certain style, such as Json, Python, etc. Right-click the component to choose style.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/associativeArrayToString.html"
    },
    {
      "name": "Categorize",
      "id": "pcCategorize",
      "library": "Pancake",
      "category": "Data",
      "summary": "Categorize values by keys",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/categorize.html"
    },
    {
      "name": "Categorize By Index",
      "id": "pcCategorizeByInd",
      "library": "Pancake",
      "category": "Data",
      "summary": "Categorize values by integer keys. Compared to the generic version, this component has better performance.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/categorizeByIndex.html"
    },
    {
      "name": "Construct Associative Array",
      "id": "pcConAssoc",
      "library": "Pancake",
      "category": "Data",
      "summary": "Create an associative array from a list of items. An associative array will be treated as one single element during Grasshopper tree manipulation. Therefore structure manipulation would be easier.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/constructAssociativeArray.html"
    },
    {
      "name": "Construct Associative Array by Keys",
      "id": "pcConAssocKV",
      "library": "Pancake",
      "category": "Data",
      "summary": "Construct or adjust an associative array by key and values.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/constructAssociativeArrayByKeys.html"
    },
    {
      "name": "Construct Associative Array from CSV",
      "id": "pcAssocFromCSV",
      "library": "Pancake",
      "category": "Data",
      "summary": "Create a list of associative arrays from CSV lines. See example for more information.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/constructAssociativeArrayFromCSV.html"
    },
    {
      "name": "Count Unique",
      "id": "pcCountUnique",
      "library": "Pancake",
      "category": "Data",
      "summary": "Extract all unique values from a list and count their occurences",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/countUnique.html"
    },
    {
      "name": "Deconstruct Associaitve Array as Key-Value List",
      "id": "pcDeconAssocAsKVList",
      "library": "Pancake",
      "category": "Data",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/deconstructAssociaitveArrayAsKeyValueList.html"
    },
    {
      "name": "Deconstruct Associative Array",
      "id": "pcDeconAssoc",
      "library": "Pancake",
      "category": "Data",
      "summary": "Decompose an associative array into items",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/deconstructAssociativeArray.html"
    },
    {
      "name": "Deconstruct Associative Array by Keys",
      "id": "pcDeconAssocKV",
      "library": "Pancake",
      "category": "Data",
      "summary": "Retrieve data from an associative array by key paths.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/deconstructAssociativeArrayByKeys.html"
    },
    {
      "name": "Extract Metadata",
      "id": "pcExtractData",
      "library": "Pancake",
      "category": "Data",
      "summary": "Retrieve metadata from geometry",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/extractMetadata.html"
    },
    {
      "name": "Merge Associative Array",
      "id": "pcMergeAssoc",
      "library": "Pancake",
      "category": "Data",
      "summary": "Merge two or more associative arrays",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/mergeAssociativeArray.html"
    },
    {
      "name": "Remove Metadata",
      "id": "pcRemoveData",
      "library": "Pancake",
      "category": "Data",
      "summary": "Appended metadata will be preserved if you bake the geometry into Rhino and can be further read.This component is used to remove metadata from geometry.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/removeMetadata.html"
    },
    {
      "name": "Set Principle Value",
      "id": "pcSetAssocPVal",
      "library": "Pancake",
      "category": "Data",
      "summary": "Set the principle value of an associative array",
      "description": "Set the principle value of an associative array. An assoc will behave like its principal value if the processing component doesn't support associative array. If unset, an assoc will take the first item as its principle value, unless the first item is a String/Text. If unset and the first item is a String/Text, an assoc will not have a principle value. See example for more information.",
      "iconCss": "background: url('icons/pancake.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/setPrincipleValue.html"
    },
    {
      "name": "Unwrap List",
      "id": "pcUnwrapList",
      "library": "Pancake",
      "category": "Data",
      "summary": "Unwrapped an atom list to its original content",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/unwrapList.html"
    },
    {
      "name": "Wrap List",
      "id": "pcWrapList",
      "library": "Pancake",
      "category": "Data",
      "summary": "Wrap a list to an atom list, which is a list but being treated as one single element",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/wrapList.html"
    },
    {
      "name": "AutoCAD Export Option",
      "id": "pcecDWG",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of AutoCAD",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/autoCADExportOption.html"
    },
    {
      "name": "Definition Path",
      "id": "pcGhFilePath",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Get the path of current Grasshopper definition/file, so that you can reference files wherever they are.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/definitionPath.html"
    },
    {
      "name": "DXF Export Option",
      "id": "pcecDXF",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of DXF",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/dXFExportOption.html"
    },
    {
      "name": "Export",
      "id": "pcExport",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component exports geometries from GH to .  file directlyThis component doesn't rely on Export command.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/export.html"
    },
    {
      "name": "Export 3DM",
      "id": "pcExport3DM",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component exports geometries from GH to 3DM file directlyThis component doesn't rely on any user interface operation in Rhino.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/export3DM.html"
    },
    {
      "name": "Export As",
      "id": "pcExportAs",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component exports geometries from GH to various formats with attributes and layer information (if the target format allows)",
      "description": "This component exports geometries from GH to various formats with attributes and layer information (if the target format allows).This component uses Rhino's Export from interactive environment. Therefore it would be blocked by another ongoing command.Remember to save your definiton before first export, as sometimes the operation will freeze Grasshopper. If such an issue occurs, try using compatible mode by right-clicking the component.",
      "iconCss": "background: url('icons/pancake.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/exportAs.html"
    },
    {
      "name": "Export STL",
      "id": "pcExportSTL",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component exports geometries from GH to STL file directlyThis component doesn't rely on any user interface operation in Rhino.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/exportSTL.html"
    },
    {
      "name": "Export TXT",
      "id": "pcExportTXT",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component exports text to a file.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/exportTXT.html"
    },
    {
      "name": "FBX Export Option",
      "id": "pcecFBX",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of FBX",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/fBXExportOption.html"
    },
    {
      "name": "Filepath Series",
      "id": "pcFileSeries",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Calculate the next filename in a filepath series",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/filepathSeries.html"
    },
    {
      "name": "IGES Export Option",
      "id": "pcecIGES",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of IGES format",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/iGESExportOption.html"
    },
    {
      "name": "Illustrator Export Option",
      "id": "pcecAI",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of Illustrator format",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/illustratorExportOption.html"
    },
    {
      "name": "Internalize",
      "id": "pcInternalize",
      "library": "Pancake",
      "category": "I/O",
      "summary": "This component wraps the 'Internalize' feature for automated workflow. This component should be used as a termination component.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/internalize.html"
    },
    {
      "name": "OBJ Export Option",
      "id": "pcecSKP",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of OBJ",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/oBJExportOption.html"
    },
    {
      "name": "Parse String",
      "id": "pcParseString",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Parse formatted string to its correct type",
      "description": "Parse formatted string to its correct type. Currently this component supports Integer, Number, Boolean, Guid, Length Quantity, Datetime, Point, Domain(1/2D), Colour and Json. See examples or manual for more information.",
      "iconCss": "background: url('icons/pancake.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/parseString.html"
    },
    {
      "name": "Rhino File Export Option",
      "id": "pcec3DM",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of Rhino format",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/rhinoFileExportOption.html"
    },
    {
      "name": "SAT Export Option",
      "id": "pcecSAT",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of SAT format",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/sATExportOption.html"
    },
    {
      "name": "SketchUp Export Option",
      "id": "pcecSKP",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of SketchUp",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/sketchUpExportOption.html"
    },
    {
      "name": "STEP Export Option",
      "id": "pcecSTEP",
      "library": "Pancake",
      "category": "I/O",
      "summary": "Export options of STEP",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/pancake/sTEPExportOption.html"
    },
    {
      "name": "Pancake Routine Status",
      "id": "pcRoutineStatus",
      "library": "Pancake",
      "category": "Internal",
      "summary": "Check status of internal routine",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/pancakeRoutineStatus.html"
    },
    {
      "name": "Restore Config",
      "id": "pcRestoreConfig",
      "library": "Pancake",
      "category": "Internal",
      "summary": "Restore a packedcfg from file location.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/restoreConfig.html"
    },
    {
      "name": "Default Value",
      "id": "pcDefVal",
      "library": "Pancake",
      "category": "Logic",
      "summary": "Outputs default value (D), if value (V) is not provided, such as an empty cluster input. Outputs the provided value otherwise. The component acts as a filter for optional cluster input.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/defaultValue.html"
    },
    {
      "name": "Wait Until",
      "id": "pcWaitUntil",
      "library": "Pancake",
      "category": "Logic",
      "summary": "Postpone data until signal is received",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/waitUntil.html"
    },
    {
      "name": "Construct Quantity",
      "id": "pcConQty",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Add unit to a number to convert it into a quantity. When the unit is not supplied, document unit is used.Use 'Parse String' component to create a feet & inch length quantity.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/pancake/constructQuantity.html"
    },
    {
      "name": "Deconstruct Quantity",
      "id": "pcDeconQty",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Deconstruct quantity to its inside amount, unit and unit type. Feet and inch length will become a decimal amount in feet. Otherwise the amount is not converted.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/pancake/deconstructQuantity.html"
    },
    {
      "name": "Null Values",
      "id": "pcNull",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Provide special values such as null, NaN, +/-Infinity",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/nullValues.html"
    },
    {
      "name": "Quantity Operator",
      "id": "pcQtyOp",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Fulfill arithmetic operator on quantities and numbers",
      "description": "Fulfill arithmetic operator on quantities and numbers. Rhino 6 user may also use the built-in Add, Sub, Multiply and Mass Addition component to process quantities.For detailed information, see manual or examples.",
      "iconCss": "background: url('icons/pancake.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/pancake/quantityOperator.html"
    },
    {
      "name": "Set Precision",
      "id": "pcSetPrecision",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Set the precision of a quantity. Precision may have different meanings on different quantities. See manual or example for more information.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/setPrecision.html"
    },
    {
      "name": "To Decimal Length",
      "id": "pcToDecimalLen",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Convert a quantity to a decimal length with designated unit.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/toDecimalLength.html"
    },
    {
      "name": "To Feet & Inch Length",
      "id": "pcToFeetInchLen",
      "library": "Pancake",
      "category": "Quantity",
      "summary": "Convert a quantity to a feet-inch length with designated unit.",
      "description": null,
      "iconCss": "background: url('icons/pancake.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/pancake/toFeetInchLength.html"
    },
    {
      "name": "Divide Distance",
      "id": "ptDivideDis",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide curve by distance",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideDistance.html"
    },
    {
      "name": "Divide Distance with Reference",
      "id": "ptDivideDisRef",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide by chord or direct distance with reference point",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideDistanceWithReference.html"
    },
    {
      "name": "Divide Length",
      "id": "ptDivideLen",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide curve by length",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideLength.html"
    },
    {
      "name": "Divide Length with Reference",
      "id": "ptDivideLenRef",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide by length on curve with reference point",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideLengthWithReference.html"
    },
    {
      "name": "Divide Number",
      "id": "ptDivideNum",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide curve by number",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideNumber.html"
    },
    {
      "name": "Divide Parameter",
      "id": "ptDivideParam",
      "library": "Paneling Tools",
      "category": "Curve",
      "summary": "Divide curve by normalized parameter list",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/divideParameter.html"
    },
    {
      "name": "Compose Grid",
      "id": "ptCompose",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Compose a grid from points and their ij indices",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/composeGrid.html"
    },
    {
      "name": "Compose Grid Number",
      "id": "ptComposeNum",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Compose a grid from points and number of rows",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/composeGridNumber.html"
    },
    {
      "name": "Intersect Curves",
      "id": "ptUVCrvs",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create from intersections of u and v curves",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/intersectCurves.html"
    },
    {
      "name": "Planar Extrude",
      "id": "ptPlanarExtrude",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create grid from planar extrude",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/planarExtrude.html"
    },
    {
      "name": "Planar Grid",
      "id": "ptPlanar",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create planar grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/planarGrid.html"
    },
    {
      "name": "Polar 3D Grid",
      "id": "ptPolar3D",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create 3D polar grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/polar3DGrid.html"
    },
    {
      "name": "Polar Extrude",
      "id": "ptPolarExtrude",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create grid from polar extrude",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/polarExtrude.html"
    },
    {
      "name": "Polar Grid",
      "id": "ptPolar2D",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create polar grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/polarGrid.html"
    },
    {
      "name": "Surface Distance",
      "id": "ptSrfDis",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Divide surface by distance",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceDistance.html"
    },
    {
      "name": "Surface Domain Chord Distance",
      "id": "ptSrfDomChord",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create grid from surface domain by chord or direct distance",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceDomainChordDistance.html"
    },
    {
      "name": "Surface Domain Length",
      "id": "ptSrfDomLen",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create grid from surface domain by length on surface",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceDomainLength.html"
    },
    {
      "name": "Surface Domain Number",
      "id": "ptSrfDomNum",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Create grid that from surface domain by number",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceDomainNumber.html"
    },
    {
      "name": "Surface Parameter",
      "id": "ptSrfParam",
      "library": "Paneling Tools",
      "category": "Grid",
      "summary": "Divide surface by normalized parameter list",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceParameter.html"
    },
    {
      "name": "Curve Attraction",
      "id": "ptCrvAtts",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using curve attractors",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/curveAttraction.html"
    },
    {
      "name": "Direction Attraction",
      "id": "ptDirAtts",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using a direction attractor",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/directionAttraction.html"
    },
    {
      "name": "Draft Angle Attraction",
      "id": "ptSlopeAtts",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using a draft angle attractor",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/panelingtools/draftAngleAttraction.html"
    },
    {
      "name": "Gaussian Curvature",
      "id": "ptGauss",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using surface Gaussian curvature",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/gaussianCurvature.html"
    },
    {
      "name": "Mean Curvature",
      "id": "ptMean",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using surface Mean curvature",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/meanCurvature.html"
    },
    {
      "name": "Point Attraction",
      "id": "ptPointAtts",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using point attractors",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/pointAttraction.html"
    },
    {
      "name": "Random Attraction",
      "id": "ptRandAtts",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid rendomly",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/randomAttraction.html"
    },
    {
      "name": "Weight Attraction",
      "id": "ptWeight",
      "library": "Paneling Tools",
      "category": "Grid Attractors",
      "summary": "Shuffle grid using weight map",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/weightAttraction.html"
    },
    {
      "name": "Center Grid",
      "id": "ptCenter",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract center grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/centerGrid.html"
    },
    {
      "name": "Clean Grid",
      "id": "ptClean",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Remove null rows and null columns",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/cleanGrid.html"
    },
    {
      "name": "Convert to Diamond",
      "id": "ptToDiamond",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Convert a rectangular grid to a diamond grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/convertToDiamond.html"
    },
    {
      "name": "Coordinates",
      "id": "ptCoordinate",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Calculate x, y and z vectors for each grid point",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/coordinates.html"
    },
    {
      "name": "Coordinates 3D",
      "id": "ptCoordinate3D",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Calculate x, y and z vectors for each 3D cell",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/coordinates3D.html"
    },
    {
      "name": "Extract Column",
      "id": "ptCol",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract column from a grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/extractColumn.html"
    },
    {
      "name": "Extract Grid Indices",
      "id": "ptIndices",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract grid indices (i and j location)",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/extractGridIndices.html"
    },
    {
      "name": "Extract Item",
      "id": "ptItem",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract grid item using i & j index",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/extractItem.html"
    },
    {
      "name": "Extract Row",
      "id": "ptRow",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract row from a grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/extractRow.html"
    },
    {
      "name": "Flatten 3D Grids",
      "id": "ptFlatten3D",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Flatten two grids to a linear list of corresponding cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/flatten3DGrids.html"
    },
    {
      "name": "Flatten Grids",
      "id": "ptFlatten",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Flatten grids to a linear list of cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/panelingtools/flattenGrids.html"
    },
    {
      "name": "Grid Density",
      "id": "ptDense",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Change grid density",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/gridDensity.html"
    },
    {
      "name": "Grid Dir",
      "id": "ptDir",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Reverse grid i and j directions",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/panelingtools/gridDir.html"
    },
    {
      "name": "Offset Grid",
      "id": "ptOffsetGrid",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Offset a grid by a fixed or variable distance",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/offsetGrid.html"
    },
    {
      "name": "Replace",
      "id": "ptReplace",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Replace list of points using i and j locations",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/replace.html"
    },
    {
      "name": "Square Grid",
      "id": "ptSquare",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Make all grid rows have equal number of points",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/squareGrid.html"
    },
    {
      "name": "Sub Grid",
      "id": "ptSubGrid",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Extract sub grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/subGrid.html"
    },
    {
      "name": "Surface from Grid",
      "id": "ptGridSrf",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Calculate surface from grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/surfaceFromGrid.html"
    },
    {
      "name": "Trim Grid",
      "id": "ptTrim",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Trim grids",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/trimGrid.html"
    },
    {
      "name": "Wrap Grids",
      "id": "ptWrap",
      "library": "Paneling Tools",
      "category": "Grid Utility",
      "summary": "Wrap grids in x or v direction",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/wrapGrids.html"
    },
    {
      "name": "Cellulate",
      "id": "ptCell",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Generate individual cells and wires",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/cellulate.html"
    },
    {
      "name": "Generate Borders",
      "id": "ptBorders",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Generate cells borders",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/generateBorders.html"
    },
    {
      "name": "Generate Faces",
      "id": "ptFaces",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Generate faces for grid cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/generateFaces.html"
    },
    {
      "name": "Generate Flat Faces",
      "id": "ptFlatFaces",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Generate cells flat faces",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/generateFlatFaces.html"
    },
    {
      "name": "Morph 2D",
      "id": "ptMorph2D",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Morph curves to grid cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph2D.html"
    },
    {
      "name": "Morph 2D List",
      "id": "ptMorph2DList",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Morph curves to grid cells with list variation",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph2DList.html"
    },
    {
      "name": "Morph 2D Map",
      "id": "ptMorph2DMap",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Morph list of curves to the corresponding grid cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph2DMap.html"
    },
    {
      "name": "Morph 2D Mean",
      "id": "ptMorph2DMean",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Morph curves to grid cells with mean variation",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph2DMean.html"
    },
    {
      "name": "Panel Connections",
      "id": "ptMPanel",
      "library": "Paneling Tools",
      "category": "Panel 2D",
      "summary": "Panel using connection strings",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/panelingtools/panelConnections.html"
    },
    {
      "name": "Cellulate 3D Grid",
      "id": "pt3DCell",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Generate boxes between two bounding grids",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/cellulate3DGrid.html"
    },
    {
      "name": "Morph 3D",
      "id": "ptMorph3D",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Morph objects between 2 bounding grids",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph3D.html"
    },
    {
      "name": "Morph 3D List",
      "id": "ptMorph3DList",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Morph objects between 2 bounding grids with list variation",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph3DList.html"
    },
    {
      "name": "Morph 3D Map",
      "id": "ptMorph3DMap",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Morph list of objects to the corresponding grid cells",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph3DMap.html"
    },
    {
      "name": "Morph 3D Mean",
      "id": "ptMorph3DMean",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Morph objects between 2 bounding grids using tween variations",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/panelingtools/morph3DMean.html"
    },
    {
      "name": "Orient to Grid",
      "id": "ptOrient",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Orient objects to a grid",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/orientToGrid.html"
    },
    {
      "name": "Panel 3D Connections",
      "id": "ptMPanel3D",
      "library": "Paneling Tools",
      "category": "Panel 3D",
      "summary": "Panel 3D using connection strings",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/panel3DConnections.html"
    },
    {
      "name": "Iso Edges",
      "id": "ptIsoE",
      "library": "Paneling Tools",
      "category": "Panel Utility",
      "summary": "Extract iso-edges on surface from linear edges",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/isoEdges.html"
    },
    {
      "name": "Pull Edges",
      "id": "ptPullE",
      "library": "Paneling Tools",
      "category": "Panel Utility",
      "summary": "Pull linear edges to surface",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/pullEdges.html"
    },
    {
      "name": "Short Edges",
      "id": "ptShortE",
      "library": "Paneling Tools",
      "category": "Panel Utility",
      "summary": "Extract shortest path on surface from linear edges",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/shortEdges.html"
    },
    {
      "name": "Bake Grid",
      "id": "ptBake",
      "library": "Paneling Tools",
      "category": "Param",
      "summary": "Bake paneling grid(s) with serializing",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/panelingtools/bakeGrid.html"
    },
    {
      "name": "Version",
      "id": "ptVersion",
      "library": "Paneling Tools",
      "category": "Param",
      "summary": "PanelingTools version information",
      "description": null,
      "iconCss": "background: url('icons/panelingTools.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/panelingtools/version.html"
    },
    {
      "name": "Animation",
      "id": "Animation",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Create a simple animation from a guide curve.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/animation.html"
    },
    {
      "name": "Curvature analysis",
      "id": "Curvature",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Analyzes surface curvature",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/curvatureAnalysis.html"
    },
    {
      "name": "Direction analysis",
      "id": "Direction",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Analyzes the direction of geometry",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/directionAnalysis.html"
    },
    {
      "name": "Slicer",
      "id": "Slicer",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Slice a geometry to get a section",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/slicer.html"
    },
    {
      "name": "Thickness analysis",
      "id": "Thickness",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Analyzes the thickness of a mesh",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/thicknessAnalysis.html"
    },
    {
      "name": "Thickness dynamic",
      "id": "Thk dynamic",
      "library": "Peacock",
      "category": "Analysis",
      "summary": "Measures the thickness manually using points",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/thicknessDynamic.html"
    },
    {
      "name": "Constrain",
      "id": "Constrain",
      "library": "Peacock",
      "category": "Data",
      "summary": "Constrain a number within a domain",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/constrain.html"
    },
    {
      "name": "Dispatch Indices",
      "id": "Dispatch Indices",
      "library": "Peacock",
      "category": "Data",
      "summary": "Dispatch the items of a list into two target list using indices",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/dispatchIndices.html"
    },
    {
      "name": "Insert in Tree",
      "id": "Insert in Tree",
      "library": "Peacock",
      "category": "Data",
      "summary": "Inserts elements in a tree branch",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/insertInTree.html"
    },
    {
      "name": "MapToSum",
      "id": "MapToSum",
      "library": "Peacock",
      "category": "Data",
      "summary": "Remaps a list of values where their sum total is a given value",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/mapToSum.html"
    },
    {
      "name": "NearestNumber",
      "id": "NearestNumber",
      "library": "Peacock",
      "category": "Data",
      "summary": "Find the nearest number under or above a given value comparing it with a list of allowed values",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/nearestNumber.html"
    },
    {
      "name": "Next item",
      "id": "Next item",
      "library": "Peacock",
      "category": "Data",
      "summary": "Shift a list  to operate with the next item",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/nextItem.html"
    },
    {
      "name": "Normalize",
      "id": "Normalize",
      "library": "Peacock",
      "category": "Data",
      "summary": "Normalize a list of numbers",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/normalize.html"
    },
    {
      "name": "Range Arc",
      "id": "Range Arc",
      "library": "Peacock",
      "category": "Data",
      "summary": "Creates a range of numbers in the arc function",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rangeArc.html"
    },
    {
      "name": "Range Gaussian",
      "id": "Range Gaussian",
      "library": "Peacock",
      "category": "Data",
      "summary": "Creates a range of numbers in the Gaussian function",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rangeGaussian.html"
    },
    {
      "name": "Range Random",
      "id": "Range Random",
      "library": "Peacock",
      "category": "Data",
      "summary": "Creates a range of numbers in the Random midpoint displacement algorithm",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rangeRandom.html"
    },
    {
      "name": "Range Sigmoid",
      "id": "Range Sigmoid",
      "library": "Peacock",
      "category": "Data",
      "summary": "Creates a range of numbers in the Sigmoid function.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rangeSigmoid.html"
    },
    {
      "name": "Range Sine",
      "id": "Range Sine",
      "library": "Peacock",
      "category": "Data",
      "summary": "Creates a range of numbers in the composite sine function",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rangeSine.html"
    },
    {
      "name": "Shift paths",
      "id": "Shift paths",
      "library": "Peacock",
      "category": "Data",
      "summary": "Shift -1 in all data tree paths",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/shiftPaths.html"
    },
    {
      "name": "Split domain",
      "id": "Split domain",
      "library": "Peacock",
      "category": "Data",
      "summary": "Split a domain using numbers",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/splitDomain.html"
    },
    {
      "name": "Split domain²",
      "id": "Split domain²",
      "library": "Peacock",
      "category": "Data",
      "summary": "Split an UV domain using numbers",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/splitDomain.html"
    },
    {
      "name": "Symmetry numbers",
      "id": "Symmetry numbers",
      "library": "Peacock",
      "category": "Data",
      "summary": "Create a list of numbers that is symmetrical to another from a given value",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/symmetryNumbers.html"
    },
    {
      "name": "Arm",
      "id": "Arm",
      "library": "Peacock",
      "category": "Display",
      "summary": "Organic model of an arm",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/arm.html"
    },
    {
      "name": "Bust",
      "id": "Bust",
      "library": "Peacock",
      "category": "Display",
      "summary": "Organic model of a bust",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/bust.html"
    },
    {
      "name": "Display sizes",
      "id": "Display sizes",
      "library": "Peacock",
      "category": "Display",
      "summary": "Displays the size of gems",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/displaySizes.html"
    },
    {
      "name": "Ear",
      "id": "Ear",
      "library": "Peacock",
      "category": "Display",
      "summary": "Organic model of an ear",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/ear.html"
    },
    {
      "name": "Finger",
      "id": "Finger",
      "library": "Peacock",
      "category": "Display",
      "summary": "Contains a collection of polygon meshes",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/finger.html"
    },
    {
      "name": "Gem preview",
      "id": "Gem preview",
      "library": "Peacock",
      "category": "Display",
      "summary": "Preview gems choosing the color.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gemPreview.html"
    },
    {
      "name": "Metal preview",
      "id": "Metal preview",
      "library": "Peacock",
      "category": "Display",
      "summary": "Preview metals",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/metalPreview.html"
    },
    {
      "name": "Bezel",
      "id": "Bezel",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a bezel for a gem",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/bezel.html"
    },
    {
      "name": "Brilliant",
      "id": "Brilliant",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a brilliant gem from a circle",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/brilliant.html"
    },
    {
      "name": "Cabuchon studio",
      "id": "Cabuchon",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Creator of cabuchons",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/cabuchonStudio.html"
    },
    {
      "name": "Channel",
      "id": "Channel",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Creates a channel for gems from a curve on a surface<br>",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/channel.html"
    },
    {
      "name": "Channel On Surface",
      "id": "ChannelSrf",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a channel on a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/channelOnSurface.html"
    },
    {
      "name": "Cutter",
      "id": "Cutter",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a cutter on a gem",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/cutter.html"
    },
    {
      "name": "Cutter soft",
      "id": "Cutter soft",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a simple seamless cutter",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/cutterSoft.html"
    },
    {
      "name": "Cutters In Line 0",
      "id": "Cutters In Line 0",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a cutter through a list of gems",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/cuttersInLine0.html"
    },
    {
      "name": "Cutters In Line 1",
      "id": "Cutters In Line 1",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create cross cutters to a line of gems",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/cuttersInLine1.html"
    },
    {
      "name": "Cutters In Line 2",
      "id": "Cutters In Line 2",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create cross cutters between gems",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/cuttersInLine2.html"
    },
    {
      "name": "Gallery rails",
      "id": "Gallery rails",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create gallery rails in a gem",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/galleryRails.html"
    },
    {
      "name": "Gems by 2 curves",
      "id": "Gems2Curves",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create gems between two curves",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gemsBy2Curves.html"
    },
    {
      "name": "Gems by curve",
      "id": "GemsByCurve",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create gems in a rail curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gemsByCurve.html"
    },
    {
      "name": "Gems studio",
      "id": "Gems",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Creator of gems",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gemsStudio.html"
    },
    {
      "name": "Pave random",
      "id": "PaveRnd",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Creates a brilliant cut pave on a surface (Kangaroo 0.99 required)",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/paveRandom.html"
    },
    {
      "name": "Prong simple",
      "id": "Prong simple",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create a simple prong from a plane",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/prongSimple.html"
    },
    {
      "name": "Prongs",
      "id": "Prongs",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create vertical prongs around a gem",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/prongs.html"
    },
    {
      "name": "Prongs along gems rail",
      "id": "Prongs along gems rail",
      "library": "Peacock",
      "category": "Gems",
      "summary": "Create prongs between gems on rail",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/prongsAlongGemsRail.html"
    },
    {
      "name": "Calotte",
      "id": "Calotte",
      "library": "Peacock",
      "category": "Jewelry",
      "summary": "Creates a calotte to pearl",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/calotte.html"
    },
    {
      "name": "Chain",
      "id": "Chain",
      "library": "Peacock",
      "category": "Jewelry",
      "summary": "Creates a chain from a link and guide curves",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/chain.html"
    },
    {
      "name": "Filigree",
      "id": "Filigree",
      "library": "Peacock",
      "category": "Jewelry",
      "summary": "Creates a filigree with guide and profile curves",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/filigree.html"
    },
    {
      "name": "Milgrain",
      "id": "Milgrain",
      "library": "Peacock",
      "category": "Jewelry",
      "summary": "Creates a milgrain with a geometry through a curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/milgrain.html"
    },
    {
      "name": "Pipe Custom",
      "id": "Pipe Custom",
      "library": "Peacock",
      "category": "Jewelry",
      "summary": "Create a pipe with multiple sections",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/pipeCustom.html"
    },
    {
      "name": "Costs",
      "id": "Costs",
      "library": "Peacock",
      "category": "Production",
      "summary": "Calculate the cost of your production<br>You can open the cluster for editing",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/costs.html"
    },
    {
      "name": "genRandom",
      "id": "genRandom",
      "library": "Peacock",
      "category": "Production",
      "summary": "Generates pseudo-random values in a domain and writes on a branch with a path value of the seed",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/genRandom.html"
    },
    {
      "name": "Market price",
      "id": "Market",
      "library": "Peacock",
      "category": "Production",
      "summary": "Daily price of gold, silver, platinum and palladium in euro / gram in the London market (LBMA)",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/marketPrice.html"
    },
    {
      "name": "Organize",
      "id": "Organize",
      "library": "Peacock",
      "category": "Production",
      "summary": "Organize the distribution of geometry in a base rectangle",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/organize.html"
    },
    {
      "name": "Timekeeper",
      "id": "Time",
      "library": "Peacock",
      "category": "Production",
      "summary": "Time counter. Requires Timer component (1 second interval).",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/timekeeper.html"
    },
    {
      "name": "Tree wax",
      "id": "Tree wax",
      "library": "Peacock",
      "category": "Production",
      "summary": "Create a tree and place geometry at the ends of branches",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/treeWax.html"
    },
    {
      "name": "Weight",
      "id": "Weight",
      "library": "Peacock",
      "category": "Production",
      "summary": "Calculates the weight in grams selecting a metal alloy",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/weight.html"
    },
    {
      "name": "Profile 2Arcs",
      "id": "Profile 2Arcs",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/profile2Arcs.html"
    },
    {
      "name": "Profile Gem",
      "id": "Profile Gem",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Extract a gem profile and add useful openings as a cutter",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileGem.html"
    },
    {
      "name": "Profile Grooves",
      "id": "Profile Grooves",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileGrooves.html"
    },
    {
      "name": "Profile HalfRound",
      "id": "Profile HalfRound",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileHalfRound.html"
    },
    {
      "name": "Profile HalfRoundTruncated",
      "id": "Profile HalfRoundTruncated",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileHalfRoundTruncated.html"
    },
    {
      "name": "Profile n-Bezier",
      "id": "Profile n-Bezier",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileNBezier.html"
    },
    {
      "name": "Profile Ovoid",
      "id": "Profile Ovoid",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileOvoid.html"
    },
    {
      "name": "Profile Track",
      "id": "Profile Track",
      "library": "Peacock",
      "category": "Profiles",
      "summary": "Create a profile of track and edges",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/peacock/profileTrack.html"
    },
    {
      "name": "Arm gauge",
      "id": "Arm",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Create half gauge for ring creation",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/armGauge.html"
    },
    {
      "name": "Gauge",
      "id": "Gauge",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Create a circle using a size of a regional system of gauge",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gauge.html"
    },
    {
      "name": "Resize ring",
      "id": "Resize ring",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Adjust the finger size of a ring",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/resizeRing.html"
    },
    {
      "name": "Ring base",
      "id": "Ring base",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Create a basic ring",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/ringBase.html"
    },
    {
      "name": "Ring by curves",
      "id": "Ring curves",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Creates a ring with a frontal and side curves",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/ringByCurves.html"
    },
    {
      "name": "Ring half round",
      "id": "Half Ring",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Creates a half round ring",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/ringHalfRound.html"
    },
    {
      "name": "Ring Profile",
      "id": "Ring Profile",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Create a ring using a profile curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/ringProfile.html"
    },
    {
      "name": "Ring Signet",
      "id": "Ring Signet",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Create a ring with a curve for the signet",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/ringSignet.html"
    },
    {
      "name": "Size to radius",
      "id": "SizeToRadius",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Converts the size of a regional system to his radius.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/sizeToRadius.html"
    },
    {
      "name": "Size to size",
      "id": "SizeToSize",
      "library": "Peacock",
      "category": "Rings",
      "summary": "Converts the size in a regional system to another regional system",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/sizeToSize.html"
    },
    {
      "name": "Brep closest point",
      "id": "BrepCP",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Find the closest point on a brep",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/brepClosestPoint.html"
    },
    {
      "name": "Brep topology",
      "id": "Topology",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Get the complete topology of a brep",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/peacock/brepTopology.html"
    },
    {
      "name": "Cap custom",
      "id": "Cap custom",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Cover a closed curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/capCustom.html"
    },
    {
      "name": "Closest geometry",
      "id": "Closest geometry",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Find the geometry closest to a point",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/closestGeometry.html"
    },
    {
      "name": "Curve array 2d",
      "id": "Curve array 2d",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Create an array 2d of geometry along a curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/curveArray2d.html"
    },
    {
      "name": "Curve Discontinuities",
      "id": "Curve Discontinuities",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Find all discontinuities along a curve above an angle of tolerance",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/peacock/curveDiscontinuities.html"
    },
    {
      "name": "Extend surface",
      "id": "ExtendSrf",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Extend a edge of a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/peacock/extendSurface.html"
    },
    {
      "name": "Extrude from point",
      "id": "ExtFromPt",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Extrude a curve from a point",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/extrudeFromPoint.html"
    },
    {
      "name": "Extrusion both sides",
      "id": "Extrusion both sides",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Extrude a curve or surface in both sides along a vector",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/extrusionBothSides.html"
    },
    {
      "name": "Fillet polyline",
      "id": "Fillet polyline",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Round the corners of a polyline",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/filletPolyline.html"
    },
    {
      "name": "Fit curves",
      "id": "Fit curves",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Match multiple curves by adjusting their direction and seam",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/fitCurves.html"
    },
    {
      "name": "Flip plane",
      "id": "Flip plane",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Flip a plane by reversing the Z axis",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/flipPlane.html"
    },
    {
      "name": "Flow along curve",
      "id": "Flow",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Re-aligns objects from a base curve to a target curve.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/flowAlongCurve.html"
    },
    {
      "name": "Flow along surface",
      "id": "FlowSrf",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Deforms an object from a source surface to a target surface.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/flowAlongSurface.html"
    },
    {
      "name": "Frames",
      "id": "Frames",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Divide a curve into planes oriented from a geometry",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/peacock/frames.html"
    },
    {
      "name": "Grid On Surface",
      "id": "GridOnSrf",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Place a grid on a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/gridOnSurface.html"
    },
    {
      "name": "Hollow thickness",
      "id": "HollowThk",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Subtracts a hollow specifying the thickness",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/peacock/hollowThickness.html"
    },
    {
      "name": "Interpolate frames",
      "id": "Interpolate frames",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Interpolate a collection of frames over a curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/interpolateFrames.html"
    },
    {
      "name": "Interpolate planes",
      "id": "IntPlns",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Interpolate a collection of planes",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/interpolatePlanes.html"
    },
    {
      "name": "IsoCurve",
      "id": "IsoCurve",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Extracts an isocurve from a surface specifying position and direction",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/isoCurve.html"
    },
    {
      "name": "Isotrim",
      "id": "Isotrim",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Extract an isoparametric subset of a surface from the middle of the trim",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/isotrim.html"
    },
    {
      "name": "Like an emboss",
      "id": "Emboss",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Make a embossment on a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/likeAnEmboss.html"
    },
    {
      "name": "Mesh topology",
      "id": "Mesh topology",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Get the complete topology of a mesh",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/peacock/meshTopology.html"
    },
    {
      "name": "Move from geometry",
      "id": "Move from geometry",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Move a collection of points from the nearest projection in a geometry",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/moveFromGeometry.html"
    },
    {
      "name": "Offset On Surface Variable",
      "id": "OffsetOnSrfVariable",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Offset a curve on a surface with variable distances",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/offsetOnSurfaceVariable.html"
    },
    {
      "name": "Offset Variable",
      "id": "Offset Variable",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Offsets a curve with a range of values<br>",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/peacock/offsetVariable.html"
    },
    {
      "name": "Rasterize",
      "id": "Raster",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Rasterize an image transforming black pixels in curve regions",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rasterize.html"
    },
    {
      "name": "Rebuild surface",
      "id": "Rebuild surface",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Rebuild a surface proportionally to its size",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/rebuildSurface.html"
    },
    {
      "name": "Resize",
      "id": "Resize",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Resize a geometry",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/resize.html"
    },
    {
      "name": "Reverse Surface",
      "id": "ReverseSrf",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Reverse parameter's domain of a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/peacock/reverseSurface.html"
    },
    {
      "name": "Seam from point",
      "id": "Seam from point",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Adjust the seam of a closed curve from a point",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/seamFromPoint.html"
    },
    {
      "name": "Shatter Variable",
      "id": "Shatter Variable",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Shatter a curve into segments of given size",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/shatterVariable.html"
    },
    {
      "name": "Shell curve",
      "id": "Shell",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Creates a solid with the interior subtracted from a closed planar curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/peacock/shellCurve.html"
    },
    {
      "name": "Size",
      "id": "Size",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Measures the size of the bounding box of a geometry",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/size.html"
    },
    {
      "name": "Split & mirror",
      "id": "Split&Mirror",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Split and mirror a brep with a plane",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/splitMirror.html"
    },
    {
      "name": "Surface Offset Solid",
      "id": "SrfOffsetSolid",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Offsets a surface creating a closed brep",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/surfaceOffsetSolid.html"
    },
    {
      "name": "Text by curve",
      "id": "Text by curve",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Draw text as surfaces over a rail curve",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/textByCurve.html"
    },
    {
      "name": "Texture",
      "id": "Texture",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Creates a texture with an image on a surface",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/peacock/texture.html"
    },
    {
      "name": "Trim from middle",
      "id": "Trim from middle",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Trim a curve from the middle position of the trim and its length",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/trimFromMiddle.html"
    },
    {
      "name": "Try get circle",
      "id": "Get circle",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Try to convert a curve into a circle",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/tryGetCircle.html"
    },
    {
      "name": "Tween multiple curves",
      "id": "TweenMulti",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Tween between multiple curves",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/tweenMultipleCurves.html"
    },
    {
      "name": "Unroller",
      "id": "Unroller",
      "library": "Peacock",
      "category": "Workbench",
      "summary": "Represents the operation of Rhino's unrolling.",
      "description": null,
      "iconCss": "background: url('icons/peacock.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/peacock/unroller.html"
    },
    {
      "name": "Bezier Curve",
      "id": "BezierCurve",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Quickly creates a Bezier curve from a mesh face",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/bezierCurve.html"
    },
    {
      "name": "Branch",
      "id": "Branch",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Extrude a mesh face controlling their subdivisions",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/branch.html"
    },
    {
      "name": "Explode Mesh",
      "id": "Explode Mesh",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Decompose a mesh into its faces",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/explodeMesh.html"
    },
    {
      "name": "i Fibonacci",
      "id": "iFib",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Returns a Fibonacci number from its index",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/iFibonacci.html"
    },
    {
      "name": "Join Mesh",
      "id": "Join Mesh",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Join & combine several meshes",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/joinMesh.html"
    },
    {
      "name": "Move Face",
      "id": "MoveFace",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Moves and scale a face on normal vector",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/moveFace.html"
    },
    {
      "name": "Move Vertex",
      "id": "MoveVertex",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Move a list of vertices of a mesh",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/moveVertex.html"
    },
    {
      "name": "Offset Mesh",
      "id": "OffsetMesh",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Offsets a mesh",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/offsetMesh.html"
    },
    {
      "name": "Petal",
      "id": "Petal",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Model a petal or a leaf from one face and a curve",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/petal.html"
    },
    {
      "name": "Phyllo Branch",
      "id": "PhylloBranch",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Wrap a curve patterned on phyllotaxis and repositions the beginning on a mesh face",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/phylloBranch.html"
    },
    {
      "name": "Phyllo Cap",
      "id": "PhylloCap",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Forms a PhylloMesh on a naked edge",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/phylloCap.html"
    },
    {
      "name": "Phyllo Machine",
      "id": "PhylloMachine",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Creates a mesh wrapping a curve forming the pattern of phyllotaxis",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/phylloMachine.html"
    },
    {
      "name": "Phyllo Mesh",
      "id": "PhylloMesh",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Wrap a curve to create a mesh whose vertices form the pattern of phyllotaxis",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/phylloMesh.html"
    },
    {
      "name": "Phyllo Surface",
      "id": "PhylloSurf",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Creates a PhylloMesh over a surface from a cylindrical mapping.",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/phylloSurface.html"
    },
    {
      "name": "Ratio Box",
      "id": "RatioBox",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Search proportions visually using boxes",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/ratioBox.html"
    },
    {
      "name": "Rnd Range",
      "id": "RndRange",
      "library": "Phyllomachine",
      "category": "PhylloMachine",
      "summary": "Create a range of random values within a domain with interpolation option",
      "description": null,
      "iconCss": "background: url('icons/phyllomachine.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/phyllomachine/rndRange.html"
    },
    {
      "name": "PX Box",
      "id": "PX Box",
      "library": "PhysX GH",
      "category": "Geometries",
      "summary": "Generate PhysX Box from GH Box",
      "description": null,
      "iconCss": "background: url('icons/physXGH.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/physxgh/pXBox.html"
    },
    {
      "name": "PX CompoConvexMesh",
      "id": "PX CCxMesh",
      "library": "PhysX GH",
      "category": "Geometries",
      "summary": "Input ConvexMesh or PhysX will automatically convert it to convex and the result won't be as expected",
      "description": null,
      "iconCss": "background: url('icons/physXGH.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/physxgh/pXCompoConvexMesh.html"
    },
    {
      "name": "PX ConvexMesh",
      "id": "PX CxMesh",
      "library": "PhysX GH",
      "category": "Geometries",
      "summary": "Input ConvexMesh or PhysX will automatically convert it to convex and the result won't be as expected",
      "description": null,
      "iconCss": "background: url('icons/physXGH.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/physxgh/pXConvexMesh.html"
    },
    {
      "name": "PX Sphere",
      "id": "PX Sphere",
      "library": "PhysX GH",
      "category": "Geometries",
      "summary": "Generate PhysX Shpere like mesh sphere",
      "description": null,
      "iconCss": "background: url('icons/physXGH.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/physxgh/pXSphere.html"
    },
    {
      "name": "PX Material",
      "id": "PX Mat",
      "library": "PhysX GH",
      "category": "Material",
      "summary": "PhysX Material",
      "description": null,
      "iconCss": "background: url('icons/physXGH.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/physxgh/pXMaterial.html"
    },
    {
      "name": "Create Plankton",
      "id": "CreatePlankton",
      "library": "Plankton",
      "category": "MeshTriangulation",
      "summary": "Create a new Plankton halfedge mesh from a Grasshopper Mesh",
      "description": null,
      "iconCss": "background: url('icons/plankton.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/plankton/createPlankton.html"
    },
    {
      "name": "Deconstruct Plankton",
      "id": "DeconstructPlankton",
      "library": "Plankton",
      "category": "MeshTriangulation",
      "summary": "Decompose a plankton mesh into its topology information",
      "description": null,
      "iconCss": "background: url('icons/plankton.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/plankton/deconstructPlankton.html"
    },
    {
      "name": "Plankton From Points",
      "id": "PlanktonFromPoints",
      "library": "Plankton",
      "category": "MeshTriangulation",
      "summary": "Create a new Plankton mesh from an existing Plankton mesh and a list of points",
      "description": null,
      "iconCss": "background: url('icons/plankton.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/plankton/planktonFromPoints.html"
    },
    {
      "name": "Color To Point",
      "id": "Col2Pt",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Convert a color to a point by using the colors RGB values for the points XYZ values.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/colorToPoint.html"
    },
    {
      "name": "Grayscale Color",
      "id": "GrayCol",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Convert a color to grayscale by a variety of common luminosity weighting schemes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/grayscaleColor.html"
    },
    {
      "name": "Invert Color",
      "id": "InvCol",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Invert a color.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/invertColor.html"
    },
    {
      "name": "Mirror Combine Colors",
      "id": "MirComCols",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Mirror a set of colors across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineColors.html"
    },
    {
      "name": "Mirror Cut Colors",
      "id": "MirCutCols",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Cut a set of colors at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutColors.html"
    },
    {
      "name": "Point To Color",
      "id": "Pt2Col",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Convert a point to a color by using the points XYZ values for the colors RGB values.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointToColor.html"
    },
    {
      "name": "Tween Consecutive Colors",
      "id": "TwnConCols",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Tween consecutively between a set of colors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveColors.html"
    },
    {
      "name": "Tween Through Colors",
      "id": "TwnThruCols",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Tween through a set of colors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughColors.html"
    },
    {
      "name": "Tween Two Colors",
      "id": "Twn2Cols",
      "library": "Pufferfish",
      "category": "Color",
      "summary": "Tween between two colors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoColors.html"
    },
    {
      "name": "Align Curve Seams",
      "id": "AliCrvSeams",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Iteratively or non-iteratively align the seams for a set of closed curves starting from the first curve in the set (or optionally from a guide start point) with the option of snapping to corners, if curve is not closed it will output with no change",
      "description": "Iteratively or non-iteratively align the seams for a set of closed curves starting from the first curve in the set (or optionally from a guide start point) with the option of snapping to corners, if curve is not closed it will output with no change.",
      "iconCss": "background: url('icons/pufferfish.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/alignCurveSeams.html"
    },
    {
      "name": "Arc/Circle/Ellipse",
      "id": "ACE",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Get the arc, circle, or ellipse representation of a curve.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/arcCircleEllipse.html"
    },
    {
      "name": "Average Curve",
      "id": "AvrCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Solve the arithmetic average for a set of curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageCurve.html"
    },
    {
      "name": "Close Curve",
      "id": "ClsCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Close an open curve in a variety of ways, if curve is already closed or linear it will output with no change.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/closeCurve.html"
    },
    {
      "name": "Compatibilize Polylines",
      "id": "ComPLines",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Make a set of polylines compatible(equal) in control point count without changing their shapes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/compatibilizePolylines.html"
    },
    {
      "name": "Curve Align Curve Seams",
      "id": "CrvAliCrvSeams",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Align the seams for a set of closed curves along a guide curve with the option of snapping to corners, if curve is not closed it will output with no change.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveAlignCurveSeams.html"
    },
    {
      "name": "Curve Degree",
      "id": "CrvDeg",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Get the degree value of a curve.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveDegree.html"
    },
    {
      "name": "Curve Length At",
      "id": "CrvLenAt",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Get the length along a curve from its start to a point on the curve (or optionally to a parameter on the curve), if point is not on the curve it will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveLengthAt.html"
    },
    {
      "name": "Curve Length Between",
      "id": "CrvLenBtwn",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Get the lengths along a curve between points on the curve (or optionally parameters on the curve), if points are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveLengthBetween.html"
    },
    {
      "name": "Curve Spans",
      "id": "CrvSpans",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Gets the curve sub-domain for each span in a curve and gets information about the spans such as, amount of spans, length of each span, degree of each span, and curve parameters at the span ends.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveSpans.html"
    },
    {
      "name": "Discrete Polyline",
      "id": "DPLine",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Create a polyline made of target vector oriented segments by finding the closest target vector by angle to each vector between the reference vertices.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/discretePolyline.html"
    },
    {
      "name": "Is Arc/Circle/Ellipse",
      "id": "IsACE",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Test if a curve is an arc, circle, or ellipse as defined by Rhino. Curves can be multiple types.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isArcCircleEllipse.html"
    },
    {
      "name": "Is Curve Kinky",
      "id": "CrvKinky",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Test if a curve has kinks, and gets information about the kinks such as, amount of kinks and the length along curve where each kink exists.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isCurveKinky.html"
    },
    {
      "name": "Is Curve Linear",
      "id": "CrvLinr",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Test a curve for linearity.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isCurveLinear.html"
    },
    {
      "name": "Is Curve Segmented",
      "id": "CrvSegs",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Test if a curve has segments, and gets information about the segments such as, amount of segments, length of each segment, and degree of each segment.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isCurveSegmented.html"
    },
    {
      "name": "Mesh Edge Loops",
      "id": "MshEdgLoops",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Extract the egde loop polylines of a quad mesh at a specified mesh vertice index.<br><br><br>-base methods by Mateusz Zwierzycki",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/meshEdgeLoops.html"
    },
    {
      "name": "Mirror Cut Curve",
      "id": "MirCutCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Cut a curve with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutCurve.html"
    },
    {
      "name": "Net On Surface",
      "id": "NetSrf",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Create a net of interpolated curves on a surface.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/netOnSurface.html"
    },
    {
      "name": "Parameter Curve Divide Surface",
      "id": "ParamCrvDivSrf",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Generate a grid of curves on a surface from domain dividing {u} and {v} parameters, or generate a surface isocurve.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterCurveDivideSurface.html"
    },
    {
      "name": "Parameter Surface Grid",
      "id": "ParamSrfGrid",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Generate a grid of rectangular cells on a surface from domain dividing {u} and {v} parameters.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterSurfaceGrid.html"
    },
    {
      "name": "Parameter Surface Isocurve",
      "id": "ParamSrfIso",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Generate an isocurve on a surface from a domain dividing {u} or {v} parameter.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterSurfaceIsocurve.html"
    },
    {
      "name": "Plane Trim Curve",
      "id": "PlnTrimCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Trim (remove) the parts of a curve on one side of a plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/planeTrimCurve.html"
    },
    {
      "name": "Point Fit Rectangle",
      "id": "PtFitRec",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Fit a rectangle through a set of points.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointFitRectangle.html"
    },
    {
      "name": "Points Trim Curve",
      "id": "PtsTrimCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Trim a curve with a set of points (or optionally a set of parameters) like a dash pattern, if points are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointsTrimCurve.html"
    },
    {
      "name": "Rebuild Curve",
      "id": "RebCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Rebuild a curve to a given point count, degree, and domain.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/rebuildCurve.html"
    },
    {
      "name": "Rebuild Curve Segments",
      "id": "RebCrvSegs",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Search a curve for segments at specified degrees and rebuild them to a specified degree and control point count.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/rebuildCurveSegments.html"
    },
    {
      "name": "Remap Curve Domain",
      "id": "ReCrvDom",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Remap a curves {t} domain range to an input domain range with the option of matching the {t} domain range of a guide curve.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/remapCurveDomain.html"
    },
    {
      "name": "Reparameterize Curve",
      "id": "ReparamCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Reparameterize a curve to have a (t) domain range from 0 to 1.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeCurve.html"
    },
    {
      "name": "Seam To Curve Corner",
      "id": "Seam2CrvCorn",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Adjust the seam of a closed curve with corners so that the seam is on the closest corner from the initial seam location (or optionally from a guide point), if curve is not closed or has no corners it will output with no change",
      "description": "Adjust the seam of a closed curve with corners so that the seam is on the closest corner from the initial seam location (or optionally from a guide point), if curve is not closed or has no corners it will output with no change.",
      "iconCss": "background: url('icons/pufferfish.png') -168px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/seamToCurveCorner.html"
    },
    {
      "name": "Slide Curve Along Curve",
      "id": "SlideCrvCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Slide a curve along a guide curve (or optionally along two guide curves).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/slideCurveAlongCurve.html"
    },
    {
      "name": "Superimpose Curve",
      "id": "SuperCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Superimpose the control point count, degree, and domain properties of a reference curve onto a target curve.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/superimposeCurve.html"
    },
    {
      "name": "Tween Consecutive Curves",
      "id": "TwnConCrvs",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween consecutively between a set of curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveCurves.html"
    },
    {
      "name": "Tween Consecutive Curves Along Curve",
      "id": "TwnConCrvsCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween consecutively between a set of curves along a guide curve (or optionally along two guide curves).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveCurvesAlongCurve.html"
    },
    {
      "name": "Tween Consecutive Curves On Surface",
      "id": "TwnConCrvsSrf",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween consecutively between a set of curves on a surface, if curves are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveCurvesOnSurface.html"
    },
    {
      "name": "Tween Through Curves",
      "id": "TwnThruCrvs",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween through a set of curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughCurves.html"
    },
    {
      "name": "Tween Through Curves Along Curve",
      "id": "TwnThruCrvsCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween through a set of curves along a guide curve (or optionally along two guide curves).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughCurvesAlongCurve.html"
    },
    {
      "name": "Tween Through Curves On Surface",
      "id": "TwnThruCrvsSrf",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween through a set of curves on a surface, if curves are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughCurvesOnSurface.html"
    },
    {
      "name": "Tween Two Curves",
      "id": "Twn2Crvs",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween between two curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoCurves.html"
    },
    {
      "name": "Tween Two Curves Along Curve",
      "id": "Twn2CrvsCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween between two curves along a guide curve (or optionally along two guide curves).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoCurvesAlongCurve.html"
    },
    {
      "name": "Tween Two Curves On Surface",
      "id": "Twn2CrvsSrf",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Tween between two curves on a surface, if curves are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoCurvesOnSurface.html"
    },
    {
      "name": "Weighted Average Curve",
      "id": "WavCrv",
      "library": "Pufferfish",
      "category": "Curve",
      "summary": "Solve the arithmetic weighted average for a set of curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageCurve.html"
    },
    {
      "name": "Average Domain",
      "id": "AvrDom",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Solve the arithmetic average for a set of domains.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageDomain.html"
    },
    {
      "name": "Average Domain²",
      "id": "AvrDom²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Solve the arithmetic average for a set of domain²s.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageDomain.html"
    },
    {
      "name": "Mirror Combine Domains",
      "id": "MirComDoms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Mirror a set of domains across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineDomains.html"
    },
    {
      "name": "Mirror Combine Domains²",
      "id": "MirComDoms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Mirror a set of domain²s across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineDomains.html"
    },
    {
      "name": "Mirror Cut Domains",
      "id": "MirCutDoms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Cut a set of domains at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutDomains.html"
    },
    {
      "name": "Mirror Cut Domains²",
      "id": "MirCutDoms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Cut a set of domain²s at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutDomains.html"
    },
    {
      "name": "Reparameterize Domains",
      "id": "ReparamDoms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Reparameterize a set of domains to have a start and end value range from 0 to 1, or an inverted start and end value range from 1 to 0.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeDomains.html"
    },
    {
      "name": "Reparameterize Domains²",
      "id": "ReparamDoms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Reparameterize a set of domain²s to have a start and end value range from 0 to 1 for their {u} and {v} domains, or an inverted start and end value range from 1 to 0.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeDomains.html"
    },
    {
      "name": "Slide Within Domain",
      "id": "SlideInDom",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Slide within the start and end of a domain to get a number in the domain.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/slideWithinDomain.html"
    },
    {
      "name": "Slide Within Domain²",
      "id": "SlideInDom²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Slide within the start and end of a domain² to get a {u} and {v} domain number within the domain².",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/slideWithinDomain.html"
    },
    {
      "name": "Tween Consecutive Domains",
      "id": "TwnConDoms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween consecutively between a set of domains.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveDomains.html"
    },
    {
      "name": "Tween Consecutive Domains²",
      "id": "TwnConDoms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween consecutively between a set of domain²s.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveDomains.html"
    },
    {
      "name": "Tween Through Domains",
      "id": "TwnThruDoms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween through a set of domains.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughDomains.html"
    },
    {
      "name": "Tween Through Domains²",
      "id": "TwnThruDoms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween through a set of domain²s.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughDomains.html"
    },
    {
      "name": "Tween Two Domains",
      "id": "Twn2Doms",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween between two domains.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoDomains.html"
    },
    {
      "name": "Tween Two Domains²",
      "id": "Twn2Doms²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Tween between two domain²s.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoDomains.html"
    },
    {
      "name": "Two Way Domain",
      "id": "2WayDom",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Construct a domain from one number that becomes the negative and positive extents of the domain from zero.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twoWayDomain.html"
    },
    {
      "name": "Two Way Domain²",
      "id": "2WayDom²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Construct a domain² from one {u} number and one {v} number that becomes the negative and positive extents for each direction of the domain² from zero.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twoWayDomain.html"
    },
    {
      "name": "Weighted Average Domain",
      "id": "WavDom",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Solve the weighted arithmetic average for a set of domains.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageDomain.html"
    },
    {
      "name": "Weighted Average Domain²",
      "id": "WavDom²",
      "library": "Pufferfish",
      "category": "Domain",
      "summary": "Solve the weighted arithmetic average for a set of domain²s.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageDomain.html"
    },
    {
      "name": "Dispatch Indices",
      "id": "DispDexs",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Dispatch a list of items into two lists based on a set of indices, those that are at the indices and those which are not",
      "description": "Dispatch a list of items into two lists based on a set of indices, those that are at the indices and those which are not. Items which are at the indices will be ordered based on the input set of indices.",
      "iconCss": "background: url('icons/pufferfish.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/dispatchIndices.html"
    },
    {
      "name": "Last Index",
      "id": "LastDex",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Get the last index of a list (list length -1).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/lastIndex.html"
    },
    {
      "name": "List Indices",
      "id": "ListDexs",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Get a list of the indices from a list of items.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/listIndices.html"
    },
    {
      "name": "Mirror Combine Items",
      "id": "MirComItems",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Mirror a set of list items across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineItems.html"
    },
    {
      "name": "Mirror Cut Items",
      "id": "MirCutItems",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Cut a set of list items at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutItems.html"
    },
    {
      "name": "Sift Indices",
      "id": "SiftDexs",
      "library": "Pufferfish",
      "category": "List",
      "summary": "Sift a list of items into two lists based on a set of indices, those that are at the indices and those which are not",
      "description": "Sift a list of items into two lists based on a set of indices, those that are at the indices and those which are not. Each resulting list will have the same length and order as the input list but will be filled with null placeholders for items that went to the other list.",
      "iconCss": "background: url('icons/pufferfish.png') 0px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/siftIndices.html"
    },
    {
      "name": "Angle Split Mesh",
      "id": "AngSplitMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Split a mesh into separate meshes by measuring an angle tolerance between adjacent mesh face normals, if angle tolerance does not split the mesh it will output with no change",
      "description": "Split a mesh into separate meshes by measuring an angle tolerance between adjacent mesh face normals, if angle tolerance does not split the mesh it will output with no change.<br><br><br>-base methods by Mateusz Zwierzycki",
      "iconCss": "background: url('icons/pufferfish.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/angleSplitMesh.html"
    },
    {
      "name": "Average Mesh",
      "id": "AvrMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Solve the arithmetic average for a set of meshes, meshes must have the same topology.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageMesh.html"
    },
    {
      "name": "Close Mesh",
      "id": "ClsMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Close an open mesh by filling its openings with new mesh faces, if mesh is already closed it will output with no change.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/closeMesh.html"
    },
    {
      "name": "Is Mesh Closed",
      "id": "MshClsd",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Test if a mesh is closed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isMeshClosed.html"
    },
    {
      "name": "Is Mesh Disjoint",
      "id": "MshDisjn",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Test if a mesh has disjoint pieces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isMeshDisjoint.html"
    },
    {
      "name": "Mirror Cut Mesh",
      "id": "MirCutMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Cut a mesh with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutMesh.html"
    },
    {
      "name": "Offset Mesh",
      "id": "OffMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Offset a mesh with the option of offsetting both sides and creating a solid.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/offsetMesh.html"
    },
    {
      "name": "Parameter Extrude Mesh",
      "id": "ParamExtrMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Create an extruded mesh from a profile curve along a vector, curve, or to a point from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with the option of capping closed profile mesh extrusions",
      "description": "Create an extruded mesh from a profile curve along a vector, curve, or to a point from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with the option of capping closed profile mesh extrusions.<br><br><br>-base methods by Mateusz Zwierzycki",
      "iconCss": "background: url('icons/pufferfish.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterExtrudeMesh.html"
    },
    {
      "name": "Parameter Loft Mesh",
      "id": "ParamLoftMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Create a lofted mesh through a set of section curves from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with optional start and end points to loft to",
      "description": "Create a lofted mesh through a set of section curves from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with optional start and end points to loft to.<br><br><br>-base methods by Mateusz Zwierzycki",
      "iconCss": "background: url('icons/pufferfish.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterLoftMesh.html"
    },
    {
      "name": "Parameter Pipe Mesh",
      "id": "ParamPipeMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Create a piped mesh along a curve from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with various end types",
      "description": "Create a piped mesh along a curve from domain dividing {u} and {v} parameters, or by lengths between control points, or by angle accuracy, with various end types.<br><br><br>-base methods by Mateusz Zwierzycki",
      "iconCss": "background: url('icons/pufferfish.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPipeMesh.html"
    },
    {
      "name": "Parameter Surface Mesh",
      "id": "ParamSrfMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Generate a mesh on a surface from domain dividing {u} and {v} parameters.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterSurfaceMesh.html"
    },
    {
      "name": "Plane Trim Mesh",
      "id": "PlnTrimMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Trim (remove) the parts of a mesh on one side of a plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/planeTrimMesh.html"
    },
    {
      "name": "Polyline To Mesh",
      "id": "PLine2Msh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Create a mesh from a closed or open polyline boundary.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/polylineToMesh.html"
    },
    {
      "name": "Rebuild Mesh",
      "id": "RebMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Rebuild a mesh with options for recomputing normals, removing unused faces and vertices, combining duplicate vertices, unifying normals, flipping normals, and welding vertices within proximity of eachother",
      "description": "Rebuild a mesh with options for recomputing normals, removing unused faces and vertices, combining duplicate vertices, unifying normals, flipping normals, and welding vertices within proximity of eachother.",
      "iconCss": "background: url('icons/pufferfish.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/rebuildMesh.html"
    },
    {
      "name": "Recursive Morph Mesh",
      "id": "ReMorphMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Recursively morph mesh geometries onto mesh faces starting from morphing onto a base mesh, the resulting mesh of each recursive morphing step becomes the new base mesh for the next steps mesh geometry to morph onto its faces",
      "description": "Recursively morph mesh geometries onto mesh faces starting from morphing onto a base mesh, the resulting mesh of each recursive morphing step becomes the new base mesh for the next steps mesh geometry to morph onto its faces.",
      "iconCss": "background: url('icons/pufferfish.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/recursiveMorphMesh.html"
    },
    {
      "name": "Reduce Mesh",
      "id": "ReduMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Reduce the face count of a mesh to a target amount (look at Rhino command line to see progress % of operation).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reduceMesh.html"
    },
    {
      "name": "Tween Consecutive Meshes",
      "id": "TwnConMshs",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Tween consecutively between a set of meshes, meshes must have the same topology.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveMeshes.html"
    },
    {
      "name": "Tween Through Meshes",
      "id": "TwnThruMshs",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Tween through a set of meshes, meshes must have the same topology.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughMeshes.html"
    },
    {
      "name": "Tween Two Meshes",
      "id": "Twn2Mshs",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Tween between two meshes, meshes must have the same topology.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoMeshes.html"
    },
    {
      "name": "Weighted Average Mesh",
      "id": "WavMsh",
      "library": "Pufferfish",
      "category": "Mesh",
      "summary": "Solve the arithmetic weighted average for a set of meshes, meshes must have the same topology.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageMesh.html"
    },
    {
      "name": "Curve Graph Mapper",
      "id": "CrvGraphMap",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Remap values with a custom graph using input curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveGraphMapper.html"
    },
    {
      "name": "Deconstruct Number",
      "id": "DeNum",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Deconstruct a number into its whole integer and decimal remainder.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/deconstructNumber.html"
    },
    {
      "name": "Default Angle Tolerance",
      "id": "DefAt",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Outputs the RhinoMath default angle tolerance value (1 deg | 0.017453 rad ).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/defaultAngleTolerance.html"
    },
    {
      "name": "Document Angle Tolerance",
      "id": "DocAt",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Outputs the Rhino documents angle tolerance value (Document Properties > Units > Model > Angle tolerance).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/documentAngleTolerance.html"
    },
    {
      "name": "Document Distance Tolerance",
      "id": "DocDt",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Outputs the Rhino documents absolute distance tolerance value (Document Properties > Units > Model > Absolute tolerance).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/documentDistanceTolerance.html"
    },
    {
      "name": "Highest & Lowest Numbers",
      "id": "HiLoNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Get the highest and lowest values from a set of numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/highestLowestNumbers.html"
    },
    {
      "name": "Invert Boolean",
      "id": "InvBool",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Invert a boolean by making a true boolean false or a false boolean true.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/invertBoolean.html"
    },
    {
      "name": "Last Index Range",
      "id": "LastRange",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Create a range of numbers between 0 and the last index of a list (list length -1).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/lastIndexRange.html"
    },
    {
      "name": "List Length Range",
      "id": "LengRange",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Create a range of numbers between 0 and the length of a list.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/listLengthRange.html"
    },
    {
      "name": "Mass Division",
      "id": "MDiv",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Perform mass division on a set of numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/massDivision.html"
    },
    {
      "name": "Mass Subtraction",
      "id": "MSub",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Perform mass subtraction on a set of numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/massSubtraction.html"
    },
    {
      "name": "Mirror Combine Numbers",
      "id": "MirComNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Mirror a set of numbers across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineNumbers.html"
    },
    {
      "name": "Mirror Cut Numbers",
      "id": "MirCutNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Cut a set of numbers at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutNumbers.html"
    },
    {
      "name": "Partition Number",
      "id": "PartNum",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Partition a number as equally as possible by a specified amount of divisions.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/partitionNumber.html"
    },
    {
      "name": "Percentage",
      "id": "Pcent",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Calculate the percentage of a number.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/percentage.html"
    },
    {
      "name": "Reparameterize Numbers",
      "id": "ReparamNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Reparameterize a set of numbers to have a domain range from 0 to 1, or an inverted domain range from 1 to 0.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeNumbers.html"
    },
    {
      "name": "Reparameterized Range",
      "id": "RepaRange",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Create a range of numbers between 0 and 1.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizedRange.html"
    },
    {
      "name": "Round To Decimal Place",
      "id": "RoundD",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Round a number to a decimal place or truncate a number at a decimal place.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/roundToDecimalPlace.html"
    },
    {
      "name": "Round To Factor",
      "id": "RoundF",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Round a number to a multiplication factor.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/roundToFactor.html"
    },
    {
      "name": "Round To Nearest",
      "id": "RoundN",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Round numbers in x to the nearest numbers in y with the option of remapping number set x to the domain bounds of number set y.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/roundToNearest.html"
    },
    {
      "name": "Tween Consecutive Numbers",
      "id": "TwnConNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Tween consecutively between a set of numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveNumbers.html"
    },
    {
      "name": "Tween Through Numbers",
      "id": "TwnThruNums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Tween through a set of numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughNumbers.html"
    },
    {
      "name": "Tween Two Numbers",
      "id": "Twn2Nums",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Tween between two numbers.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoNumbers.html"
    },
    {
      "name": "X Minus One",
      "id": "x-1",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Subtract one from x.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/xMinusOne.html"
    },
    {
      "name": "X Plus One",
      "id": "x+1",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Add one to x.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/xPlusOne.html"
    },
    {
      "name": "Zero Distance Tolerance",
      "id": "ZerDt",
      "library": "Pufferfish",
      "category": "Number",
      "summary": "Outputs the RhinoMath zero distance tolerance value (1.0e-12).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/zeroDistanceTolerance.html"
    },
    {
      "name": "Average Plane",
      "id": "AvrPln",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Solve the arithmetic average for a set of planes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averagePlane.html"
    },
    {
      "name": "Closest Plane Orientation",
      "id": "CPlnOri",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Find the closest target plane by axis or axes orientation to a reference plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/closestPlaneOrientation.html"
    },
    {
      "name": "Flip Plane",
      "id": "FlipPln",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Flip a plane by specified axes with the option of using a guide plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/flipPlane.html"
    },
    {
      "name": "Mirror Cut Planes",
      "id": "MirCutPlns",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Cut a set of planes with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutPlanes.html"
    },
    {
      "name": "Offset Plane",
      "id": "OffPln",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Offset a plane by specified axes with the option of offsetting both sides.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/offsetPlane.html"
    },
    {
      "name": "Parameter Plane Divide Surface",
      "id": "ParamPlnDivSrf",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Generate a grid of surface normal oriented planes on a surface from domain dividing {u} and {v} parameters.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPlaneDivideSurface.html"
    },
    {
      "name": "Parameter Plane In Rectangle",
      "id": "ParamPlnInRec",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Locate a rectangle normal oriented plane in a rectangle from a domain dividing {x} and {y} parameter.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPlaneInRectangle.html"
    },
    {
      "name": "Parameter Plane On Surface",
      "id": "ParamPlnOnSrf",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Locate a surface normal oriented plane on a surface from a domain dividing {u} and {v} parameter.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPlaneOnSurface.html"
    },
    {
      "name": "Plane Trim Planes",
      "id": "PlnTrimPlns",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Trim (remove) the parts of a plane set on one side of a plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/planeTrimPlanes.html"
    },
    {
      "name": "Tween Consecutive Planes",
      "id": "TwnConPlns",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween consecutively between a set of planes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePlanes.html"
    },
    {
      "name": "Tween Consecutive Planes On Curve",
      "id": "TwnConPlnsCrv",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween consecutively between a set of planes on a curve, if plane origins are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePlanesOnCurve.html"
    },
    {
      "name": "Tween Consecutive Planes On Surface",
      "id": "TwnConPlnsSrf",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween consecutively between a set of planes on a surface, if plane origins are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePlanesOnSurface.html"
    },
    {
      "name": "Tween Through Planes",
      "id": "TwnThruPlns",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween through a set of planes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPlanes.html"
    },
    {
      "name": "Tween Through Planes On Curve",
      "id": "TwnThruPlnsCrv",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween through a set of planes on a curve, if plane origins are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPlanesOnCurve.html"
    },
    {
      "name": "Tween Through Planes On Surface",
      "id": "TwnThruPlnsSrf",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween through a set of planes on a surface, if plane origins are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPlanesOnSurface.html"
    },
    {
      "name": "Tween Two Planes",
      "id": "Twn2Plns",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween between two planes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPlanes.html"
    },
    {
      "name": "Tween Two Planes On Curve",
      "id": "Twn2PlnsCrv",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween between two planes on a curve, if plane origins are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPlanesOnCurve.html"
    },
    {
      "name": "Tween Two Planes On Surface",
      "id": "Twn2PlnsSrf",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Tween between two planes on a surface, if plane origins are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPlanesOnSurface.html"
    },
    {
      "name": "Weighted Average Plane",
      "id": "WavPln",
      "library": "Pufferfish",
      "category": "Plane",
      "summary": "Solve the arithmetic weighted average for a set of planes.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAveragePlane.html"
    },
    {
      "name": "Are Points Collinear",
      "id": "PtsCoLinr",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Test a set of points for collinearity.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/arePointsCollinear.html"
    },
    {
      "name": "Are Points Coplanar",
      "id": "PtsCoPlnr",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Test a set of points for coplanarity.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/arePointsCoplanar.html"
    },
    {
      "name": "Curve Edit Points",
      "id": "CrvEditPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Extract the edit points on a curve at knot averages, the points an interpolated curve interpolated through.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveEditPoints.html"
    },
    {
      "name": "Curve Middle Point",
      "id": "CrvMidPt",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Get the point at the middle of a curves length or domain.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/pufferfish/curveMiddlePoint.html"
    },
    {
      "name": "Map Point To Surface",
      "id": "MapPt2Srf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Map point to a target surface space from its location relative to a source surface space.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mapPointToSurface.html"
    },
    {
      "name": "Mirror Cut Points",
      "id": "MirCutPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Cut a set of points with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutPoints.html"
    },
    {
      "name": "Parameter Point Divide Surface",
      "id": "ParamPtDivSrf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Generate a grid of points on a surface from domain dividing {u} and {v} parameters.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPointDivideSurface.html"
    },
    {
      "name": "Parameter Point In Rectangle",
      "id": "ParamPtInRec",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Locate a point in a rectangle from a domain dividing {x} and {y} parameter.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPointInRectangle.html"
    },
    {
      "name": "Parameter Point On Surface",
      "id": "ParamPtOnSrf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Locate a point on a surface from a domain dividing {u} and {v} parameter.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterPointOnSurface.html"
    },
    {
      "name": "Pinch'n'Spread",
      "id": "P'n'S",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Pinch & spread a set of points by radius and strength values at each location point. Positive strengths pinch, negative strengths spread.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pinchnSpread.html"
    },
    {
      "name": "Plane Trim Points",
      "id": "PlnTrimPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Trim (remove) the parts of a point set on one side of a plane.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/planeTrimPoints.html"
    },
    {
      "name": "Point Divide Curve Segments",
      "id": "PtDivCrvSegs",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Divide each segment of a curve into equal lengths.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointDivideCurveSegments.html"
    },
    {
      "name": "Point Divide Curve Target Length",
      "id": "PtDivCrvTarg",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Divide a curve into equal lengths that are as close as possible to a target length.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointDivideCurveTargetLength.html"
    },
    {
      "name": "Point Mesh Side",
      "id": "PtMshSide",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Find on which side of a mesh a point exists.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointMeshSide.html"
    },
    {
      "name": "Point Plane Side",
      "id": "PtPlnSide",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Find on which side of a plane a point exists.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointPlaneSide.html"
    },
    {
      "name": "Point Surface Edge",
      "id": "PtSrfEdge",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Find the surface edge which is closest to a point.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointSurfaceEdge.html"
    },
    {
      "name": "Point Surface Side",
      "id": "PtSrfSide",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Find on which side of a surface a point exists.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/pufferfish/pointSurfaceSide.html"
    },
    {
      "name": "Reparameterize Points",
      "id": "ReparamPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Reparameterize a set of points to have {x}, {y}, {z} coordinates which range from 0 to 1, or an inverted coordinate range from 1 to 0.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizePoints.html"
    },
    {
      "name": "Surface Edit Points",
      "id": "SrfEditPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Extract the edit points on a surface at knot averages, the points an interpolated surface interpolated through.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/surfaceEditPoints.html"
    },
    {
      "name": "Tween Consecutive Points",
      "id": "TwnConPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween consecutively between a set of points.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePoints.html"
    },
    {
      "name": "Tween Consecutive Points On Curve",
      "id": "TwnConPtsCrv",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween consecutively between a set of points on a curve, if points are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePointsOnCurve.html"
    },
    {
      "name": "Tween Consecutive Points On Surface",
      "id": "TwnConPtsSrf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween consecutively between a set of points on a surface, if points are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutivePointsOnSurface.html"
    },
    {
      "name": "Tween Through Points",
      "id": "TwnThruPts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween through a set of points.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPoints.html"
    },
    {
      "name": "Tween Through Points On Curve",
      "id": "TwnThruPtsCrv",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween through a set of points on a curve, if points are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -408px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPointsOnCurve.html"
    },
    {
      "name": "Tween Through Points On Surface",
      "id": "TwnThruPtsSrf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween through a set of points on a surface, if points are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughPointsOnSurface.html"
    },
    {
      "name": "Tween Two Points",
      "id": "Twn2Pts",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween between two points.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPoints.html"
    },
    {
      "name": "Tween Two Points On Curve",
      "id": "Twn2PtsCrv",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween between two points on a curve, if points are not on the curve they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPointsOnCurve.html"
    },
    {
      "name": "Tween Two Points On Surface",
      "id": "Twn2PtsSrf",
      "library": "Pufferfish",
      "category": "Point",
      "summary": "Tween between two points on a surface, if points are not on the surface they will be pulled to it.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoPointsOnSurface.html"
    },
    {
      "name": "Average SubD",
      "id": "AvrSubD",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Solve the arithmetic average for a set of SubDs, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageSubD.html"
    },
    {
      "name": "Tween Consecutive SubDs",
      "id": "TwnConSubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Tween consecutively between a set of SubDs, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveSubDs.html"
    },
    {
      "name": "Tween Through SubDs",
      "id": "TwnThruSubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Tween through a set of SubDs, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughSubDs.html"
    },
    {
      "name": "Tween Two SubDs",
      "id": "Twn2SubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Tween between two SubDs, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoSubDs.html"
    },
    {
      "name": "Twisted Box Consecutive SubDs",
      "id": "TBoxConSubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Create a layered array of connected twisted boxes consecutively between a set of SubDs from the faces, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twistedBoxConsecutiveSubDs.html"
    },
    {
      "name": "Twisted Box SubD",
      "id": "TBoxSubD",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Create a layered array of connected twisted boxes on a SubD from the faces and a parameter domain divided thickness.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twistedBoxSubD.html"
    },
    {
      "name": "Twisted Box Through SubDs",
      "id": "TBoxThruSubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Create a layered array of connected twisted boxes through a set of SubDs from the faces, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twistedBoxThroughSubDs.html"
    },
    {
      "name": "Twisted Box Two SubDs",
      "id": "TBox2SubDs",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Create a layered array of connected twisted boxes between SubDs from the faces, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/twistedBoxTwoSubDs.html"
    },
    {
      "name": "Weighted Average SubD",
      "id": "WavSubD",
      "library": "Pufferfish",
      "category": "SubD",
      "summary": "Solve the arithmetic weighted average for a set of SubDs, SubDs must have the same topology.<br><br>(*Rhino 7 WIP only)",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -528px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageSubD.html"
    },
    {
      "name": "Automatic Edge Surface",
      "id": "AutoEdgSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create a surface between 2, 3, or 4 auto sorted edge curves.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/automaticEdgeSurface.html"
    },
    {
      "name": "Automatic Network Surface",
      "id": "AutoNetSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create a surface from an auto sorted curve network.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/pufferfish/automaticNetworkSurface.html"
    },
    {
      "name": "Average Surface",
      "id": "AvrSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Solve the arithmetic average for a set of surfaces, trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/averageSurface.html"
    },
    {
      "name": "Extrude Tapered Polysurface",
      "id": "ExtrTaper",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Extrude a profile with a taper from draft angle.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/extrudeTaperedPolysurface.html"
    },
    {
      "name": "Flip Polysurface",
      "id": "FlipPsrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Flip the normals of a polysurface (Brep), closed polysurfaces (Breps) cannot be flipped and will output with no change.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/pufferfish/flipPolysurface.html"
    },
    {
      "name": "Is Polysurface Closed",
      "id": "PsrfClsd",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Test if a polysurface (Brep) is closed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isPolysurfaceClosed.html"
    },
    {
      "name": "Is Surface Closed",
      "id": "SrfClsd",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Test if a surface is closed and if its edges are closed in the {u} or {v} directions.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isSurfaceClosed.html"
    },
    {
      "name": "Is Surface Collapsed",
      "id": "SrfCollapsed",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Test if a surface has edges collapsed to a point (singularities).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isSurfaceCollapsed.html"
    },
    {
      "name": "Is Surface Trimmed",
      "id": "SrfTrimd",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Test if a surface is trimmed, can also test a polysurface (Brep) for trimmed faces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/pufferfish/isSurfaceTrimmed.html"
    },
    {
      "name": "Mesh To Polysurface",
      "id": "Msh2Psrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Convert a mesh into a nurbs polysurface (Brep).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/meshToPolysurface.html"
    },
    {
      "name": "Mirror Cut Polysurface",
      "id": "MirCutPsrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Cut a polysurface(Brep) with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side. Can also mirror cut surfaces",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutPolysurface.html"
    },
    {
      "name": "Mirror Cut Surface",
      "id": "MirCutSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Cut a surface with a plane, mirror the kept side of the cut across a mirror plane, and combine it with the kept side (for trimmed surfaces use Mirror Cut Polysurface).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutSurface.html"
    },
    {
      "name": "Offset Surface",
      "id": "OffSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Offset a surface with the option of offsetting both sides and creating a solid, also works with trimmed surfaces and polysurface (Brep) faces as separated offsets.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/offsetSurface.html"
    },
    {
      "name": "Parameter Subdivide Surface",
      "id": "ParamSubDivSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Generate a grid of subdivision surfaces on a surface from domain dividing {u} and {v} parameters.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/pufferfish/parameterSubdivideSurface.html"
    },
    {
      "name": "Plane Trim Surface",
      "id": "PlnTrimSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Trim (remove) the parts of a surface on one side of a plane, also works with trimmed surfaces and polysurfaces (Breps).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/pufferfish/planeTrimSurface.html"
    },
    {
      "name": "Rebuild Surface",
      "id": "RebSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Rebuild a surface to a given point count, degree, and domain in the {u} and {v} directions, also works with trimmed surfaces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/rebuildSurface.html"
    },
    {
      "name": "Remap Surface Domain²",
      "id": "ReSrfDom²",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Remap a surfaces {uv} domain² range to an input domain² range with the option of matching the {uv} domain² range of a guide surface, also works with trimmed surfaces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/remapSurfaceDomain.html"
    },
    {
      "name": "Reparameterize Surface",
      "id": "ReparamSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Reparameterize a surface to have a (uv) domain² range from 0 to 1, also works with trimmed surfaces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeSurface.html"
    },
    {
      "name": "Shell Polysurface",
      "id": "ShellPsrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Creates a hallowed out thickened shell from a closed polysurface (Brep).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/shellPolysurface.html"
    },
    {
      "name": "Shrink Trimmed Surface",
      "id": "ShrinkTrimSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Shrinks the underlying untrimmed surface of a trimmed surface to be as close as possible to the trimmed surface edges, can also shrink trimmed polysurface (Brep) faces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/shrinkTrimmedSurface.html"
    },
    {
      "name": "Split Kinky Surface",
      "id": "SplitKinkySrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Split the output surface from an unsplit surface component into a polysurface(Brep) if it has kinks, if surface has no kinks it will output with no change.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/splitKinkySurface.html"
    },
    {
      "name": "Superimpose Surface",
      "id": "SuperSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Superimpose the {uv} control point count, {uv} degree, {uv} domain, and trims of a reference surface onto a target surface, also works with trimmed surfaces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/superimposeSurface.html"
    },
    {
      "name": "Surface Degree",
      "id": "SrfDeg",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Get the degree value of a surface for its {u} and {v} directions.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/surfaceDegree.html"
    },
    {
      "name": "Surface Spans",
      "id": "Srfpans",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Gets the surface sub-domain²s for each span in a surface and gets information about the spans such as, sub-domains of each span, amount of spans in each direction, lengths of each span, degrees of each span, isocurve span parameters, and surface parameter coordinates at the span ends",
      "description": "Gets the surface sub-domain²s for each span in a surface and gets information about the spans such as, sub-domains of each span, amount of spans in each direction, lengths of each span, degrees of each span, isocurve span parameters, and surface parameter coordinates at the span ends.",
      "iconCss": "background: url('icons/pufferfish.png') -216px -336px",
      "helpLink": "https://rhino.github.io/components/pufferfish/surfaceSpans.html"
    },
    {
      "name": "Swap Surface Directions",
      "id": "SwapSrfDir",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Swap or reverse the {u} and {v} directions of a surface, also works with trimmed surfaces but trims will swap as well.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -360px",
      "helpLink": "https://rhino.github.io/components/pufferfish/swapSurfaceDirections.html"
    },
    {
      "name": "Tween Consecutive Surfaces",
      "id": "TwnConSrfs",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Tween consecutively between a set of surfaces, trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveSurfaces.html"
    },
    {
      "name": "Tween Through Surfaces",
      "id": "TwnThruSrfs",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Tween through a set of surfaces, trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -24px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughSurfaces.html"
    },
    {
      "name": "Tween Two Surfaces",
      "id": "Twn2Srfs",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Tween between two surfaces, trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoSurfaces.html"
    },
    {
      "name": "Tween Two Surfaces Along Curve",
      "id": "Twn2SrfsCrv",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Tween between two surfaces along a guide curve (or optionally along two guide curves), trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoSurfacesAlongCurve.html"
    },
    {
      "name": "Unroll Polysurface",
      "id": "UnrollPsrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Unroll a polysurface (Brep) so its faces lay flat on a plane, with the options to unroll points and curves along with the polysurface (Brep) faces.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unrollPolysurface.html"
    },
    {
      "name": "Unsplit Edge Surface",
      "id": "UnsplitEdge",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed edge surface between 2, 3, or 4 edge curves which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitEdgeSurface.html"
    },
    {
      "name": "Unsplit Extrude Surface",
      "id": "UnsplitExtr",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed extruded surface from a profile curve or surface along a vector, curve, or to a point, which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitExtrudeSurface.html"
    },
    {
      "name": "Unsplit Loft Surface",
      "id": "UnsplitLoft",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed lofted surface through a set of section curves or surfaces which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitLoftSurface.html"
    },
    {
      "name": "Unsplit Rail Revolve Surface",
      "id": "UnsplitRailRev",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed revolved surface from a profile curve or surface guided by a rail curve around an axis line which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitRailRevolveSurface.html"
    },
    {
      "name": "Unsplit Sum Surface",
      "id": "UnsplitSum",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed sum surface from two edge curves which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitSumSurface.html"
    },
    {
      "name": "Unsplit Sweep Surface",
      "id": "UnsplitSwp",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Create an untrimmed swept surface through a set of section curves or surfaces along a rail curve (or optionally along two rail curves) which doesn't split into a polysurface(Brep) at kinks.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -480px",
      "helpLink": "https://rhino.github.io/components/pufferfish/unsplitSweepSurface.html"
    },
    {
      "name": "Weighted Average Surface",
      "id": "WavSrf",
      "library": "Pufferfish",
      "category": "Surface",
      "summary": "Solve the arithmetic weighted average for a set of surfaces, trimmed surfaces will be treated as untrimmed.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -96px -504px",
      "helpLink": "https://rhino.github.io/components/pufferfish/weightedAverageSurface.html"
    },
    {
      "name": "Mass Transform",
      "id": "MTrans",
      "library": "Pufferfish",
      "category": "Transform",
      "summary": "Create a single mass transform by compounding a set of transforms, like Grasshopper's Compound component but with access to partial results (each step of the mass transformation).",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/pufferfish/massTransform.html"
    },
    {
      "name": "Mirror Combine Transforms",
      "id": "MirComTrans",
      "library": "Pufferfish",
      "category": "Transform",
      "summary": "Mirror a set of transforms across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineTransforms.html"
    },
    {
      "name": "Mirror Cut Transforms",
      "id": "MirCutTrans",
      "library": "Pufferfish",
      "category": "Transform",
      "summary": "Cut a set of transforms at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutTransforms.html"
    },
    {
      "name": "Move To Point",
      "id": "Move2Pt",
      "library": "Pufferfish",
      "category": "Transform",
      "summary": "Move (translate) an object from one point to another.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/pufferfish/moveToPoint.html"
    },
    {
      "name": "Recursive Transform",
      "id": "ReTrans",
      "library": "Pufferfish",
      "category": "Transform",
      "summary": "Recursively transform geometry to get a self-referential step sequence of transformed geometry.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/pufferfish/recursiveTransform.html"
    },
    {
      "name": "Closest Vector",
      "id": "CVec",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Find the closest target vector by angle to a reference vector.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/pufferfish/closestVector.html"
    },
    {
      "name": "Mirror Combine Vectors",
      "id": "MirComVecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Mirror a set of vectors across its end or start and combine it with the original set.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCombineVectors.html"
    },
    {
      "name": "Mirror Cut Vectors",
      "id": "MirCutVecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Cut a set of vectors at an index, mirror the kept side of the cut across the index, and combine it with the kept side.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/pufferfish/mirrorCutVectors.html"
    },
    {
      "name": "Reparameterize Vectors",
      "id": "ReparamVecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Reparameterize a set of vectors to have a length (amplitude) range from 0 to 1, or an inverted length range from 1 to 0.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/pufferfish/reparameterizeVectors.html"
    },
    {
      "name": "Tween Consecutive Vectors",
      "id": "TwnConVecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Tween consecutively between a set of vectors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -144px -384px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenConsecutiveVectors.html"
    },
    {
      "name": "Tween Through Vectors",
      "id": "TwnThruVecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Tween through a set of vectors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -48px -432px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenThroughVectors.html"
    },
    {
      "name": "Tween Two Vectors",
      "id": "Twn2Vecs",
      "library": "Pufferfish",
      "category": "Vector",
      "summary": "Tween between two vectors.",
      "description": null,
      "iconCss": "background: url('icons/pufferfish.png') -216px -456px",
      "helpLink": "https://rhino.github.io/components/pufferfish/tweenTwoVectors.html"
    },
    {
      "name": "Disassemble Pareto Solution",
      "id": "DisassPareto",
      "library": "Reindeer",
      "category": "Optimization",
      "summary": "Description",
      "description": null,
      "iconCss": "background: url('icons/reindeer.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/reindeer/disassembleParetoSolution.html"
    },
    {
      "name": "Genetic Algorithm Optimization",
      "id": "GA",
      "library": "Reindeer",
      "category": "Optimization",
      "summary": "Component that performs single-objective optimization using genetic algorithm",
      "description": null,
      "iconCss": "background: url('icons/reindeer.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/reindeer/geneticAlgorithmOptimization.html"
    },
    {
      "name": "Parallel Coordinates Viewer",
      "id": "ParaCoorView",
      "library": "Reindeer",
      "category": "Optimization",
      "summary": "ParallelCoordinatesViewer",
      "description": null,
      "iconCss": "background: url('icons/reindeer.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/reindeer/parallelCoordinatesViewer.html"
    },
    {
      "name": "Particle Swarm Optimization",
      "id": "PSO",
      "library": "Reindeer",
      "category": "Optimization",
      "summary": "Component for multi-objective optimization with particle swarm optimization",
      "description": null,
      "iconCss": "background: url('icons/reindeer.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/reindeer/particleSwarmOptimization.html"
    },
    {
      "name": "Brep Topology Edge",
      "id": "Brep Topo Edge",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the edge topology of a Brep",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/brepTopologyEdge.html"
    },
    {
      "name": "Brep Topology Edge Filter",
      "id": "Brep Topo Edge Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the edges of a brep based on their valency",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/brepTopologyEdgeFilter.html"
    },
    {
      "name": "Brep Topology Vertex",
      "id": "Brep Topo Vertex",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the vertex topology of a Brep",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/brepTopologyVertex.html"
    },
    {
      "name": "Brep Topology Vertex Filter",
      "id": "Brep Topo Vertex Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the vertices of a brep based on their connectivity",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/brepTopologyVertexFilter.html"
    },
    {
      "name": "Line Topology",
      "id": "Line Topo",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the topology of a network consisting of lines",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/lineTopology.html"
    },
    {
      "name": "Line Topology Filter",
      "id": "Line Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filters a network of lines based on connectivity",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/lineTopologyFilter.html"
    },
    {
      "name": "Mesh Topology Edge",
      "id": "Mesh Topo Edge",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the edge topology of a Mesh",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/meshTopologyEdge.html"
    },
    {
      "name": "Mesh Topology Edge Filter",
      "id": "Mesh Topo Edge Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the edges of a mesh based on their valency",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/meshTopologyEdgeFilter.html"
    },
    {
      "name": "Mesh Topology Vertex",
      "id": "Mesh Topo Vertex",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the vertex topology of a Mesh",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/meshTopologyVertex.html"
    },
    {
      "name": "Mesh Topology Vertex Filter",
      "id": "Mesh Topo Vertex Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the vertices of a mesh based on their connectivity",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/meshTopologyVertexFilter.html"
    },
    {
      "name": "Polygon Topology Edge",
      "id": "Poly Topo Edge",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the edge topology of a curve network consisting of closed polylines",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/polygonTopologyEdge.html"
    },
    {
      "name": "Polygon Topology Edge Filter",
      "id": "Poly Topo Edge Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the edges in a polygon network based on their valency",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/polygonTopologyEdgeFilter.html"
    },
    {
      "name": "Polygon Topology Point",
      "id": "Poly Topo Point",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Analyses the point topology of a network consisting of closed polylines",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/polygonTopologyPoint.html"
    },
    {
      "name": "Polygon Topology Point Filter",
      "id": "Poly Topo Point Filter",
      "library": "Sandbox Topology",
      "category": "Topology",
      "summary": "Filter the points in a polygon network based on their connectivity",
      "description": null,
      "iconCss": "background: url('icons/sandboxTopology.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/sandboxtopology/polygonTopologyPointFilter.html"
    },
    {
      "name": "Dynamo Db Input",
      "id": "SDDynamoDbInput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​​Inputs",
      "summary": "Input JSON data from an AWS DynamoDB table.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/dynamoDbInput.html"
    },
    {
      "name": "Geometry Input",
      "id": "SDGeometryInput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​​Inputs",
      "summary": "Defines a geometry file input for ShapeDiver's viewer, double click to change settings.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/geometryInput.html"
    },
    {
      "name": "Text Input",
      "id": "SDTextInput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​​Inputs",
      "summary": "Defines a text input field for ShapeDiver's viewer, double click to change settings.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/textInput.html"
    },
    {
      "name": "Textfile Input",
      "id": "SDTextfileInput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​​Inputs",
      "summary": "Define a text file input for ShapeDiver's viewer, double click to change settings.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/textfileInput.html"
    },
    {
      "name": "Data Output",
      "id": "SDDataOutput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Define a data output to be accessed from ShapeDiver's viewer API",
      "description": "Define a data output to be accessed from ShapeDiver's viewer API.<br>Supports the following data types:<br>scalar, string, guid, point and vector, color, box, interval, line, ray, plane, transform, nurbs curve and surface.<br>The viewer API will output the data as a JavaScript object which preserves the tree structure.",
      "iconCss": "background: url('icons/shapeDiver.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/dataOutput.html"
    },
    {
      "name": "Dynamo Db Output",
      "id": "SDDynamoDbOutput",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Output JSON data to an AWS DynamoDB table.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/dynamoDbOutput.html"
    },
    {
      "name": "Export Download",
      "id": "SDExportDownload",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Use this component to define an export which can be downloaded from ShapeDiver's viewer",
      "description": "Use this component to define an export which can be downloaded from ShapeDiver's viewer.<br>CAUTION: This type of export makes the exported data publicly accessible from the viewer. Use the email export component if you want the exported data to be kept private.<br>The nickname of this component will be shown in the download button of ShapeDiver's viewer, please change it according to your liking.",
      "iconCss": "background: url('icons/shapeDiver.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/exportDownload.html"
    },
    {
      "name": "Export Email",
      "id": "SDExportEmail",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Use this component to define an export to be sent by email",
      "description": "Use this component to define an export to be sent by email. In contrast to download exports, the exported data will not become accessible by the end users of ShapeDiver's viewer.<br>The nickname of this component will be shown in the export button of the viewer, please change it according to your liking.",
      "iconCss": "background: url('icons/shapeDiver.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/exportEmail.html"
    },
    {
      "name": "Properties Export",
      "id": "SDPropertiesExport",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Use this component to define properties of objects to export (name, layer, object color, plot color, plot weight).",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/propertiesExport.html"
    },
    {
      "name": "Set Properties",
      "id": "SDSetProperties",
      "library": "ShapeDiver",
      "category": "​​​​​​​​Outputs",
      "summary": "Sets properties of an object, e.g. for defining layer and color of objects to export.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/setProperties.html"
    },
    {
      "name": "​​​​​​​​​Shape Diver Simple Material",
      "id": "SDSimpleMaterial",
      "library": "ShapeDiver",
      "category": "​​​​​​​Display",
      "summary": "Choose from predefined material properties for displaying geometry in the ShapeDiver viewer.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/ShapeDiverSimpleMaterial.html"
    },
    {
      "name": "​​​​​​​​Shape Diver Material",
      "id": "SDMaterial",
      "library": "ShapeDiver",
      "category": "​​​​​​​Display",
      "summary": "Define material properties for displaying geometry in the ShapeDiver viewer",
      "description": "Define material properties for displaying geometry in the ShapeDiver viewer.<br>Please make sure to use publicly accessible URLs for your texture images. Once images have been accessed for the first time after uploading of your model, they will be cached and the URLs will not be accessed anymore, and can thus safely be deactivated.",
      "iconCss": "background: url('icons/shapeDiver.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/ShapeDiverMaterial.html"
    },
    {
      "name": "​​​​​​​Shape Diver Display Geometry",
      "id": "SDDisplayGeometry",
      "library": "ShapeDiver",
      "category": "​​​​​​​Display",
      "summary": "Display geometry in ShapeDiver's viewer.<br>Change the nickname of this component to create a named output, which can be used in ShapeDiver's viewer API.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/ShapeDiverDisplayGeometry.html"
    },
    {
      "name": "​​​​​​Shape Diver Display External Geometry",
      "id": "SDDisplayExternalGeometry",
      "library": "ShapeDiver",
      "category": "​​​​​​​Display",
      "summary": "Display externally defined geometry in ShapeDiver's viewer",
      "description": "Display externally defined geometry in ShapeDiver's viewer.<br>Please make sure to use publicly accessible URLs for your geometry files.<br>Change the nickname of this component to create a named output, which can be used in ShapeDiver's viewer API.",
      "iconCss": "background: url('icons/shapeDiver.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/ShapeDiverDisplayExternalGeometry.html"
    },
    {
      "name": "Brep Or Mesh Split",
      "id": "SDBrepSplit",
      "library": "ShapeDiver",
      "category": "​​​​​​Textures",
      "summary": "Splits breps or meshes into groups of faces for texturing. Faces will be grouped by their normal vector. In case of meshes, texture coordinates will be defined as well.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/brepOrMeshSplit.html"
    },
    {
      "name": "Extract Mesh UVs",
      "id": "SDExtractMeshUVs",
      "library": "ShapeDiver",
      "category": "​​​​​​Textures",
      "summary": "Extract the UV coordinates of the mesh vertices, if they exist.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/extractMeshUVs.html"
    },
    {
      "name": "Texture Transform",
      "id": "SDTextureTransform",
      "library": "ShapeDiver",
      "category": "​​​​​​Textures",
      "summary": "Transform texture coordinates of meshes. Can also be used to randomly shift texture coordinates.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/textureTransform.html"
    },
    {
      "name": "JSONAccess",
      "id": "SDJSONAccess",
      "library": "ShapeDiver",
      "category": "​​​​JSON",
      "summary": "Allows access to individual properties of an object output by a ShapeDiverJSONParse component.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/jSONAccess.html"
    },
    {
      "name": "JSONConstruct",
      "id": "SDJSONConstruct",
      "library": "ShapeDiver",
      "category": "​​​​JSON",
      "summary": "Construct a JSON object which can be fed into a ShapeDiverDataOutputComponent.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/jSONConstruct.html"
    },
    {
      "name": "JSONConvert",
      "id": "SDJSONConvert",
      "library": "ShapeDiver",
      "category": "​​​​JSON",
      "summary": "Convenience component for converting parsed JSON objects to common Grasshopper data types. As an example, arrays of 2 or 3 numbers are converted to points.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/jSONConvert.html"
    },
    {
      "name": "JSONParse",
      "id": "SDJSONParse",
      "library": "ShapeDiver",
      "category": "​​​​JSON",
      "summary": "Parses a JSON string into a custom object whose members can be accessed using ShapeDiverJSONAccess components.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/jSONParse.html"
    },
    {
      "name": "Export Shape Ways",
      "id": "SDExportShapeWays",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to define an export to your ShapeWays account",
      "description": "Use this component to define an export to your ShapeWays account.<br>By using this component you confirm that (1) you have the rights to, or authorization to use the model, and (2) you accept the terms and conditions of ShapeWays.<br>Supply your model to this component in millimeter.<br>Your model will be made available for sale, kept private, and not downloadable.<br>The nickname of this component will be shown in the export button of the viewer, please change it according to your liking.",
      "iconCss": "background: url('icons/shapeDiver.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/shapediver/exportShapeWays.html"
    },
    {
      "name": "Shape Ways Categories",
      "id": "SDShapeWaysCategories",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to retrieve available categories from ShapeWays.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysCategories.html"
    },
    {
      "name": "Shape Ways Credentials",
      "id": "SDShapeWaysCredentials",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to define OAuth2 access credentials for your ShapeWays account",
      "description": "Use this component to define OAuth2 access credentials for your ShapeWays account.<br>By using this component you confirm that (1) you have the rights to, or authorization to use the model, and (2) you accept the terms and conditions of ShapeWays.",
      "iconCss": "background: url('icons/shapeDiver.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysCredentials.html"
    },
    {
      "name": "Shape Ways Credentials Ext",
      "id": "SDShapeWaysCredentialsExt",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to define OAuth2 access credentials for your ShapeWays account,<br>as well as a timeout for ShapeWays API requests",
      "description": "Use this component to define OAuth2 access credentials for your ShapeWays account,<br>as well as a timeout for ShapeWays API requests.<br>By using this component you confirm that (1) you have the rights to, or authorization to use the model, and (2) you accept the terms and conditions of ShapeWays.",
      "iconCss": "background: url('icons/shapeDiver.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysCredentialsExt.html"
    },
    {
      "name": "Shape Ways Materials",
      "id": "SDShapeWaysMaterials",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to retrieve available materials from ShapeWays.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysMaterials.html"
    },
    {
      "name": "Shape Ways Price",
      "id": "SDShapeWaysPrice",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to retrieve estimated prices from ShapeWays.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysPrice.html"
    },
    {
      "name": "Shape Ways Printers",
      "id": "SDShapeWaysPrinters",
      "library": "ShapeDiver",
      "category": "​​​Shapeways",
      "summary": "Use this component to retrieve available printers from ShapeWays.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/shapeWaysPrinters.html"
    },
    {
      "name": "Fill Linear",
      "id": "FillL",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a linear gradient fill",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/fillLinear.html"
    },
    {
      "name": "Fill Path",
      "id": "FillP",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a gradient fill based on a curve",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/fillPath.html"
    },
    {
      "name": "Fill Radial",
      "id": "FillR",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a radial gradient fill",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/fillRadial.html"
    },
    {
      "name": "Fill Solid",
      "id": "FillS",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a solid fill",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/fillSolid.html"
    },
    {
      "name": "Fill Texture",
      "id": "FillT",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a texture fill",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/fillTexture.html"
    },
    {
      "name": "Font",
      "id": "Font",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create font",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/font.html"
    },
    {
      "name": "Outline",
      "id": "Outline",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create an outline",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/outline.html"
    },
    {
      "name": "Outline Ex",
      "id": "OutlineEx",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Create a complex outline",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/outlineEx.html"
    },
    {
      "name": "Paragraph",
      "id": "Paragraph",
      "library": "ShapeDiver",
      "category": "Squid Drawing palette",
      "summary": "Define paragraph formatting",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/paragraph.html"
    },
    {
      "name": "Alpha",
      "id": "Alpha",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Alters the alpha channel of the underlying image.White=opaque, black=transparent.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/alpha.html"
    },
    {
      "name": "Clear",
      "id": "Clear",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Fill the picture using one color",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/shapediver/clear.html"
    },
    {
      "name": "Draw",
      "id": "Draw",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Draw any type of curve using fill and/or outline",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/draw.html"
    },
    {
      "name": "Draw Ex",
      "id": "DrawEx",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Draw complex shapes using fill and/or outline",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/drawEx.html"
    },
    {
      "name": "Image",
      "id": "Image",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Draw an image",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/image.html"
    },
    {
      "name": "Save",
      "id": "Save",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Create a Save File instruction (only for local use)",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/save.html"
    },
    {
      "name": "Text",
      "id": "Text",
      "library": "ShapeDiver",
      "category": "Squid Instructions",
      "summary": "Draw text",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/shapediver/text.html"
    },
    {
      "name": "Flip Order",
      "id": "Flip",
      "library": "ShapeDiver",
      "category": "Squid Modifiers",
      "summary": "Draw fill over outline",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/flipOrder.html"
    },
    {
      "name": "Overwrite",
      "id": "Over",
      "library": "ShapeDiver",
      "category": "Squid Modifiers",
      "summary": "Overwrites color",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/overwrite.html"
    },
    {
      "name": "Squid",
      "id": "Squid",
      "library": "ShapeDiver",
      "category": "Squid Squid",
      "summary": "Draws the picture",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/shapediver/squid.html"
    },
    {
      "name": "Divide Curve",
      "id": "Divide",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Use this component as an alternative to the default Draw and DrawEx curve division.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/shapediver/divideCurve.html"
    },
    {
      "name": "Font List",
      "id": "FontList",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Lists all installed fonts",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/fontList.html"
    },
    {
      "name": "Quick Preview",
      "id": "QPreview",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Quick bitmap preview",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/quickPreview.html"
    },
    {
      "name": "Read",
      "id": "Read",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Read a bitmap from file (only for local use).",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/read.html"
    },
    {
      "name": "Screen Map",
      "id": "Map",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Maps the points to an active viewport coordinates.Update by double clicking OR boolean input change OR the timer.",
      "description": null,
      "iconCss": "background: url('icons/shapeDiver.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/shapediver/screenMap.html"
    },
    {
      "name": "Text Curves",
      "id": "TextC",
      "library": "ShapeDiver",
      "category": "Squid Util",
      "summary": "Text to curves.",
      "description": "Text to curves.Note: Rhino 4 doesn't support paragraph formatting.Doesn't support underlined text.",
      "iconCss": "background: url('icons/shapeDiver.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/shapediver/textCurves.html"
    },
    {
      "name": "Lines to SmartMesh",
      "id": "Ln to SMesh",
      "library": "SmartForm",
      "category": "0 | Rhino to SmartMesh",
      "summary": "Converts a list of Rhino Lines into a SmartMesh",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/linesToSmartMesh.html"
    },
    {
      "name": "Mesh to SmartMesh",
      "id": "Mesh to SMesh",
      "library": "SmartForm",
      "category": "0 | Rhino to SmartMesh",
      "summary": "Converts a Rhino Mesh into a SmartMes",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/meshToSmartMesh.html"
    },
    {
      "name": "SmartGrids",
      "id": "SmartGrids",
      "library": "SmartForm",
      "category": "0 | Rhino to SmartMesh",
      "summary": "Generate multiple different gridtypes from a surface",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartGrids.html"
    },
    {
      "name": "Surface to SmartMesh",
      "id": "Srf to SMesh",
      "library": "SmartForm",
      "category": "0 | Rhino to SmartMesh",
      "summary": "Converts a Rhino Surface into a SmartMesh",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/smartform/surfaceToSmartMesh.html"
    },
    {
      "name": "SmartClustering",
      "id": "Smart Clustering",
      "library": "SmartForm",
      "category": "1 | Smart Modifiers",
      "summary": "Clusters a set of panels or nodes",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartClustering.html"
    },
    {
      "name": "SmartForm",
      "id": "SmartForm",
      "library": "SmartForm",
      "category": "1 | Smart Modifiers",
      "summary": "Relax a SmartMesh",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartForm.html"
    },
    {
      "name": "SmartFormAnalyser",
      "id": "SmartFormAnalyser",
      "library": "SmartForm",
      "category": "2 | SmartAnalyse",
      "summary": "Smart Analyse tool. Analyse and display various SmartMesh data",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartFormAnalyser.html"
    },
    {
      "name": "SmartMesh to Lines",
      "id": "SMesh to Ln",
      "library": "SmartForm",
      "category": "3 | SmartMesh to Rhino",
      "summary": "Converts a SmartMesh into a list of Rhino Lines",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartMeshToLines.html"
    },
    {
      "name": "SmartMesh to Mesh",
      "id": "SMesh to Mesh",
      "library": "SmartForm",
      "category": "3 | SmartMesh to Rhino",
      "summary": "Converts a SmartMesh into a Rhino Mesh.",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/smartMeshToMesh.html"
    },
    {
      "name": "Gradient",
      "id": "Gradient",
      "library": "SmartForm",
      "category": "SMARTTest",
      "summary": "Represents a multiple colour gradient",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/gradient.html"
    },
    {
      "name": "Sel",
      "id": "SelObject",
      "library": "SmartForm",
      "category": "SMARTTest",
      "summary": "Gets selected object",
      "description": null,
      "iconCss": "background: url('icons/smartForm.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/smartform/sel.html"
    },
    {
      "name": "Data Tree To Graph",
      "id": "DTG",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "parse a DataTree",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/dataTreeToGraph.html"
    },
    {
      "name": "Dual Graph",
      "id": "dualG",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Dual Graph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/dualGraph.html"
    },
    {
      "name": "graph From Cells",
      "id": "gFC",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Create a Graph From a Set of Ajoining Cells",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphFromCells.html"
    },
    {
      "name": "graph From Lines",
      "id": "gFL",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "create a graph from a set of connected lines",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphFromLines.html"
    },
    {
      "name": "graph From Mesh",
      "id": "gFM",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Create a directed Graph From a Mesh",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphFromMesh.html"
    },
    {
      "name": "graph From Points",
      "id": "gFP",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Create a Graph From a Set of Points and a Connection Distance",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphFromPoints.html"
    },
    {
      "name": "graph Matrix",
      "id": "gM",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Creates a graphMatrix from a graph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphMatrix.html"
    },
    {
      "name": "Graph To Data Tree",
      "id": "GDT",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "convert a Graph to a DataTree",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphToDataTree.html"
    },
    {
      "name": "visual Graph Grid",
      "id": "vGG",
      "library": "SpiderWeb",
      "category": "Basic",
      "summary": "Create a visualGraphGrid from obstacles and a boundary area",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/spiderweb/visualGraphGrid.html"
    },
    {
      "name": "agglomerative Clustering",
      "id": "aC",
      "library": "SpiderWeb",
      "category": "Clustering",
      "summary": "Preforms a bottom up distance clustering.",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/agglomerativeClustering.html"
    },
    {
      "name": "distance Clustering",
      "id": "dC",
      "library": "SpiderWeb",
      "category": "Clustering",
      "summary": "Preforms a top down distance clustering.",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/distanceClustering.html"
    },
    {
      "name": "Display Graph",
      "id": "DG",
      "library": "SpiderWeb",
      "category": "Display",
      "summary": "Display Graph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/displayGraph.html"
    },
    {
      "name": "Display graph Edge",
      "id": "DE",
      "library": "SpiderWeb",
      "category": "Display",
      "summary": "Display graphEdge",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/displayGraphEdge.html"
    },
    {
      "name": "Display graph Vertex",
      "id": "DV",
      "library": "SpiderWeb",
      "category": "Display",
      "summary": "Display graphVertex",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/displayGraphVertex.html"
    },
    {
      "name": "Display visual Graph",
      "id": "dVG",
      "library": "SpiderWeb",
      "category": "Display",
      "summary": "Display visualGraph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/displayVisualGraph.html"
    },
    {
      "name": "Graph Style",
      "id": "gS",
      "library": "SpiderWeb",
      "category": "Display",
      "summary": "Greate New Style for Displaying a Graph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/graphStyle.html"
    },
    {
      "name": "Image-Graph Filter",
      "id": "IGF",
      "library": "SpiderWeb",
      "category": "Filter",
      "summary": "Iamge based Filters on Graphs",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/imageGraphFilter.html"
    },
    {
      "name": "Points of Interest",
      "id": "POI",
      "library": "SpiderWeb",
      "category": "Filter",
      "summary": "Points of Interest",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/pointsOfInterest.html"
    },
    {
      "name": "find Edges",
      "id": "fE",
      "library": "SpiderWeb",
      "category": "Manipulation",
      "summary": "get the index of a graphEdge within a Graph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/findEdges.html"
    },
    {
      "name": "manipulate Edges",
      "id": "mE",
      "library": "SpiderWeb",
      "category": "Manipulation",
      "summary": "Merge, Delete, Insert Edges",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/manipulateEdges.html"
    },
    {
      "name": "manipulate Vertices",
      "id": "mV",
      "library": "SpiderWeb",
      "category": "Manipulation",
      "summary": "Merge, Delete Insert Vertices",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/manipulateVertices.html"
    },
    {
      "name": "Split",
      "id": "S",
      "library": "SpiderWeb",
      "category": "Manipulation",
      "summary": "Split a graph at a given Distance",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/split.html"
    },
    {
      "name": "Eigensystem",
      "id": "ESYS",
      "library": "SpiderWeb",
      "category": "Spectral",
      "summary": "Computes the Eigensystem of graphMatrix",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/spiderweb/eigensystem.html"
    },
    {
      "name": "Spectral Matching",
      "id": "SM",
      "library": "SpiderWeb",
      "category": "Spectral",
      "summary": "computes n-dimensional vectors for spectralGraphMatching",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/spectralMatching.html"
    },
    {
      "name": "Breadth-first Search",
      "id": "BFS",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Breadth-first Search",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/breadthfirstSearch.html"
    },
    {
      "name": "Eulerian Path",
      "id": "EulerianPath",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Checks if the Given Graph Has an Eulerian Path and Eeturns All Possible Starting Points",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/spiderweb/eulerianPath.html"
    },
    {
      "name": "Min ST",
      "id": "MinST",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Mininmal Spanning Tree",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/minST.html"
    },
    {
      "name": "randomized Sequential Graph Coloring",
      "id": "rndSGC",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Randomized Sequential Graph Coloring",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/randomizedSequentialGraphColoring.html"
    },
    {
      "name": "recursive Shadow Casting",
      "id": "RSC",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "preformes recursive shadow casting on a visualGraph",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/recursiveShadowCasting.html"
    },
    {
      "name": "Shortest Path Between Points",
      "id": "SPBP",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Callculates the shortest path between points",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/shortestPathBetweenPoints.html"
    },
    {
      "name": "Single Source Shortest Path",
      "id": "SSSP",
      "library": "SpiderWeb",
      "category": "Tools",
      "summary": "Solves the Single Source Shortest Path Problem",
      "description": null,
      "iconCss": "background: url('icons/spiderWeb.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/spiderweb/singleSourceShortestPath.html"
    },
    {
      "name": "Alignment",
      "id": "Aln",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Creates a desire for integration vectors to align to neighbours",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/spm/alignment.html"
    },
    {
      "name": "Cohesion",
      "id": "Coh",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Creates a desire for integration points to gather together",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/spm/cohesion.html"
    },
    {
      "name": "Gravity Dynamic",
      "id": "Grav",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Creates gravity sink/sources at specified points",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/spm/gravityDynamic.html"
    },
    {
      "name": "Scale",
      "id": "Scale",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Scales the vectors logarithmically as a post-process step",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/spm/scale.html"
    },
    {
      "name": "Separation",
      "id": "Sep",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Creates a desire for integration points to maintain a particular distance from each other",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/spm/separation.html"
    },
    {
      "name": "Surface Attraction",
      "id": "SAtt",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "A post-processing dynamic which causes integration to be attracted (or repulsed) from surfaces",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/spm/surfaceAttraction.html"
    },
    {
      "name": "Surface Bounce",
      "id": "SBnc",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "A post-processing dynamic which allows the integration to bounce off of surfaces during a collision",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/spm/surfaceBounce.html"
    },
    {
      "name": "Surface Flow",
      "id": "SFlow",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "A post-processing dynamic which allows integration to flow along a list of surfaces",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/spm/surfaceFlow.html"
    },
    {
      "name": "Vector Addition",
      "id": "VAdd",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Adds a vector to each vector in a vector field",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/spm/vectorAddition.html"
    },
    {
      "name": "Vortex Dynamic",
      "id": "Vortex",
      "library": "SPM",
      "category": "Dynamics",
      "summary": "Creates vortices inside a vector field at specified points (at the origins of the planar inputs)",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/spm/vortexDynamic.html"
    },
    {
      "name": "SPM Boundary Settings",
      "id": "BndS",
      "library": "SPM",
      "category": "Integration",
      "summary": "Settings to control boundaries during an integration",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/spm/sPMBoundarySettings.html"
    },
    {
      "name": "SPM Integration Settings",
      "id": "IntegrationS",
      "library": "SPM",
      "category": "Integration",
      "summary": "Settings to configure a SPM vector field integration component",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/spm/sPMIntegrationSettings.html"
    },
    {
      "name": "SPM Orbit Settings",
      "id": "OrS",
      "library": "SPM",
      "category": "Integration",
      "summary": "Settings to control the orbit parameters",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/spm/sPMOrbitSettings.html"
    },
    {
      "name": "SPM Particle Life Time Settings",
      "id": "PrtS",
      "library": "SPM",
      "category": "Integration",
      "summary": "Settings to control the lifetime behaviour of particles",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/spm/sPMParticleLifeTimeSettings.html"
    },
    {
      "name": "SPM Tensor Settings",
      "id": "TenS",
      "library": "SPM",
      "category": "Integration",
      "summary": "Settings to work with tensor fields during integration",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/spm/sPMTensorSettings.html"
    },
    {
      "name": "SPM Vector Field Integration",
      "id": "SPM Integration",
      "library": "SPM",
      "category": "Integration",
      "summary": "Statically or dynamically integrates points travelling through a vector field",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/spm/sPMVectorFieldIntegration.html"
    },
    {
      "name": "Counter",
      "id": "Counter",
      "library": "SPM",
      "category": "Utilities",
      "summary": "A persistent counter that increases its count each iteration",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/spm/counter.html"
    },
    {
      "name": "Distance Binning",
      "id": "DB",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Allows faster processing of dynamics that reference the entire field of particles (Cohesion, Alignment, Separation) by processing only points in a local area (Bin) at a time",
      "description": "Allows faster processing of dynamics that reference the entire field of particles (Cohesion, Alignment, Separation) by processing only points in a local area (Bin) at a time. Distance binning is a form of space partitioning and is unnecessary for most dynamics (as they don't care about their neighbour particles in the field).",
      "iconCss": "background: url('icons/sPM.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/spm/distanceBinning.html"
    },
    {
      "name": "Dynamic Keyframe",
      "id": "DKf",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Keyframes a list of dynamics to only trigger at specified step ranges",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/spm/dynamicKeyframe.html"
    },
    {
      "name": "Number Interpolation",
      "id": "Num Interp",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Interpolates N-dimensional points based on surrounding M-dimensional vectors",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/spm/numberInterpolation.html"
    },
    {
      "name": "Open/Closed Curve Sorter",
      "id": "CrvSt",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Sorts a list of points representing curves into open and closed lists",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/spm/openClosedCurveSorter.html"
    },
    {
      "name": "Point/Vector Interpolation",
      "id": "Pt Interp",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Interpolate an N-dimensional point based on surrounding M-dimensional vectors",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/spm/pointVectorInterpolation.html"
    },
    {
      "name": "Tensor",
      "id": "Tensor",
      "library": "SPM",
      "category": "Utilities",
      "summary": "A Tensor component represents a 3d frame or basis, such as a plane",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/spm/tensor.html"
    },
    {
      "name": "Vector Field Creator",
      "id": "VFC",
      "library": "SPM",
      "category": "Utilities",
      "summary": "Modifies or creates a new vector field",
      "description": null,
      "iconCss": "background: url('icons/sPM.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/spm/vectorFieldCreator.html"
    },
    {
      "name": "Curved Block",
      "id": "CrvdBlock",
      "library": "Starfish",
      "category": "0 | Generate",
      "summary": "Use this component to generate curved structural units based on topological interlocking principle.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/curvedBlock.html"
    },
    {
      "name": "Custom TIBlock",
      "id": "CustomTI",
      "library": "Starfish",
      "category": "0 | Generate",
      "summary": "Use this component to generate a TI structure based on a custom edge curve.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/starfish/customTIBlock.html"
    },
    {
      "name": "Sharp Block",
      "id": "SharpBlock",
      "library": "Starfish",
      "category": "0 | Generate",
      "summary": "Use this component to generate structural units based on topological interlocking principle.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/sharpBlock.html"
    },
    {
      "name": "Tessellation",
      "id": "Tessellation",
      "library": "Starfish",
      "category": "0 | Generate",
      "summary": "Use this component to generate a two-dimensional pattern using vertex configuration input.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/tessellation.html"
    },
    {
      "name": "TI Block",
      "id": "TI_Block",
      "library": "Starfish",
      "category": "0 | Generate",
      "summary": "Use this component to generate structural units based on topological interlocking principle.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/tIBlock.html"
    },
    {
      "name": "Custom Pattern",
      "id": "CustomPtrn",
      "library": "Starfish",
      "category": "1 | Patterns",
      "summary": "Use this component to create a pattern based on a custom edge curve",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/starfish/customPattern.html"
    },
    {
      "name": "Maze",
      "id": "Maze",
      "library": "Starfish",
      "category": "1 | Patterns",
      "summary": "Use this component to generate a maze-like pattern.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/maze.html"
    },
    {
      "name": "Ornament",
      "id": "Ornament",
      "library": "Starfish",
      "category": "1 | Patterns",
      "summary": "Use this component to generate a maze pattern.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/ornament.html"
    },
    {
      "name": "Tunnel",
      "id": "Tunnel",
      "library": "Starfish",
      "category": "1 | Patterns",
      "summary": "Use this component to generate a polyline spiral from curves.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/starfish/tunnel.html"
    },
    {
      "name": "Close Curve",
      "id": "CC",
      "library": "Starfish",
      "category": "2 | Util",
      "summary": "Close open curves",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/closeCurve.html"
    },
    {
      "name": "Get Directions",
      "id": "GetDir",
      "library": "Starfish",
      "category": "2 | Util",
      "summary": "This component will generate a list of faces' directions for polylines that weren't created with Starfish 'Tessellation' component.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/getDirections.html"
    },
    {
      "name": "Map2d To Surface",
      "id": "2dToSrf",
      "library": "Starfish",
      "category": "2 | Util",
      "summary": "Maps 2D curves onto a surface.",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/map2dToSurface.html"
    },
    {
      "name": "Set Graph Domain",
      "id": "GraphDomain",
      "library": "Starfish",
      "category": "2 | Util",
      "summary": "Sets X and Y domains of Graph Mapper",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/starfish/setGraphDomain.html"
    },
    {
      "name": "Sketch",
      "id": "Sketch",
      "library": "Starfish",
      "category": "2 | Util",
      "summary": "This component allows adding custom sketch objects to the GH canvas",
      "description": null,
      "iconCss": "background: url('icons/starfish.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/starfish/sketch.html"
    },
    {
      "name": "pm Adjacent Faces",
      "id": "pmAdjacent",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Generates DataTree of faces adjacent to each face",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmAdjacentFaces.html"
    },
    {
      "name": "pm Connected Faces",
      "id": "pmConnFace",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Generates DataTree of faces connected to each vertice",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmConnectedFaces.html"
    },
    {
      "name": "pm Connected Vertices",
      "id": "pmConnVert",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Generates DataTree of vertices connected to each vertice",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmConnectedVertices.html"
    },
    {
      "name": "pm Create Polylines",
      "id": "pmCreate",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Create polylines from pMesh data. Works same as List item + polyline when one pMesh data is provided",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmCreatePolylines.html"
    },
    {
      "name": "pm Decompose",
      "id": "pmComp",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Create pMesh topology using polylines",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmDecompose.html"
    },
    {
      "name": "pm Dual",
      "id": "pmDual",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Dual pMesh operation",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmDual.html"
    },
    {
      "name": "pm Laplacian Smooth",
      "id": "pmLaplace",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Laplacian smoothing/Weighted laplacian smoothing (when number of input weights is equal to number of vertices)",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmLaplacianSmooth.html"
    },
    {
      "name": "pm Naked Vertices",
      "id": "pmNaked",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Outputs list of booleans and naked vertices themself (true = naked)",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmNakedVertices.html"
    },
    {
      "name": "pm Offset",
      "id": "pmOffset",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "pMesh offset",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/starling/pmOffset.html"
    },
    {
      "name": "pm Truncate",
      "id": "pmTrun",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "pMesh truncation",
      "description": null,
      "iconCss": "background: url('icons/starling.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/starling/pmTruncate.html"
    },
    {
      "name": "pm Unique Edges",
      "id": "pmEdges",
      "library": "Starling",
      "category": "Alchemists",
      "summary": "Finds unique topology edges",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/starling/pmUniqueEdges.html"
    },
    {
      "name": "sl Chord",
      "id": "slChord",
      "library": "Starling",
      "category": "Cartographers",
      "summary": "Preserve chord length disk embedding",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slChord.html"
    },
    {
      "name": "sl Sphere",
      "id": "slSphere",
      "library": "Starling",
      "category": "Cartographers",
      "summary": "Topological sphere embedding",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slSphere.html"
    },
    {
      "name": "sl Tutte",
      "id": "slTutte",
      "library": "Starling",
      "category": "Cartographers",
      "summary": "Tutte barycentric disk embedding",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/starling/slTutte.html"
    },
    {
      "name": "sl Fast Mesh",
      "id": "slFastMesh",
      "library": "Starling",
      "category": "Darners",
      "summary": "Makes Sl compatible mesh with multiple BReps",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slFastMesh.html"
    },
    {
      "name": "sl Hull3D",
      "id": "slHull3D",
      "library": "Starling",
      "category": "Darners",
      "summary": "Incremental 3d convex hull",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slHull3D.html"
    },
    {
      "name": "sl Source Mesh",
      "id": "slSourceMesh",
      "library": "Starling",
      "category": "Darners",
      "summary": "Create mesh with polyline",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slSourceMesh.html"
    },
    {
      "name": "sl Star Mesh",
      "id": "slStarMesh",
      "library": "Starling",
      "category": "Darners",
      "summary": "Create mesh with polyline",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slStarMesh.html"
    },
    {
      "name": "sl Topo Disk",
      "id": "slTopoDisk",
      "library": "Starling",
      "category": "Darners",
      "summary": "Make mesh a topological disk (by adding faces)",
      "description": null,
      "iconCss": "background: url('icons/starling.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/starling/slTopoDisk.html"
    },
    {
      "name": "sl Topo Sphere",
      "id": "slTopoSphere",
      "library": "Starling",
      "category": "Darners",
      "summary": "Make mesh a topological sphere (by adding faces)",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/starling/slTopoSphere.html"
    },
    {
      "name": "sl Guide2D",
      "id": "slGuide2D",
      "library": "Starling",
      "category": "Guides",
      "summary": "Remap points onto mesh",
      "description": null,
      "iconCss": "background: url('icons/starling.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/starling/slGuide2D.html"
    },
    {
      "name": "sl Guide3D",
      "id": "slGuide3D",
      "library": "Starling",
      "category": "Guides",
      "summary": "Remap points onto mesh",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slGuide3D.html"
    },
    {
      "name": "sl Relax",
      "id": "slRelax",
      "library": "Starling",
      "category": "Smoothen",
      "summary": "Relax mesh",
      "description": null,
      "iconCss": "background: url('icons/starling.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/starling/slRelax.html"
    },
    {
      "name": "About.Version",
      "id": "About.Version",
      "library": "Topologic",
      "category": "About",
      "summary": "Returns the current version of Topologic.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/aboutVersion.html"
    },
    {
      "name": "Aperture.ByTopologyContext",
      "id": "Aperture.ByTopologyContext",
      "library": "Topologic",
      "category": "Aperture",
      "summary": "Creates an Aperture by a Topology and a Context.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/apertureByTopologyContext.html"
    },
    {
      "name": "Aperture.Topology",
      "id": "Aperture.Topology",
      "library": "Topologic",
      "category": "Aperture",
      "summary": "Returns the underlying Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/apertureTopology.html"
    },
    {
      "name": "Bitwise.AND",
      "id": "Bitwise.AND",
      "library": "Topologic",
      "category": "Bitwise",
      "summary": "Performs a bitwise AND operation between the arguments (in their binary form).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/bitwiseAND.html"
    },
    {
      "name": "Bitwise.NOT",
      "id": "Bitwise.AND",
      "library": "Topologic",
      "category": "Bitwise",
      "summary": "Performs a bitwise NOT operation between the arguments (in their binary form).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/bitwiseNOT.html"
    },
    {
      "name": "Bitwise.OR",
      "id": "Bitwise.OR",
      "library": "Topologic",
      "category": "Bitwise",
      "summary": "Performs a bitwise OR operation between the arguments (in their binary form).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/bitwiseOR.html"
    },
    {
      "name": "Bitwise.XOR",
      "id": "Bitwise.XOR",
      "library": "Topologic",
      "category": "Bitwise",
      "summary": "Performs a bitwise XOR operation between the arguments (in their binary form).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/bitwiseXOR.html"
    },
    {
      "name": "Topology.SharedTopologies",
      "id": "Topology.SharedTopologies",
      "library": "Topologic",
      "category": "Bitwise",
      "summary": "Performs a bitwise Or operation between the arguments (in their binary form).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologySharedTopologies.html"
    },
    {
      "name": "Cell.AdjacentCells",
      "id": "Cell.AdjacentCells",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Cells adjacent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/cellAdjacentCells.html"
    },
    {
      "name": "Cell.ByFaces",
      "id": "Cell.ByFaces",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Creates a Cell by a set of Faces.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/cellByFaces.html"
    },
    {
      "name": "Cell.ByShell",
      "id": "Cell.ByShell",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Creates a Cell from a Shell. The Shell must be closed, otherwise an exception is thrown.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/topologic/cellByShell.html"
    },
    {
      "name": "Cell.CellComplexes",
      "id": "Cell.CellComplexes",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the CellComplexes which contain the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellCellComplexes.html"
    },
    {
      "name": "Cell.Edges",
      "id": "Cell.Edges",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Edges constituent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellEdges.html"
    },
    {
      "name": "Cell.ExternalBoundary",
      "id": "Cell.ExternalBoundary",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the external boundary (Shell) of the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellExternalBoundary.html"
    },
    {
      "name": "Cell.Faces",
      "id": "Cell.Faces",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Faces constituent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellFaces.html"
    },
    {
      "name": "Cell.InternalBoundaries",
      "id": "Cell.InternalBoundaries",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the internal boundaries (Shells) of the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellInternalBoundaries.html"
    },
    {
      "name": "Cell.SharedEdges",
      "id": "Cell.SharedEdges",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Return the shared Edges between two Cells.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellSharedEdges.html"
    },
    {
      "name": "Cell.SharedFaces",
      "id": "Cell.SharedFaces",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Return the shared Faces between two Cells.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellSharedFaces.html"
    },
    {
      "name": "Cell.SharedVertices",
      "id": "Cell.SharedVertices",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Return the shared shared Vertices between two Cells.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellSharedVertices.html"
    },
    {
      "name": "Cell.Shells",
      "id": "Cell.Shells",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Shells constituent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellShells.html"
    },
    {
      "name": "Cell.Type",
      "id": "Cell.Type",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the type associated to Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellType.html"
    },
    {
      "name": "Cell.Vertices",
      "id": "Cell.Vertices",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Vertices constituent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellVertices.html"
    },
    {
      "name": "Cell.Wires",
      "id": "Cell.Wires",
      "library": "Topologic",
      "category": "Cell",
      "summary": "Returns the Wires constituent to the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellWires.html"
    },
    {
      "name": "CellComplex.ByCells",
      "id": "CellComplex.ByCells",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Creates a CellComplex by a set of Cells.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexByCells.html"
    },
    {
      "name": "CellComplex.ByFaces",
      "id": "CellComplex.ByFaces",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Creates a CellComplex from the space enclosed by a set of Faces. Parts of the Faces which do not enclose any space will be discarded.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexByFaces.html"
    },
    {
      "name": "CellComplex.Cells",
      "id": "CellComplex.Cells",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Cells constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexCells.html"
    },
    {
      "name": "CellComplex.Edges",
      "id": "CellComplex.Edges",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Edges constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexEdges.html"
    },
    {
      "name": "CellComplex.ExternalBoundary",
      "id": "CellComplex.ExternalBoundary",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the external boundary (Cell) of the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexExternalBoundary.html"
    },
    {
      "name": "CellComplex.Faces",
      "id": "CellComplex.Faces",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Faces constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexFaces.html"
    },
    {
      "name": "CellComplex.InternalBoundaries",
      "id": "CellComplex.InternalBoundaries",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the internal boundaries (Faces) of the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexInternalBoundaries.html"
    },
    {
      "name": "CellComplex.NonManifoldFaces",
      "id": "CellComplex.NonManifoldFaces",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the non-manifold Faces of the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexNonManifoldFaces.html"
    },
    {
      "name": "CellComplex.Shells",
      "id": "CellComplex.Shells",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Shells constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexShells.html"
    },
    {
      "name": "CellComplex.Type",
      "id": "CellComplex.Type",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the type associated to CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexType.html"
    },
    {
      "name": "CellComplex.Vertices",
      "id": "CellComplex.Vertices",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Vertices constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexVertices.html"
    },
    {
      "name": "CellComplex.Wires",
      "id": "CellComplex.Wires",
      "library": "Topologic",
      "category": "CellComplex",
      "summary": "Returns the Wires constituent to the CellComplex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/topologic/cellComplexWires.html"
    },
    {
      "name": "CellUtility.ByLoft",
      "id": "CellUtility.ByLoft",
      "library": "Topologic",
      "category": "CellUtility",
      "summary": "Creates a Cell by lofting through a set of Wires.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellUtilityByLoft.html"
    },
    {
      "name": "CellUtility.Contains",
      "id": "CellUtility.Contains",
      "library": "Topologic",
      "category": "CellUtility",
      "summary": "Check if a Vertex is contained in a Cell or not.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellUtilityContains.html"
    },
    {
      "name": "CellUtility.InternalVertex",
      "id": "CellUtility.InternalVertex",
      "library": "Topologic",
      "category": "CellUtility",
      "summary": "Returns a Vertex inside the Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellUtilityInternalVertex.html"
    },
    {
      "name": "CellUtility.Volume",
      "id": "CellUtility.Volume",
      "library": "Topologic",
      "category": "CellUtility",
      "summary": "Returns the volume of a Cell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/cellUtilityVolume.html"
    },
    {
      "name": "Cluster.ByTopologies",
      "id": "Cluster.ByTopologies",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Creates a Cluster by a set of Topologies.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterByTopologies.html"
    },
    {
      "name": "Cluster.CellComplexes",
      "id": "Cluster.CellComplexes",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the CellComplexes constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterCellComplexes.html"
    },
    {
      "name": "Cluster.Cells",
      "id": "Cluster.Cells",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Cells constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterCells.html"
    },
    {
      "name": "Cluster.Edges",
      "id": "Cluster.Edges",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Edges constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterEdges.html"
    },
    {
      "name": "Cluster.Faces",
      "id": "Cluster.Faces",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Faces constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterFaces.html"
    },
    {
      "name": "Cluster.Shells",
      "id": "Cluster.Shells",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Shells constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterShells.html"
    },
    {
      "name": "Cluster.Type",
      "id": "Cluster.Type",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the type associated to Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterType.html"
    },
    {
      "name": "Cluster.Vertices",
      "id": "Cluster.Vertices",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Vertices constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterVertices.html"
    },
    {
      "name": "Cluster.Wires",
      "id": "Cluster.Wires",
      "library": "Topologic",
      "category": "Cluster",
      "summary": "Returns the Wires constituent to the Cluster.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/clusterWires.html"
    },
    {
      "name": "Context.Topology",
      "id": "Context.Topology",
      "library": "Topologic",
      "category": "Context",
      "summary": "Returns the associated Topology to the Context.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/contextTopology.html"
    },
    {
      "name": "Dictionary.ByKeysValues",
      "id": "Dictionary.ByKeysValues",
      "library": "Topologic",
      "category": "Dictionary",
      "summary": "Create a Dictionary by keys and values",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/dictionaryByKeysValues.html"
    },
    {
      "name": "Dictionary.SetValueAtKey",
      "id": "Dictionary.SetValueAtKey",
      "library": "Topologic",
      "category": "Dictionary",
      "summary": "Sets the value of a Dictionary at a given key",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/topologic/dictionarySetValueAtKey.html"
    },
    {
      "name": "Dictionary.ValueAtKey",
      "id": "Dictionary.ValueAtKey",
      "library": "Topologic",
      "category": "Dictionary",
      "summary": "Retrieves the value of a Dictionary at a given key",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/dictionaryValueAtKey.html"
    },
    {
      "name": "Edge.AdjacentEdges",
      "id": "Edge.AdjacentEdges",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the Edges adjacent to the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeAdjacentEdges.html"
    },
    {
      "name": "Edge.ByStartVertexEndVertex",
      "id": "Edge.ByStartVertexEndVertex",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Creates a straight Edge by the startVertex and endVertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeByStartVertexEndVertex.html"
    },
    {
      "name": "Edge.EndVertex",
      "id": "Edge.EndVertex",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the end Vertex of the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeEndVertex.html"
    },
    {
      "name": "Edge.SharedVertices",
      "id": "Edge.SharedVertices",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the shared Vertices between two Edges.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeSharedVertices.html"
    },
    {
      "name": "Edge.StartVertex",
      "id": "Edge.StartVertex",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the start Vertex of the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeStartVertex.html"
    },
    {
      "name": "Edge.Type",
      "id": "Edge.Type",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the type associated to Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeType.html"
    },
    {
      "name": "Edge.Vertices",
      "id": "Edge.Vertices",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the Vertices at the ends of the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeVertices.html"
    },
    {
      "name": "Edge.Wires",
      "id": "Edge.Wires",
      "library": "Topologic",
      "category": "Edge",
      "summary": "Returns the Wires incident to the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeWires.html"
    },
    {
      "name": "EdgeUtility.AdjacentWires",
      "id": "EdgeUtility.AdjacentWires",
      "library": "Topologic",
      "category": "EdgeUtility",
      "summary": "Returns a list of Wires that are the adjacent to the input Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeUtilityAdjacentWires.html"
    },
    {
      "name": "EdgeUtility.ByVertices",
      "id": "EdgeUtility.ByVertices",
      "library": "Topologic",
      "category": "EdgeUtility",
      "summary": "Create an Edge (of any type) by a set of Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeUtilityByVertices.html"
    },
    {
      "name": "EdgeUtility.ParameterAtVertex",
      "id": "EdgeUtility.ParameterAtVertex",
      "library": "Topologic",
      "category": "EdgeUtility",
      "summary": "Returns the parameter at a given Vertex on the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeUtilityParameterAtVertex.html"
    },
    {
      "name": "EdgeUtility.VertexAtParameter",
      "id": "EdgeUtility.VertexAtParameter",
      "library": "Topologic",
      "category": "EdgeUtility",
      "summary": "Returns the Vertex at a given parameter of the Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/edgeUtilityVertexAtParameter.html"
    },
    {
      "name": "Face.AddApertureDesign",
      "id": "Face.AddApertureDesign",
      "library": "Topologic",
      "category": "Face",
      "summary": "Adds an Aperture design to a Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceAddApertureDesign.html"
    },
    {
      "name": "Face.AddInternalBoundaries",
      "id": "Face.AddInternalBoundaries",
      "library": "Topologic",
      "category": "Face",
      "summary": "Adds internal boundaries (Wires) to a Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceAddInternalBoundaries.html"
    },
    {
      "name": "Face.AdjacentFaces",
      "id": "Face.AdjacentFaces",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Faces adjacent to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceAdjacentFaces.html"
    },
    {
      "name": "Face.ByEdges",
      "id": "Face.ByEdges",
      "library": "Topologic",
      "category": "Face",
      "summary": "Creates a Face by a list of Edges.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceByEdges.html"
    },
    {
      "name": "Face.ByExternalInternalBoundaries",
      "id": "Face.ByExternalInternalBoundaries",
      "library": "Topologic",
      "category": "Face",
      "summary": "Creates a Face by an external boundary (Wire) and internal boundaries (Wires).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceByExternalInternalBoundaries.html"
    },
    {
      "name": "Face.ByWire",
      "id": "Face.ByWire",
      "library": "Topologic",
      "category": "Face",
      "summary": "Creates a Face by a closed planar Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceByWire.html"
    },
    {
      "name": "Face.Cells",
      "id": "Face.Cells",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Cells incident to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/topologic/faceCells.html"
    },
    {
      "name": "Face.Edges",
      "id": "Face.Edges",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Edges constituent to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceEdges.html"
    },
    {
      "name": "Face.ExternalBoundary",
      "id": "Face.FaceExternalBoundary",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the external boundary (Wire) of the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceExternalBoundary.html"
    },
    {
      "name": "Face.InternalBoundaries",
      "id": "Face.InternalBoundaries",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the internal boundaries (Wires) of the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceInternalBoundaries.html"
    },
    {
      "name": "Face.SharedEdges",
      "id": "Face.SharedEdges",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the shared Edges between two Faces.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceSharedEdges.html"
    },
    {
      "name": "Face.SharedVertices",
      "id": "Face.SharedVertices",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the shared Vertices between two Faces.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceSharedVertices.html"
    },
    {
      "name": "Face.Shells",
      "id": "Face.Shells",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Shells incident to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceShells.html"
    },
    {
      "name": "Face.Type",
      "id": "Face.Type",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the type associated to Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceType.html"
    },
    {
      "name": "Face.Vertices",
      "id": "Face.Vertices",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Vertices constituent to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceVertices.html"
    },
    {
      "name": "Face.Wires",
      "id": "Face.Wires",
      "library": "Topologic",
      "category": "Face",
      "summary": "Returns the Wires constituent to the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceWires.html"
    },
    {
      "name": "FaceUtility.AdjacentCells",
      "id": "FaceUtility.AdjacentCells",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns a list of Cells that are the adjacent to the input Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityAdjacentCells.html"
    },
    {
      "name": "FaceUtility.AdjacentShells",
      "id": "FaceUtility.AdjacentShells",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns a list of Shells that are the adjacent to the input Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityAdjacentShells.html"
    },
    {
      "name": "FaceUtility.Area",
      "id": "FaceUtility.Area",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns the area of a Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityArea.html"
    },
    {
      "name": "FaceUtility.ByVertices",
      "id": "FaceUtility.ByVertices",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Creates a Face (of any type) by a set of Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityByVertices.html"
    },
    {
      "name": "FaceUtility.InternalVertex",
      "id": "FaceUtility.InternalVertex",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns a Vertex inside the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityInternalVertex.html"
    },
    {
      "name": "FaceUtility.IsInside",
      "id": "FaceUtility.IsInside",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Checks if a Vertex is located inside a Face within a tolerance value.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityIsInside.html"
    },
    {
      "name": "FaceUtility.NormalAtParameters",
      "id": "FaceUtility.NormalAtParameters",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns the normal (vector) at a parameter of a Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityNormalAtParameters.html"
    },
    {
      "name": "FaceUtility.ParametersAtVertex",
      "id": "FaceUtility.ParametersAtVertex",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns the UV parameters at a given Vertex on a Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityParametersAtVertex.html"
    },
    {
      "name": "FaceUtility.TrimByWire",
      "id": "FaceUtility.TrimByWire",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Trims a Face with a Wire. The portion of the Face inside the Wire will be returned.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityTrimByWire.html"
    },
    {
      "name": "FaceUtility.VertexAtParameters",
      "id": "FaceUtility.VertexAtParameters",
      "library": "Topologic",
      "category": "FaceUtility",
      "summary": "Returns the Vertex at a given parameter of the Face.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/faceUtilityVertexAtParameters.html"
    },
    {
      "name": "Graph.AddEdges",
      "id": "Graph.AddEdges",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Adds the list of Edges to the Graph",
      "description": "Adds the list of Edges to the Graph. The Vertices of the Edges are merged with existing Vertices if they fall within the input tolerance. No new Edges will be added if they already exist. A zero or null tolerance means that the Vertices of the input Edges will be added to the Graph regardless of their overlap with existing Vertices.",
      "iconCss": "background: url('icons/topologic.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/topologic/graphAddEdges.html"
    },
    {
      "name": "Graph.AddVertices",
      "id": "Graph.AddVertices",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Adds the list of Vertices to the Graph",
      "description": "Adds the list of Vertices to the Graph. If a tolerance is specified, the Vertices will be merged with existing Vertices within the input tolerance distance. A zero or null tolerance means that the Vertices will be added to the Graph regardless of their overlap with existing Vertices.",
      "iconCss": "background: url('icons/topologic.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphAddVertices.html"
    },
    {
      "name": "Graph.AdjacentVertices",
      "id": "Graph.AdjacentVertices",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of Vertices that are connected to the input Vertex by an Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphAdjacentVertices.html"
    },
    {
      "name": "Graph.AllPaths",
      "id": "Graph.AllPaths",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns all paths it could find, within the input number of seconds, that connect the two input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphAllPaths.html"
    },
    {
      "name": "Graph.ByTopology",
      "id": "Graph.ByTopology",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Creates a Graph from any Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphByTopology.html"
    },
    {
      "name": "Graph.Connect",
      "id": "Graph.Connect",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Connects the two input Vertices with an Edge.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphConnect.html"
    },
    {
      "name": "Graph.ContainsEdge",
      "id": "Graph.ContainsEdge",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns True if the input Graph contains the input Edge. Returns False otherwise.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphContainsEdge.html"
    },
    {
      "name": "Graph.ContainsVertex",
      "id": "Graph.ContainsVertex",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns True if the input Graph contains the input Vertex. Returns False otherwise.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphContainsVertex.html"
    },
    {
      "name": "Graph.DegreeSequence",
      "id": "Graph.DegreeSequence",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of Vertex degrees in a non-increasing order.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphDegreeSequence.html"
    },
    {
      "name": "Graph.Density",
      "id": "Graph.Density",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the ratio of the number of Edges to the total number of Edges the Graph could have.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphDensity.html"
    },
    {
      "name": "Graph.Diameter",
      "id": "Graph.Diameter",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the number of Edges of the shortest path between the most distanced Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/topologic/graphDiameter.html"
    },
    {
      "name": "Graph.Edge",
      "id": "Graph.Edge",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the Edge, if one exists, that connects the two input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphEdge.html"
    },
    {
      "name": "Graph.Edges",
      "id": "Graph.Edges",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of all the Edges in a Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphEdges.html"
    },
    {
      "name": "Graph.IsComplete",
      "id": "Graph.IsComplete",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns True if the Graph has a density of 1. Returns False otherwise.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphIsComplete.html"
    },
    {
      "name": "Graph.IsErdoesGallai",
      "id": "Graph.IsErdoesGallai",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns True if the input sequence satisfies the Erdoes Gallai theorem. It returns False otherwise.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphIsErdoesGallai.html"
    },
    {
      "name": "Graph.IsolatedVertices",
      "id": "Graph.IsolatedVertices",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of Vertices that are not connected by Edges.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphIsolatedVertices.html"
    },
    {
      "name": "Graph.MaximumDelta",
      "id": "Graph.MaximumDelta",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the maximum Vertex degree in a Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphMaximumDelta.html"
    },
    {
      "name": "Graph.MinimumDelta",
      "id": "Graph.MinimumDelta",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the minimum Vertex degree in a Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphMinimumDelta.html"
    },
    {
      "name": "Graph.Path",
      "id": "Graph.Path",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the first path found between the input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphPath.html"
    },
    {
      "name": "Graph.RemoveEdges",
      "id": "Graph.RemoveEdges",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Removes the input Edges from the Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphRemoveEdges.html"
    },
    {
      "name": "Graph.RemoveVertices",
      "id": "Graph.RemoveVertices",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Removes the input Vertices from the Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/topologic/graphRemoveVertices.html"
    },
    {
      "name": "Graph.ShortestPath",
      "id": "Graph.ShortestPath",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the path with the fewest number of Edges between the two input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphShortestPath.html"
    },
    {
      "name": "Graph.ShortestPaths",
      "id": "Graph.ShortestPaths",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns all paths with the fewest number of Edges between the two input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphShortestPaths.html"
    },
    {
      "name": "Graph.TopologicalDistance",
      "id": "Graph.TopologicalDistance",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the number of Edges of the shortest path connecting the two input Vertices.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphTopologicalDistance.html"
    },
    {
      "name": "Graph.Topology",
      "id": "Graph.Topology",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the Topology of the Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphTopology.html"
    },
    {
      "name": "Graph.VertexDegree",
      "id": "Graph.VertexDegree",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns the number of Edges connected to the input Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphVertexDegree.html"
    },
    {
      "name": "Graph.Vertices",
      "id": "Graph.Vertices",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of all the Vertices in a Graph.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphVertices.html"
    },
    {
      "name": "Graph.VerticesAtCoordinates",
      "id": "Graph.VerticesAtCoordinates",
      "library": "Topologic",
      "category": "Graph",
      "summary": "Returns a list of Vertices in the Graph located at the input coordinates within the input tolerance distance.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/graphVerticesAtCoordinates.html"
    },
    {
      "name": "Shell.ByFaces",
      "id": "Shell.ByFaces",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Creates a Shell by a set of connected Faces.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/shellByFaces.html"
    },
    {
      "name": "Shell.Cells",
      "id": "Shell.Cells",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the Cells bounded by the Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/shellCells.html"
    },
    {
      "name": "Shell.Edges",
      "id": "Shell.Edges",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the Edges constituent to the Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/topologic/shellEdges.html"
    },
    {
      "name": "Shell.Faces",
      "id": "Shell.Faces",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the Faces constituent to the Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellFaces.html"
    },
    {
      "name": "Shell.IsClosed",
      "id": "Shell.IsClosed",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Checks if the Shell is closed.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellIsClosed.html"
    },
    {
      "name": "Shell.Type",
      "id": "Shell.Type",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the type associated to Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellType.html"
    },
    {
      "name": "Shell.Vertices",
      "id": "Shell.Vertices",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the Vertices constituent to the Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellVertices.html"
    },
    {
      "name": "Shell.Wires",
      "id": "Shell.Wires",
      "library": "Topologic",
      "category": "Shell",
      "summary": "Returns the Wires constituent to the Shell.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellWires.html"
    },
    {
      "name": "ShellUtility.ByLoft",
      "id": "ShellUtility.ByLoft",
      "library": "Topologic",
      "category": "ShellUtility",
      "summary": "Creates a Shell by lofting through a set of Wires.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/shellUtilityByLoft.html"
    },
    {
      "name": "Topology.AddApertures",
      "id": "Topology.AddApertures",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Adds Apertures to a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyAddApertures.html"
    },
    {
      "name": "Topology.AddContents",
      "id": "Topology.AddContents",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Adds this Topology as a content (non-constituent member) to another Topology of a specific type",
      "description": "Adds this Topology as a content (non-constituent member) to another Topology of a specific type. If the type filter is 0, the contents will be added to the parent topology. Otherwise, the contents will be added to the closest sub-topology which matches the filter.",
      "iconCss": "background: url('icons/topologic.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyAddContents.html"
    },
    {
      "name": "Topology.Analyze",
      "id": "Topology.Analyze",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Prints the topological information of a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyAnalyze.html"
    },
    {
      "name": "Topology.Apertures",
      "id": "Topology.Apertures",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Apertures of the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyApertures.html"
    },
    {
      "name": "Topology.ByGeometry",
      "id": "Topology.ByGeometry",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Creates a Topology by geometry.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyByGeometry.html"
    },
    {
      "name": "Topology.ByImportedBRep",
      "id": "Topology.ByImportedBRep",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Imports a Topology from a BRep file (.brep).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyByImportedBRep.html"
    },
    {
      "name": "Topology.ByVerticesIndices",
      "id": "Topology.ByVerticesIndices",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Creates a Topology by a list of Vertices and a 2D list of indices of the Vertices in the first argument",
      "description": "Creates a Topology by a list of Vertices and a 2D list of indices of the Vertices in the first argument. An array of 1 index makes a Vertex. An array of 2 indices makes an Edge. An array of 3 indices either makes a Wire, or, when the array has at least 4 vertices and the first index is the same as the last index, a Face will be created instead. NOTE: This node currently can only create planar Faces.",
      "iconCss": "background: url('icons/topologic.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyByVerticesIndices.html"
    },
    {
      "name": "Topology.CellComplexes",
      "id": "Topology.CellComplexes",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the CellComplexes constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyCellComplexes.html"
    },
    {
      "name": "Topology.Cells",
      "id": "Topology.Cells",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Cells constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyCells.html"
    },
    {
      "name": "Topology.CenterOfMass",
      "id": "Topology.CenterOfMass",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the center of mass of any Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyCenterOfMass.html"
    },
    {
      "name": "Topology.Centroid",
      "id": "Topology.Centroid",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the centroid of any Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyCentroid.html"
    },
    {
      "name": "Topology.ClosestSimplestSubshape",
      "id": "Topology.ClosestSimplestSubshape",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the sub-topology that is the closest and the simplest (i.e. has the lowest dimensionality) to the selector.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyClosestSimplestSubshape.html"
    },
    {
      "name": "Topology.Contents",
      "id": "Topology.Contents",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the non-constituent members of the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyContents.html"
    },
    {
      "name": "Topology.Contexts",
      "id": "Topology.Contexts",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Topologies containing the input topology as a content.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -312px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyContexts.html"
    },
    {
      "name": "Topology.Dictionary",
      "id": "Topology.Dictionary",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the dictionary of a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyDictionary.html"
    },
    {
      "name": "Topology.Difference",
      "id": "Topology.Difference",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Performs the Difference operation between the input Topology and another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyDifference.html"
    },
    {
      "name": "Topology.Dimensionality",
      "id": "Topology.Dimensionality",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the dimensionality of the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyDimensionality.html"
    },
    {
      "name": "Topology.Divide",
      "id": "Topology.Divide",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Divides the input Topology with another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyDivide.html"
    },
    {
      "name": "Topology.Edges",
      "id": "Topology.Edges",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Edges constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyEdges.html"
    },
    {
      "name": "Topology.ExportToBRep",
      "id": "Topology.ExportToBRep",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Exports a Topology to a BRep file (.brep).",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyExportToBRep.html"
    },
    {
      "name": "Topology.Faces",
      "id": "Topology.Faces",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Faces constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyFaces.html"
    },
    {
      "name": "Topology.Filter",
      "id": "Topology.Filter",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Filter a list of topologies by type. This methods returns a list of topologies of the type specified in the typefilter.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyFilter.html"
    },
    {
      "name": "Topology.Geometry",
      "id": "Topology.Geometry",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Creates a geometry from the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyGeometry.html"
    },
    {
      "name": "Topology.Impose",
      "id": "Topology.Impose",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Imposes another Topology on the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -336px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyImpose.html"
    },
    {
      "name": "Topology.Imprint",
      "id": "Topology.Imprint",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Imprints another Topology on the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyImprint.html"
    },
    {
      "name": "Topology.Intersect",
      "id": "Topology.Intersect",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Performs the Intersection operation between the input Topology and another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyIntersect.html"
    },
    {
      "name": "Topology.IsSame",
      "id": "Topology.IsSame",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Checks if two Topologies are the same.",
      "description": "Checks if two Topologies are the same. NOTE: This is a pointer check, not a topological or a geometry one.",
      "iconCss": "background: url('icons/topologic.png') -48px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyIsSame.html"
    },
    {
      "name": "Topology.Merge",
      "id": "Topology.Merge",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Merges the input Topology and another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyMerge.html"
    },
    {
      "name": "Topology.RemoveContents",
      "id": "Topology.RemoveContents",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Removes contents (non-constituent members) from a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyRemoveContents.html"
    },
    {
      "name": "Topology.SelfMerge",
      "id": "Topology.SelfMerge",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Merges the sub-topologies of the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologySelfMerge.html"
    },
    {
      "name": "Topology.SetDictionaries",
      "id": "Topology.SetDictionaries",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Sets a list of dictionaries for a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologySetDictionaries.html"
    },
    {
      "name": "Topology.SetDictionary",
      "id": "Topology.SetDictionary",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Sets a dictionary for a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologySetDictionary.html"
    },
    {
      "name": "Topology.ShallowCopy",
      "id": "Topology.ShallowCopy",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Copies a Topology without its contents.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -360px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyShallowCopy.html"
    },
    {
      "name": "Topology.Shells",
      "id": "Topology.Shells",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Shells constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyShells.html"
    },
    {
      "name": "Topology.Slice",
      "id": "Topology.Slice",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Slices the input Topology with another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologySlice.html"
    },
    {
      "name": "Topology.Type",
      "id": "Topology.Type",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the type associated to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyType.html"
    },
    {
      "name": "Topology.TypeAsString",
      "id": "Topology.TypeAsString",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the instance type as a string.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyTypeAsString.html"
    },
    {
      "name": "Topology.Union",
      "id": "Topology.Union",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Unions the input Topology and another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyUnion.html"
    },
    {
      "name": "Topology.Vertices",
      "id": "Topology.Vertices",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Vertices constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyVertices.html"
    },
    {
      "name": "Topology.Wires",
      "id": "Topology.Wires",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Returns the Wires constituent to the Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyWires.html"
    },
    {
      "name": "Topology.XOR",
      "id": "Topology.XOR",
      "library": "Topologic",
      "category": "Topology",
      "summary": "Performs an XOR operation between the input Topology and another Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyXOR.html"
    },
    {
      "name": "TopologyUtility.AdjacentTopologies",
      "id": "TopologyUtility.AdjacentTopologies",
      "library": "Topologic",
      "category": "TopologyUtility",
      "summary": "Returns a list of Topologies that are the adjacent to the input Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyUtilityAdjacentTopologies.html"
    },
    {
      "name": "TopologyUtility.Rotate",
      "id": "TopologyUtility.Rotate",
      "library": "Topologic",
      "category": "TopologyUtility",
      "summary": "Rotates a Topology",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyUtilityRotate.html"
    },
    {
      "name": "TopologyUtility.Scale",
      "id": "TopologyUtility.Scale",
      "library": "Topologic",
      "category": "TopologyUtility",
      "summary": "Scales a Topology.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyUtilityScale.html"
    },
    {
      "name": "TopologyUtility.Translate",
      "id": "TopologyUtility.Translate",
      "library": "Topologic",
      "category": "TopologyUtility",
      "summary": "Translates (moves) a Topology a certain distance according to x, y, z values.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -384px",
      "helpLink": "https://rhino.github.io/components/topologic/topologyUtilityTranslate.html"
    },
    {
      "name": "Vertex.ByCoordinates",
      "id": "Vertex.ByCoordinates",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Creates a Vertex by XYZ coordinates.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -48px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexByCoordinates.html"
    },
    {
      "name": "Vertex.Coordinates",
      "id": "Vertex.Coordinates",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the coordinates of the Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexCoordinates.html"
    },
    {
      "name": "Vertex.Edges",
      "id": "Vertex.Edges",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the Edges incident to the Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexEdges.html"
    },
    {
      "name": "Vertex.Type",
      "id": "Vertex.Type",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the type associated to Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexType.html"
    },
    {
      "name": "Vertex.X",
      "id": "Vertex.X",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the X coordinate of the Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexX.html"
    },
    {
      "name": "Vertex.Y",
      "id": "Vertex.Y",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the Y coordinate of the Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -216px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexY.html"
    },
    {
      "name": "Vertex.Z",
      "id": "Vertex.Z",
      "library": "Topologic",
      "category": "Vertex",
      "summary": "Returns the Z coordinate of the Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') 0px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexZ.html"
    },
    {
      "name": "VertexUtility.AdjacentEdges",
      "id": "VertexUtility.AdjacentEdges",
      "library": "Topologic",
      "category": "VertexUtility",
      "summary": "Returns a list of Edges that are the adjacent to the input Vertex.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexUtilityAdjacentEdges.html"
    },
    {
      "name": "VertexUtility.Distance",
      "id": "VertexUtility.Distance",
      "library": "Topologic",
      "category": "VertexUtility",
      "summary": "Returns the distance between two Topologies.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -408px",
      "helpLink": "https://rhino.github.io/components/topologic/vertexUtilityDistance.html"
    },
    {
      "name": "Wire.ByEdges",
      "id": "Wire.ByEdges",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Creates a Wire by a set of Edges.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -24px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireByEdges.html"
    },
    {
      "name": "Wire.Edges",
      "id": "Wire.Edges",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Returns the Edges constituent to the Wire.",
      "description": "Returns the Edges constituent to the Wire. NOTE: This method will automatically identify its loop order property.",
      "iconCss": "background: url('icons/topologic.png') -48px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireEdges.html"
    },
    {
      "name": "Wire.Faces",
      "id": "Wire.Faces",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Returns the Faces containing the Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -72px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireFaces.html"
    },
    {
      "name": "Wire.IsClosed",
      "id": "Wire.IsClosed",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Checks if the Wire is closed.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -96px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireIsClosed.html"
    },
    {
      "name": "Wire.Type",
      "id": "Wire.Type",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Returns the type associated to Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -120px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireType.html"
    },
    {
      "name": "Wire.Vertices",
      "id": "Wire.Vertices",
      "library": "Topologic",
      "category": "Wire",
      "summary": "Returns the Vertices constituent to the Wire.",
      "description": "Returns the Vertices constituent to the Wire. NOTE: This method will automatically identify its loop order property",
      "iconCss": "background: url('icons/topologic.png') -216px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireVertices.html"
    },
    {
      "name": "WireUtility.AdjacentCells",
      "id": "WireUtility.AdjacentCells",
      "library": "Topologic",
      "category": "WireUtility",
      "summary": "Returns a list of Cells that are the adjacent to the input Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -144px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireUtilityAdjacentCells.html"
    },
    {
      "name": "WireUtility.AdjacentShells",
      "id": "WireUtility.AdjacentShells",
      "library": "Topologic",
      "category": "WireUtility",
      "summary": "Returns a list of Shells that are the adjacent to the input Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -168px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireUtilityAdjacentShells.html"
    },
    {
      "name": "WireUtility.RemoveCollinearEdges",
      "id": "WireUtility.RemoveCollinearEdges",
      "library": "Topologic",
      "category": "WireUtility",
      "summary": "Remove collinear edges in a Wire.",
      "description": null,
      "iconCss": "background: url('icons/topologic.png') -192px -432px",
      "helpLink": "https://rhino.github.io/components/topologic/wireUtilityRemoveCollinearEdges.html"
    },
    {
      "name": "Assign Paths",
      "id": "Assign Paths",
      "library": "TreeFrog",
      "category": "TreeFrog",
      "summary": "Assigns an arbitrary path structure to a flat list of input data",
      "description": null,
      "iconCss": "background: url('icons/treeFrog.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/treefrog/assignPaths.html"
    },
    {
      "name": "Graft By Data",
      "id": "GraftByData",
      "library": "TreeFrog",
      "category": "TreeFrog",
      "summary": "Adds an additional level of path hierarchy according to the specified indices",
      "description": null,
      "iconCss": "background: url('icons/treeFrog.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/treefrog/graftByData.html"
    },
    {
      "name": "Match Paths",
      "id": "Match Paths",
      "library": "TreeFrog",
      "category": "TreeFrog",
      "summary": "Sets a flat list of data to correspond to the tree structure of an input tree",
      "description": null,
      "iconCss": "background: url('icons/treeFrog.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/treefrog/matchPaths.html"
    },
    {
      "name": "Path Description",
      "id": "pd",
      "library": "TreeFrog",
      "category": "TreeFrog",
      "summary": "Produces a single path description for each item in a tree, in the same structure as the original tree.",
      "description": null,
      "iconCss": "background: url('icons/treeFrog.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/treefrog/pathDescription.html"
    },
    {
      "name": "Colibri Aggregator",
      "id": "Aggregator",
      "library": "TT Toolbox",
      "category": "Colibri 2.0",
      "summary": "Aggregates design data, images & Spectacles models into a data.csv file (and corresponding data set that data.csv links to) that Design Explorer can open.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/colibriAggregator.html"
    },
    {
      "name": "Colibri Iterator",
      "id": "Iterator",
      "library": "TT Toolbox",
      "category": "Colibri 2.0",
      "summary": "Generates design iterations from a collection of sliders, panels, or valueLists.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/colibriIterator.html"
    },
    {
      "name": "Colibri Parameters",
      "id": "Parameters",
      "library": "TT Toolbox",
      "category": "Colibri 2.0",
      "summary": "Collects design parameters (us engineer types would call these 'performance metrics') to chart in Design Explorer",
      "description": "Collects design parameters (us engineer types would call these 'performance metrics') to chart in Design Explorer.  These will be the vertical axes to the far right on the parallel coordinates plot, next to the design inputs. These values should describe the characteristics of a single design iteration.<br>You can also combine this output as a static gene in Genome.",
      "iconCss": "background: url('icons/tTToolbox.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/colibriParameters.html"
    },
    {
      "name": "Image Setting",
      "id": "Img Setting",
      "library": "TT Toolbox",
      "category": "Colibri 2.0",
      "summary": "Defines how Colibri generates images during flights.  You can specify which viewport[s] to capture, and the resolution of the image.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/imageSetting.html"
    },
    {
      "name": "Iteration Selection",
      "id": "Selection",
      "library": "TT Toolbox",
      "category": "Colibri 2.0",
      "summary": "Generates an iteration selection for the Colibri Iterator",
      "description": "Generates an iteration selection for the Colibri Iterator. This allows you to iterate over a subset of the design space instead of taking every step along every slider/dropdown/panel.<br>Use 'Divisions' to define granularity - how many steps to take on any given input.<br>Use 'Domain' to break the design space up into chunks that can be solved in parallel on different machines.",
      "iconCss": "background: url('icons/tTToolbox.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/iterationSelection.html"
    },
    {
      "name": "D_Options_Style",
      "id": "D_Options_Style",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "GStyle Options for Dashboard Components",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/dOptionsStyle.html"
    },
    {
      "name": "Gradient Colour Legend",
      "id": "Gradient Colour Legend",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "Draws a legend using a gradient component's colors",
      "description": "Draws a legend using a gradient component's colors.<br>To hide or show the legend on screen, right click this component and click on the 'Preview' toggle. <br>To move or re-size the legend, double click on the colored portion of the legend to expose the windows controls.  To hide the windows controls, single click on the colored portion of the legend.",
      "iconCss": "background: url('icons/tTToolbox.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/gradientColourLegend.html"
    },
    {
      "name": "Graph",
      "id": "Graph",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "Draws a graph to visualize data - multiple graph types available",
      "description": "Draws a graph to visualize data - multiple graph types available.<br>To hide or show the graph on screen, right click this component and click on the 'Preview' toggle. <br>To move or re-size the graph, double click on a colored graph element to expose the windows controls.  To hide the windows controls, single click a colored graph element.",
      "iconCss": "background: url('icons/tTToolbox.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/graph.html"
    },
    {
      "name": "Label/Value Display",
      "id": "Label/Value Display",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "Dashboard Label/Value pairs display component",
      "description": "Dashboard Label/Value pairs display component.<br>To hide or show the legend on screen, right click this component and click on the 'Preview' toggle. <br>To move or re-size the legend, double click on the colored portion of the legend to expose the windows controls.  To hide the windows controls, single click on the colored portion of the legend.",
      "iconCss": "background: url('icons/tTToolbox.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/labelValueDisplay.html"
    },
    {
      "name": "Stepped Colour Legend",
      "id": "Stepped Colour Legend",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "Draws a stepped legend using a list of colors",
      "description": "Draws a stepped legend using a list of colors.<br>To hide or show the legend on screen, right click this component and click on the 'Preview' toggle. <br>To move or re-size the legend, double click on the colored portion of the legend to expose the windows controls.  To hide the windows controls, single click on the colored portion of the legend.",
      "iconCss": "background: url('icons/tTToolbox.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/steppedColourLegend.html"
    },
    {
      "name": "Text Options",
      "id": "Text Options",
      "library": "TT Toolbox",
      "category": "Dashboard",
      "summary": "Text Options for Dashboard Components. <br>Double click the component to specify font and font style settings for other Dashboard components.  The 'Text Size_' inputs override the default sizes.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/textOptions.html"
    },
    {
      "name": "Read Excel Sheet",
      "id": "ReadXL",
      "library": "TT Toolbox",
      "category": "Excel",
      "summary": "Read data from an Excel worksheet",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/readExcelSheet.html"
    },
    {
      "name": "Write Options",
      "id": "WO",
      "library": "TT Toolbox",
      "category": "Excel",
      "summary": "Option settings for writing data to Excel.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/writeOptions.html"
    },
    {
      "name": "Write To Excel",
      "id": "WriteXL",
      "library": "TT Toolbox",
      "category": "Excel",
      "summary": "Write Data to Excel",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/writeToExcel.html"
    },
    {
      "name": "Spectacles_Material",
      "id": "Spectacles_Material",
      "library": "TT Toolbox",
      "category": "materials",
      "summary": "Create a Spectacles mesh material to apply to Spectacles meshes.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMaterial.html"
    },
    {
      "name": "Launch Browser",
      "id": "Launch Browser",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Launch 3dplatyp.us in your default web browser.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/launchBrowser.html"
    },
    {
      "name": "Platypus Connection",
      "id": "Platypus",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Connect to 3dplatyp.us and get a session key to use downstream.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/platypusConnection.html"
    },
    {
      "name": "Pull GH>GH Geometry",
      "id": "PullGH",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Pull Grasshopper geometry in from other Grasshopper users in this session.  Each user will have their own branch of each output data tree.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/pullGHGHGeometry.html"
    },
    {
      "name": "Push GH>GH Geometry",
      "id": "PushGH",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Push Grasshopper geometry to other Grasshopper users in the session.  Points, Curves, Breps, and Meshes are supported.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/pushGHGHGeometry.html"
    },
    {
      "name": "Stream Lines",
      "id": "StreamLines",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Stream lines to 3dplatyp.us",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/streamLines.html"
    },
    {
      "name": "Stream Meshes",
      "id": "StreamMeshes",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Stream meshes to 3dplatyp",
      "description": "Stream meshes to 3dplatyp.us. To increase performance in the browser, all meshes from this component will share the same Edge Color, Transparency and Shiny values (we use the first item in every input parameter).",
      "iconCss": "background: url('icons/tTToolbox.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/streamMeshes.html"
    },
    {
      "name": "Stream Sliders",
      "id": "StreamSliders",
      "library": "TT Toolbox",
      "category": "Platypus",
      "summary": "Stream Sliders to 3dplatyp.us",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/streamSliders.html"
    },
    {
      "name": "Launch Spectacles Viewer",
      "id": "Spectacles_Viewer",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Launches the Spectacles Viewer in your web browser.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/launchSpectaclesViewer.html"
    },
    {
      "name": "Spectacles Colibri_3DObjects",
      "id": "3DObjects",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Compiles Spectacles objects into a JSON representation of a THREE.js scene, which can be opened using the Spectacles viewer.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesColibri3DObjects.html"
    },
    {
      "name": "Spectacles_Line",
      "id": "Spectacles_Line",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a Spectacles line",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesLine.html"
    },
    {
      "name": "Spectacles_LineBasicMaterial",
      "id": "Spectacles_LineBasicMaterial",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a THREE.js Basic Line Material to use with line geometries",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesLineBasicMaterial.html"
    },
    {
      "name": "Spectacles_Mesh",
      "id": "Spectacles_Mesh",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a Spectacles mesh from a grasshopper mesh.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMesh.html"
    },
    {
      "name": "Spectacles_MeshBasicMaterial",
      "id": "Spectacles_MeshBasicMaterial",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates mesh material that will always be the same color in a THREE.js scene - it will not be effected by lighting.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMeshBasicMaterial.html"
    },
    {
      "name": "Spectacles_MeshColoredFaces",
      "id": "Spectacles_MeshColoredFaces",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a Spectacles mesh and a set of materials from a grasshopper mesh and a list of colors - one color per face",
      "description": "Creates a Spectacles mesh and a set of materials from a grasshopper mesh and a list of colors - one color per face.  If the colors list isn't the same length as the list of faces, we'll do standard grasshopper longest list iteration, using the mesh faces as the driving list.",
      "iconCss": "background: url('icons/tTToolbox.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMeshColoredFaces.html"
    },
    {
      "name": "Spectacles_MeshColoredVertices",
      "id": "Spectacles_MeshColoredVertices",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a Spectacles mesh and a material from a grasshopper mesh with color data.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMeshColoredVertices.html"
    },
    {
      "name": "Spectacles_MeshLambertMaterial",
      "id": "Spectacles_MeshLambertMaterial",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Creates a non-shiny mesh material.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMeshLambertMaterial.html"
    },
    {
      "name": "Spectacles_MeshPhongMaterial",
      "id": "Spectacles_MeshPhongMaterial",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Create a shiny material for meshes",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesMeshPhongMaterial.html"
    },
    {
      "name": "Spectacles_Scene",
      "id": "Spectacles_Scene",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Spectacles_Scene",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesScene.html"
    },
    {
      "name": "Spectacles_SceneCompiler",
      "id": "Spectacles_SceneCompiler",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Compiles Spectacles objects into a JSON representation of a THREE.js scene, which can be opened using the Spectacles viewer.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesSceneCompiler.html"
    },
    {
      "name": "Spectacles_Views",
      "id": "Spectacles_Views",
      "library": "TT Toolbox",
      "category": "Spectacles",
      "summary": "Compiles the views selected to be exported",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/spectaclesViews.html"
    },
    {
      "name": "Brute Force",
      "id": "BT",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "This component will solve all the possible combinations of the sliders connected to S. Please, be aware that this component could run through many iterations if the sliders have a large range",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/bruteForce.html"
    },
    {
      "name": "CAD Exporter",
      "id": "CADExporter",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Export to CAD",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/cADExporter.html"
    },
    {
      "name": "Curve Type",
      "id": "CT",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "returns a string with the curve type of the input curve. For splines, polycurves and other types, it returns 'Curve'",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/curveType.html"
    },
    {
      "name": "Dashboard",
      "id": "Dashboard",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "DashBoards",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/dashboard.html"
    },
    {
      "name": "Data Brancher",
      "id": "dB",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Build a data tree from a list of data and a list of branching indices",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/dataBrancher.html"
    },
    {
      "name": "Galapagos Listener",
      "id": "GalapList",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Creates a data tree of all Galapagos iterations",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/galapagosListener.html"
    },
    {
      "name": "Get Geometry Attributes",
      "id": "GeoAttrib",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Gets the name, GUID, and layer of any Rhino object",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getGeometryAttributes.html"
    },
    {
      "name": "Get Geometry Names",
      "id": "GeoNames",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Gets the name of any rhino object",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getGeometryNames.html"
    },
    {
      "name": "Get Groups From Brep",
      "id": "GetGroups",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Get rhino groups from brep",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getGroupsFromBrep.html"
    },
    {
      "name": "Get groups from document",
      "id": "GetGroups",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Get group names from active rhino document",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getGroupsFromDocument.html"
    },
    {
      "name": "Get Hours and Days",
      "id": "GetDays",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Get Hours and Days from Time Range",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getHoursAndDays.html"
    },
    {
      "name": "Get objects from groupname",
      "id": "GetObjects",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Get brep objects from rhino group",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/getObjectsFromGroupname.html"
    },
    {
      "name": "Match Tree Structure",
      "id": "Match",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Applies Tree Structure of one Tree to a List of Data. Inspired by cluster by A. Heumann",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/matchTreeStructure.html"
    },
    {
      "name": "Remove Duplicate Lines",
      "id": "CullDupLines",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Removes duplicate lines in a list",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/removeDuplicateLines.html"
    },
    {
      "name": "Remove Duplicate Points",
      "id": "CullDupPoints",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Replaces duplicate points in a list with null values, keeping the first instace of the duplicate in place.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/removeDuplicatePoints.html"
    },
    {
      "name": "SharedNodes",
      "id": "NodeConn",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "This component groups curves that share the same nodes",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/sharedNodes.html"
    },
    {
      "name": "Sort Curves Along Crv",
      "id": "SortC",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Sorts Curves along a guide curve based on point t along curve.",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/sortCurvesAlongCrv.html"
    },
    {
      "name": "Tree Branch",
      "id": "TB",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "retrieves all items in specified data tree branch",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/treeBranch.html"
    },
    {
      "name": "Tree Branch Index",
      "id": "TBI",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "TT Toolbox: Retrieves all items in specified data tree branch when specifying an index value for the desired branch",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/treeBranchIndex.html"
    },
    {
      "name": "Tree Item",
      "id": "Ti",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "retrieve an item from a Tree",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/treeItem.html"
    },
    {
      "name": "Tree Item Index",
      "id": "Tii",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "TT Toolbox: Retrieves an item from a Tree by specifying an index for the branch and item",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/treeItemIndex.html"
    },
    {
      "name": "TT Safe Delete",
      "id": "TTSafeDelete",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Delete or highlight selected objects in Rhino which are not referenced in Grasshopper",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/tTSafeDelete.html"
    },
    {
      "name": "TT Sweep",
      "id": "TTSweep",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Draw 3D members given centerlines",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/tTSweep.html"
    },
    {
      "name": "TT Sweep Names",
      "id": "TTSweepNames",
      "library": "TT Toolbox",
      "category": "TT Tools",
      "summary": "Section name selector for TT Sweep component",
      "description": null,
      "iconCss": "background: url('icons/tTToolbox.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/tttoolbox/tTSweepNames.html"
    },
    {
      "name": "Deconstruct Wall",
      "id": "Deconstruct Wall",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Deconstruct a wall into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWall.html"
    },
    {
      "name": "Deconstruct Wall Layer",
      "id": "Deconstruct Wall Layer",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Deconstruct a wall layer component into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWallLayer.html"
    },
    {
      "name": "Deconstruct Wall Options",
      "id": "Deconstruct Wall Options",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Deconstruct a wall options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWallOptions.html"
    },
    {
      "name": "Deconstruct Wall Style",
      "id": "Deconstruct Wall Style",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Deconstruct a wall style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWallStyle.html"
    },
    {
      "name": "Wall",
      "id": "Wall",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Create a wall from path curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/wall.html"
    },
    {
      "name": "Wall Extend",
      "id": "Wall Extend",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Create a wall extending an existing one to a list of geometries.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/wallExtend.html"
    },
    {
      "name": "Wall From Solid",
      "id": "Wall From Solid",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Creates a wall from a brep and a path curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/wallFromSolid.html"
    },
    {
      "name": "Wall Layer",
      "id": "Wall Layer",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Create a wall layer from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/wallLayer.html"
    },
    {
      "name": "Wall Options",
      "id": "Wall Options",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Create wall options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/wallOptions.html"
    },
    {
      "name": "Wall Style",
      "id": "Wall Style",
      "library": "VisualARQ",
      "category": "01.Wall",
      "summary": "Create wall style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/wallStyle.html"
    },
    {
      "name": "Curtain Wall",
      "id": "Curtain Wall",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall from path curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWall.html"
    },
    {
      "name": "Curtain Wall Extend",
      "id": "Curtain Wall Extend",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall extending an existing one to a list of geometries.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallExtend.html"
    },
    {
      "name": "Curtain Wall Fixed Dimension Cell",
      "id": "Curtain Wall Fixed Dimension Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall cell with fixed size divisions.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallFixedDimensionCell.html"
    },
    {
      "name": "Curtain Wall Fixed Number Cell",
      "id": "Curtain Wall Fixed Number Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall cell with fixed number of divisions.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallFixedNumberCell.html"
    },
    {
      "name": "Curtain Wall Frame",
      "id": "Curtain Wall Frame",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create curtain wall frame from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallFrame.html"
    },
    {
      "name": "Curtain Wall Horizontal Cell",
      "id": "Curtain Wall Horizontal Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall cell with horizontal divisions.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallHorizontalCell.html"
    },
    {
      "name": "Curtain Wall Mullion",
      "id": "Curtain Wall Mullion",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create curtain wall mullion from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallMullion.html"
    },
    {
      "name": "Curtain Wall None Division Cell",
      "id": "Curtain Wall None Division Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall cell with none divisions.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallNoneDivisionCell.html"
    },
    {
      "name": "Curtain Wall Options",
      "id": "Curtain Wall Options",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create curtain wall options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallOptions.html"
    },
    {
      "name": "Curtain Wall Style",
      "id": "Curtain Wall Style",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallStyle.html"
    },
    {
      "name": "Curtain Wall Support",
      "id": "Curtain Wall Support",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create curtain wall support from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallSupport.html"
    },
    {
      "name": "Curtain Wall Vertical Cell",
      "id": "Curtain Wall Vertical Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Create a curtain wall cell with vertical divisions.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/curtainWallVerticalCell.html"
    },
    {
      "name": "Deconstruct Curtain Wall",
      "id": "Deconstruct Curtain Wall",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWall.html"
    },
    {
      "name": "Deconstruct Curtain Wall Fixed Dimension Cell",
      "id": "Deconstruct Curtain Wall Fixed Dimension Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall cell with fixed size divisions into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallFixedDimensionCell.html"
    },
    {
      "name": "Deconstruct Curtain Wall Fixed Number Cell",
      "id": "Deconstruct Curtain Wall Fixed Number Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall cell with fixed number of divisions into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallFixedNumberCell.html"
    },
    {
      "name": "Deconstruct Curtain Wall Frame",
      "id": "Deconstruct Curtain Wall Frame",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall frame into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallFrame.html"
    },
    {
      "name": "Deconstruct Curtain Wall Horizontal Cell",
      "id": "Deconstruct Curtain Wall Horizontal Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall cell with horizontal divisions into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallHorizontalCell.html"
    },
    {
      "name": "Deconstruct Curtain Wall Mullion",
      "id": "Deconstruct Curtain Wall Mullion",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall mullion into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallMullion.html"
    },
    {
      "name": "Deconstruct Curtain Wall None Division Cell",
      "id": "Deconstruct Curtain Wall None Division Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall cell with none divisions into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallNoneDivisionCell.html"
    },
    {
      "name": "Deconstruct Curtain Wall Options",
      "id": "Deconstruct Curtain Wall Options",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallOptions.html"
    },
    {
      "name": "Deconstruct Curtain Wall Style",
      "id": "Deconstruct Curtain Wall Style",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallStyle.html"
    },
    {
      "name": "Deconstruct Curtain Wall Support",
      "id": "Deconstruct Curtain Wall Support",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall support into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallSupport.html"
    },
    {
      "name": "Deconstruct Curtain Wall Vertical Cell",
      "id": "Deconstruct Curtain Wall Vertical Cell",
      "library": "VisualARQ",
      "category": "02.Curtain Wall",
      "summary": "Deconstruct a curtain wall cell with vertical divisions into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -144px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructCurtainWallVerticalCell.html"
    },
    {
      "name": "Beam",
      "id": "Beam",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Create a beam from path curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/beam.html"
    },
    {
      "name": "Beam Options",
      "id": "Beam Options",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Create beam options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/beamOptions.html"
    },
    {
      "name": "Beam Style",
      "id": "Beam Style",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Create beam style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/beamStyle.html"
    },
    {
      "name": "Deconstruct Beam",
      "id": "Deconstruct Beam",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Deconstruct a beam into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructBeam.html"
    },
    {
      "name": "Deconstruct Beam Options",
      "id": "Deconstruct Beam Options",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Deconstruct a beam options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructBeamOptions.html"
    },
    {
      "name": "Deconstruct Beam Style",
      "id": "Deconstruct Beam Style",
      "library": "VisualARQ",
      "category": "03.Beam",
      "summary": "Deconstruct a beam style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructBeamStyle.html"
    },
    {
      "name": "Column",
      "id": "Column",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Create a column from point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/column.html"
    },
    {
      "name": "Column Coating",
      "id": "Column Coating",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Create column coating from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/columnCoating.html"
    },
    {
      "name": "Column Options",
      "id": "Column Options",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Create column options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/columnOptions.html"
    },
    {
      "name": "Column Style",
      "id": "Column Style",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Create column style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/columnStyle.html"
    },
    {
      "name": "Deconstruct Column",
      "id": "Deconstruct Column",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Deconstruct a column into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructColumn.html"
    },
    {
      "name": "Deconstruct Column Coating",
      "id": "Deconstruct Column Coating",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Deconstruct a column coating into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructColumnCoating.html"
    },
    {
      "name": "Deconstruct Column Options",
      "id": "Deconstruct Column Options",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Deconstruct a column options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructColumnOptions.html"
    },
    {
      "name": "Deconstruct Column Style",
      "id": "Deconstruct Column Style",
      "library": "VisualARQ",
      "category": "04.Column",
      "summary": "Deconstruct a column style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructColumnStyle.html"
    },
    {
      "name": "Deconstruct Door",
      "id": "Deconstruct Door",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoor.html"
    },
    {
      "name": "Deconstruct Door Frame",
      "id": "Deconstruct Door Frame",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door frame into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorFrame.html"
    },
    {
      "name": "Deconstruct Door Leaf",
      "id": "Deconstruct Door Leaf",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door leaf into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorLeaf.html"
    },
    {
      "name": "Deconstruct Door Leaf Glass",
      "id": "Deconstruct Door Leaf Glass",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door leaf glass into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorLeafGlass.html"
    },
    {
      "name": "Deconstruct Door Options",
      "id": "Deconstruct Door Options",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorOptions.html"
    },
    {
      "name": "Deconstruct Door Stop",
      "id": "Deconstruct Door Stop",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door stop into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorStop.html"
    },
    {
      "name": "Deconstruct Door Style",
      "id": "Deconstruct Door Style",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Deconstruct a door style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructDoorStyle.html"
    },
    {
      "name": "Door",
      "id": "Door",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create a door from insert point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/door.html"
    },
    {
      "name": "Door Frame",
      "id": "Door Frame",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create a door frame from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorFrame.html"
    },
    {
      "name": "Door Leaf",
      "id": "Door Leaf",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create a door leaf from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -168px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorLeaf.html"
    },
    {
      "name": "Door Leaf Glass",
      "id": "Door Leaf Glass",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create door leaf glass from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorLeafGlass.html"
    },
    {
      "name": "Door Options",
      "id": "Door Options",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create door options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorOptions.html"
    },
    {
      "name": "Door Stop",
      "id": "Door Stop",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create a door stop from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorStop.html"
    },
    {
      "name": "Door Style",
      "id": "Door Style",
      "library": "VisualARQ",
      "category": "05.Door",
      "summary": "Create a door style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/doorStyle.html"
    },
    {
      "name": "Deconstruct Window",
      "id": "Deconstruct Window",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindow.html"
    },
    {
      "name": "Deconstruct Window Frame",
      "id": "Deconstruct Window Frame",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window frame into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowFrame.html"
    },
    {
      "name": "Deconstruct Window Leaf",
      "id": "Deconstruct Window Leaf",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window leaf into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowLeaf.html"
    },
    {
      "name": "Deconstruct Window Leaf Glass",
      "id": "Deconstruct Window Leaf Glass",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window leaf glass into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowLeafGlass.html"
    },
    {
      "name": "Deconstruct Window Options",
      "id": "Deconstruct Window Options",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowOptions.html"
    },
    {
      "name": "Deconstruct Window Sill",
      "id": "Deconstruct Window Sill",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window sill into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowSill.html"
    },
    {
      "name": "Deconstruct Window Stop",
      "id": "Deconstruct Window Stop",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window stop into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -504px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowStop.html"
    },
    {
      "name": "Deconstruct Window Style",
      "id": "Deconstruct Window Style",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Deconstruct a window style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -504px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructWindowStyle.html"
    },
    {
      "name": "Window",
      "id": "Window",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create a window from insert point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/window.html"
    },
    {
      "name": "Window Frame",
      "id": "Window Frame",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window frame from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -456px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowFrame.html"
    },
    {
      "name": "Window Leaf",
      "id": "Window Leaf",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window leaf from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowLeaf.html"
    },
    {
      "name": "Window Leaf Glass",
      "id": "Window Leaf Glass",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window leaf glass from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowLeafGlass.html"
    },
    {
      "name": "Window Options",
      "id": "Window Options",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowOptions.html"
    },
    {
      "name": "Window Sill",
      "id": "Window Sill",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window sill from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowSill.html"
    },
    {
      "name": "Window Stop",
      "id": "Window Stop",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window stop from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -480px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowStop.html"
    },
    {
      "name": "Window Style",
      "id": "Window Style",
      "library": "VisualARQ",
      "category": "06.Window",
      "summary": "Create window style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -504px",
      "helpLink": "https://rhino.github.io/components/visualarq/windowStyle.html"
    },
    {
      "name": "Deconstruct Opening",
      "id": "Deconstruct Opening",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Deconstruct an opening into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructOpening.html"
    },
    {
      "name": "Deconstruct Opening Frame",
      "id": "Deconstruct Opening Frame",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Deconstruct opening frame into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructOpeningFrame.html"
    },
    {
      "name": "Deconstruct Opening Options",
      "id": "Deconstruct Opening Options",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Deconstruct an opening options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructOpeningOptions.html"
    },
    {
      "name": "Deconstruct Opening Style",
      "id": "Deconstruct Opening Style",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Deconstruct opening style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructOpeningStyle.html"
    },
    {
      "name": "Opening",
      "id": "Opening",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Create an opening from insert point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/opening.html"
    },
    {
      "name": "Opening Frame",
      "id": "Opening Frame",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Create opening frame from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/openingFrame.html"
    },
    {
      "name": "Opening Style",
      "id": "Opening Style",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Create opening style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/openingStyle.html"
    },
    {
      "name": "Openings Options",
      "id": "Openings Options",
      "library": "VisualARQ",
      "category": "07.Opening",
      "summary": "Create opening options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/openingsOptions.html"
    },
    {
      "name": "Deconstruct Stair",
      "id": "Deconstruct Stair",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Deconstruct a stair into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructStair.html"
    },
    {
      "name": "Deconstruct Stair Options",
      "id": "Deconstruct Stair Options",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Deconstruct a stair options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructStairOptions.html"
    },
    {
      "name": "Deconstruct Stair Slab",
      "id": "Deconstruct Stair Slab",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Deconstruct a stair slab into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructStairSlab.html"
    },
    {
      "name": "Deconstruct Stair Style",
      "id": "Deconstruct Stair Style",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Deconstruct a stair style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructStairStyle.html"
    },
    {
      "name": "Stair",
      "id": "Stair",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Create a stair from shape curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/stair.html"
    },
    {
      "name": "Stair Options",
      "id": "Stair Options",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Create stair options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/stairOptions.html"
    },
    {
      "name": "Stair Slab",
      "id": "Stair Slab",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Create a stair slab from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/stairSlab.html"
    },
    {
      "name": "Stair Style",
      "id": "Stair Style",
      "library": "VisualARQ",
      "category": "08.Stair",
      "summary": "Create stair style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/stairStyle.html"
    },
    {
      "name": "Deconstruct Railing",
      "id": "Deconstruct Railing",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailing.html"
    },
    {
      "name": "Deconstruct Railing Baluster",
      "id": "Deconstruct Railing Baluster",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing baluster into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailingBaluster.html"
    },
    {
      "name": "Deconstruct Railing Options",
      "id": "Deconstruct Railing Options",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailingOptions.html"
    },
    {
      "name": "Deconstruct Railing Post",
      "id": "Deconstruct Railing Post",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing post into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailingPost.html"
    },
    {
      "name": "Deconstruct Railing Rail",
      "id": "Deconstruct Railing Rail",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing rail into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailingRail.html"
    },
    {
      "name": "Deconstruct Railing Style",
      "id": "Deconstruct Railing Style",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Deconstruct a railing style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRailingStyle.html"
    },
    {
      "name": "Railing",
      "id": "Railing",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create a railing from path curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/railing.html"
    },
    {
      "name": "Railing Baluster",
      "id": "Railing Baluster",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create a railing baluster from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/railingBaluster.html"
    },
    {
      "name": "Railing Options",
      "id": "Railing Options",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create railing options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/railingOptions.html"
    },
    {
      "name": "Railing Post",
      "id": "Railing Post",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create a railing post from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/railingPost.html"
    },
    {
      "name": "Railing Rail",
      "id": "Railing Rail",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create a railing rail from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/railingRail.html"
    },
    {
      "name": "Railing Style",
      "id": "Railing Style",
      "library": "VisualARQ",
      "category": "09.Railing",
      "summary": "Create a railing style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/railingStyle.html"
    },
    {
      "name": "Deconstruct Slab",
      "id": "Deconstruct Slab",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Deconstruct a slab into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSlab.html"
    },
    {
      "name": "Deconstruct Slab Layer",
      "id": "Deconstruct Slab Layer",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Deconstruct a slab layer component into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSlabLayer.html"
    },
    {
      "name": "Deconstruct Slab Options",
      "id": "Deconstruct Slab Options",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Deconstruct a slab options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSlabOptions.html"
    },
    {
      "name": "Deconstruct Slab Style",
      "id": "Deconstruct Slab Style",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Deconstruct a slab style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSlabStyle.html"
    },
    {
      "name": "Slab",
      "id": "Slab",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab from boundary curve or surface.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/slab.html"
    },
    {
      "name": "Slab Add Boundary",
      "id": "Slab Add Boundary",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab adding a closed planar curve to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabAddBoundary.html"
    },
    {
      "name": "Slab Layer",
      "id": "Slab Layer",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab layer from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabLayer.html"
    },
    {
      "name": "Slab Options",
      "id": "Slab Options",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create slab options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabOptions.html"
    },
    {
      "name": "Slab Style",
      "id": "Slab Style",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabStyle.html"
    },
    {
      "name": "Slab Subtract Boundary",
      "id": "Slab Subtract Boundary",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab subtracting a closed planar curve to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabSubtractBoundary.html"
    },
    {
      "name": "Slab Subtract Stair Clearance",
      "id": "Slab Subtract Stair Clearance",
      "library": "VisualARQ",
      "category": "10.Slab",
      "summary": "Create a slab subtracting a stair clearance to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/slabSubtractStairClearance.html"
    },
    {
      "name": "Deconstruct Roof",
      "id": "Deconstruct Roof",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Deconstruct a roof into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRoof.html"
    },
    {
      "name": "Deconstruct Roof Options",
      "id": "Deconstruct Roof Options",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Deconstruct a roof options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRoofOptions.html"
    },
    {
      "name": "Deconstruct Roof Style",
      "id": "Deconstruct Roof Style",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Deconstruct a roof style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructRoofStyle.html"
    },
    {
      "name": "Roof",
      "id": "Roof",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Create a roof from boundary curve or surface.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/roof.html"
    },
    {
      "name": "Roof Add Boundary",
      "id": "Roof Add Boundary",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Create a roof adding a closed planar curve to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -336px",
      "helpLink": "https://rhino.github.io/components/visualarq/roofAddBoundary.html"
    },
    {
      "name": "Roof Explode",
      "id": "Roof Explode",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Explode a roof into its constituent slabs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/roofExplode.html"
    },
    {
      "name": "Roof Options",
      "id": "Roof Options",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Create roof options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/roofOptions.html"
    },
    {
      "name": "Roof Style",
      "id": "Roof Style",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Create a roof style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/roofStyle.html"
    },
    {
      "name": "Roof Subtract Boundary",
      "id": "Roof Subtract Boundary",
      "library": "VisualARQ",
      "category": "11.Roof",
      "summary": "Create a roof subtracting a closed planar curve to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -360px",
      "helpLink": "https://rhino.github.io/components/visualarq/roofSubtractBoundary.html"
    },
    {
      "name": "Deconstruct Element",
      "id": "Deconstruct Element",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Deconstruct a element into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructElement.html"
    },
    {
      "name": "Deconstruct Element Options",
      "id": "Deconstruct Element Options",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Deconstruct a element options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructElementOptions.html"
    },
    {
      "name": "Deconstruct Element Style",
      "id": "Deconstruct Element Style",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Deconstruct a element style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructElementStyle.html"
    },
    {
      "name": "Element",
      "id": "Element",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Create a element from point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/element.html"
    },
    {
      "name": "Element Options",
      "id": "Element Options",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Create element options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/elementOptions.html"
    },
    {
      "name": "Element Style",
      "id": "Element Style",
      "library": "VisualARQ",
      "category": "12.Element",
      "summary": "Create element style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -432px",
      "helpLink": "https://rhino.github.io/components/visualarq/elementStyle.html"
    },
    {
      "name": "Deconstruct Furniture",
      "id": "Deconstruct Furniture",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Deconstruct a furniture into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructFurniture.html"
    },
    {
      "name": "Deconstruct Furniture Options",
      "id": "Deconstruct Furniture Options",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Deconstruct a furniture options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructFurnitureOptions.html"
    },
    {
      "name": "Deconstruct Furniture Style",
      "id": "Deconstruct Furniture Style",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Deconstruct a furniture style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructFurnitureStyle.html"
    },
    {
      "name": "Furniture",
      "id": "Furniture",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Create a furniture from point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -192px",
      "helpLink": "https://rhino.github.io/components/visualarq/furniture.html"
    },
    {
      "name": "Furniture Options",
      "id": "Furniture Options",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Create furniture options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/furnitureOptions.html"
    },
    {
      "name": "Furniture Style",
      "id": "Furniture Style",
      "library": "VisualARQ",
      "category": "13.Furniture",
      "summary": "Create furniture style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/furnitureStyle.html"
    },
    {
      "name": "Annotation",
      "id": "Annotation",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create an annotation from point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/annotation.html"
    },
    {
      "name": "Annotation Options",
      "id": "Annotation Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create annotation options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/annotationOptions.html"
    },
    {
      "name": "Annotation Style",
      "id": "Annotation Style",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create annotation style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/annotationStyle.html"
    },
    {
      "name": "Deconstruct Annotation",
      "id": "Deconstruct Annotation",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct an annotation into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructAnnotation.html"
    },
    {
      "name": "Deconstruct Annotation Options",
      "id": "Deconstruct Annotation Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct an annotation options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructAnnotationOptions.html"
    },
    {
      "name": "Deconstruct Annotation Style",
      "id": "Deconstruct Annotation Style",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct an annotation style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -312px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructAnnotationStyle.html"
    },
    {
      "name": "Deconstruct PlanView",
      "id": "Deconstruct PlanView",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a plan view into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructPlanView.html"
    },
    {
      "name": "Deconstruct PlanView Options",
      "id": "Deconstruct PlanView Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a plan view options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructPlanViewOptions.html"
    },
    {
      "name": "Deconstruct Section",
      "id": "Deconstruct Section",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a section into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSection.html"
    },
    {
      "name": "Deconstruct Section Options",
      "id": "Deconstruct Section Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a section options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSectionOptions.html"
    },
    {
      "name": "Deconstruct Section Style",
      "id": "Deconstruct Section Style",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct section style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSectionStyle.html"
    },
    {
      "name": "Deconstruct SectionView",
      "id": "Deconstruct SectionView",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a section view into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSectionView.html"
    },
    {
      "name": "Deconstruct SectionView Options",
      "id": "Deconstruct SectionView Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Deconstruct a section view options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSectionViewOptions.html"
    },
    {
      "name": "Plan View Options",
      "id": "Plan View Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create plan view options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/planViewOptions.html"
    },
    {
      "name": "PlanView",
      "id": "PlanView",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create a plan view from boundary curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -264px",
      "helpLink": "https://rhino.github.io/components/visualarq/planView.html"
    },
    {
      "name": "Section",
      "id": "Section",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create a section from planar curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/section.html"
    },
    {
      "name": "Section Options",
      "id": "Section Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create section options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/sectionOptions.html"
    },
    {
      "name": "Section Style",
      "id": "Section Style",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create section style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/sectionStyle.html"
    },
    {
      "name": "Section View",
      "id": "Section View",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create a section view from insert point.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/sectionView.html"
    },
    {
      "name": "Section View Options",
      "id": "Section View Options",
      "library": "VisualARQ",
      "category": "14.Annotation",
      "summary": "Create section view options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -288px",
      "helpLink": "https://rhino.github.io/components/visualarq/sectionViewOptions.html"
    },
    {
      "name": "Deconstruct Space",
      "id": "Deconstruct Space",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Deconstruct a space into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSpace.html"
    },
    {
      "name": "Deconstruct Space Options",
      "id": "Deconstruct Space Options",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Deconstruct a space options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSpaceOptions.html"
    },
    {
      "name": "Deconstruct Space Style",
      "id": "Deconstruct Space Style",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Deconstruct a space style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructSpaceStyle.html"
    },
    {
      "name": "Space",
      "id": "Space",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Create a space from base curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -384px",
      "helpLink": "https://rhino.github.io/components/visualarq/space.html"
    },
    {
      "name": "Space Options",
      "id": "Space Options",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Create space options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/spaceOptions.html"
    },
    {
      "name": "Space Style",
      "id": "Space Style",
      "library": "VisualARQ",
      "category": "A.Space",
      "summary": "Create a space style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -408px",
      "helpLink": "https://rhino.github.io/components/visualarq/spaceStyle.html"
    },
    {
      "name": "Building",
      "id": "Building",
      "library": "VisualARQ",
      "category": "B.Levels",
      "summary": "Create a building.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/building.html"
    },
    {
      "name": "Deconstruct Building",
      "id": "Deconstruct Building",
      "library": "VisualARQ",
      "category": "B.Levels",
      "summary": "Deconstruct a building into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructBuilding.html"
    },
    {
      "name": "Deconstruct Level",
      "id": "Deconstruct Level",
      "library": "VisualARQ",
      "category": "B.Levels",
      "summary": "Deconstruct a level into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructLevel.html"
    },
    {
      "name": "Get Level",
      "id": "Get Level",
      "library": "VisualARQ",
      "category": "B.Levels",
      "summary": "Get the levels associated with an object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/getLevel.html"
    },
    {
      "name": "Level",
      "id": "Level",
      "library": "VisualARQ",
      "category": "B.Levels",
      "summary": "Create a level.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/visualarq/level.html"
    },
    {
      "name": "90º Arc Profile",
      "id": "90º Arc Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a 90º arc profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/90ArcProfile.html"
    },
    {
      "name": "Circular Hollow Profile",
      "id": "Circular Hollow Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a circular hollow profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/circularHollowProfile.html"
    },
    {
      "name": "Circular Profile",
      "id": "Circular Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a circular profile from radius.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/circularProfile.html"
    },
    {
      "name": "Custom profile",
      "id": "Custom profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a custom profile from curve.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/customProfile.html"
    },
    {
      "name": "Decompose Profile",
      "id": "Decompose Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Deconstruct a profile into its constituent curves.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/decomposeProfile.html"
    },
    {
      "name": "Gothic Profile",
      "id": "Gothic Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a gothic profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/gothicProfile.html"
    },
    {
      "name": "I Profile",
      "id": "I Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a I profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/iProfile.html"
    },
    {
      "name": "L Profile",
      "id": "L Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a L profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -216px",
      "helpLink": "https://rhino.github.io/components/visualarq/lProfile.html"
    },
    {
      "name": "Rectangular Hollow Profile",
      "id": "Rectangular Hollow Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a rectangular hollow profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/rectangularHollowProfile.html"
    },
    {
      "name": "Rectangular Profile",
      "id": "Rectangular Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a rectangular profile from width and height.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/rectangularProfile.html"
    },
    {
      "name": "Romanic Profile",
      "id": "Romanic Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a romanic profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/romanicProfile.html"
    },
    {
      "name": "T Profile",
      "id": "T Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a T profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/tProfile.html"
    },
    {
      "name": "U Profile",
      "id": "U Profile",
      "library": "VisualARQ",
      "category": "C.Profile",
      "summary": "Create a U profile.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -240px",
      "helpLink": "https://rhino.github.io/components/visualarq/uProfile.html"
    },
    {
      "name": "Add Solids",
      "id": "Add Solids",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Creates a VisualARQ object by adding solids to an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/addSolids.html"
    },
    {
      "name": "Block Decompose",
      "id": "Block Decompose",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Breaks a Rhino block definition down into its components.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/blockDecompose.html"
    },
    {
      "name": "Block Definition",
      "id": "Block Definition",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create a new block definition.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/blockDefinition.html"
    },
    {
      "name": "Block Instance",
      "id": "Block Instance",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create a new block instance.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/blockInstance.html"
    },
    {
      "name": "Create Document Parameter",
      "id": "Create Document Parameter",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create a VisualARQ document parameter.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/createDocumentParameter.html"
    },
    {
      "name": "Create Hatch",
      "id": "Create Hatch",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create a hatch.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/createHatch.html"
    },
    {
      "name": "Create Object Parameter",
      "id": "Create Object Parameter",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Add a new parameter to VisualARQ object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/createObjectParameter.html"
    },
    {
      "name": "Create Text",
      "id": "Create Text",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create a text.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/createText.html"
    },
    {
      "name": "Deconstruct Block Instance",
      "id": "Deconstruct Block Instance",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a block instance into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructBlockInstance.html"
    },
    {
      "name": "Deconstruct Hatch Options",
      "id": "Deconstruct Hatch Options",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a hatch options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructHatchOptions.html"
    },
    {
      "name": "Deconstruct Parameter",
      "id": "Deconstruct Parameter",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a parameter into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructParameter.html"
    },
    {
      "name": "Deconstruct Parameter Options",
      "id": "Deconstruct Parameter Options",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a parameter options into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructParameterOptions.html"
    },
    {
      "name": "Deconstruct Text",
      "id": "Deconstruct Text",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a text into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructText.html"
    },
    {
      "name": "Deconstruct Text Style",
      "id": "Deconstruct Text Style",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Deconstruct a text style into its constituent parts.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/deconstructTextStyle.html"
    },
    {
      "name": "Document Parameters",
      "id": "Document Parameters",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Get a list of all document parameters.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/documentParameters.html"
    },
    {
      "name": "Extract Solids",
      "id": "Extract Solids",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Creates a VisualARQ object by extracting solids from an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/extractSolids.html"
    },
    {
      "name": "Get Property",
      "id": "Get Property",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Gets a property value from object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/getProperty.html"
    },
    {
      "name": "Hatch Explode",
      "id": "Hatch Explode",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Explode a hatch into its constituent geometry.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/hatchExplode.html"
    },
    {
      "name": "Hatch Options",
      "id": "Hatch Options",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create hatch options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/hatchOptions.html"
    },
    {
      "name": "Ifc Tag",
      "id": "Ifc Tag",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Set IFC Properties to Rhino Object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/visualarq/ifcTag.html"
    },
    {
      "name": "Is Kind Of?",
      "id": "Is Kind Of?",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Marks the elements of a certain class as true.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/isKindOf.html"
    },
    {
      "name": "Object Parameter",
      "id": "Object Parameter",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Get an object parameter by name",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/objectParameter.html"
    },
    {
      "name": "Parameter Options",
      "id": "Parameter Options",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create parameter options from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/parameterOptions.html"
    },
    {
      "name": "Property Names",
      "id": "Property Names",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Get a list of all object property names.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/propertyNames.html"
    },
    {
      "name": "Set Property",
      "id": "Set Property",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Sets a property value to object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/setProperty.html"
    },
    {
      "name": "Subtract Solids",
      "id": "Subtract Solids",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Creates a VisualARQ object by subtracting solids from an existing one.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/visualarq/subtractSolids.html"
    },
    {
      "name": "Text Style",
      "id": "Text Style",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Create text style from atomic inputs.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/textStyle.html"
    },
    {
      "name": "Update Property",
      "id": "Update Property",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Update an object property directly in the document.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/visualarq/updateProperty.html"
    },
    {
      "name": "VisualARQ Area",
      "id": "VisualARQ Area",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Calculates the area of a VisualArq object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/visualARQArea.html"
    },
    {
      "name": "VisualARQ Explode",
      "id": "VisualARQ Explode",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Breaks a VisualARQ object down into its components.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/visualARQExplode.html"
    },
    {
      "name": "VisualARQ Thickness",
      "id": "VisualARQ Thickness",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Obtain the thickness of a VisualArq object or style.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/visualARQThickness.html"
    },
    {
      "name": "VisualARQ Volume",
      "id": "VisualARQ Volume",
      "library": "VisualARQ",
      "category": "D.Generics",
      "summary": "Calculates the volume of a VisualARQ object.",
      "description": null,
      "iconCss": "background: url('icons/visualARQ.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/visualarq/visualARQVolume.html"
    },
    {
      "name": "About",
      "id": "About",
      "library": "Volvox",
      "category": "",
      "summary": "About Volvox",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/about.html"
    },
    {
      "name": "Average",
      "id": "Average",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Get the average point from a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/average.html"
    },
    {
      "name": "Closest Point",
      "id": "CP",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Find closest point in the point cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/closestPoint.html"
    },
    {
      "name": "Cloud | Plane",
      "id": "Sec",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Solve intersection events for a Cloud and a Plane.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -216px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudPlane.html"
    },
    {
      "name": "Cloud Statistics",
      "id": "CloudStats",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Basic information about cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudStatistics.html"
    },
    {
      "name": "Get Points",
      "id": "GetPoints",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Get specific points from a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/getPoints.html"
    },
    {
      "name": "Sub Cloud",
      "id": "SubCloud",
      "library": "Volvox",
      "category": "Analysis",
      "summary": "Get a part of a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/subCloud.html"
    },
    {
      "name": "Cloud Grid",
      "id": "CGrid",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Create a point cloud 3d grid.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudGrid.html"
    },
    {
      "name": "Construct Cloud",
      "id": "Cloud",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Construct a Cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/constructCloud.html"
    },
    {
      "name": "Deconstruct Cloud",
      "id": "DeCloud",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Get points out of Cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/deconstructCloud.html"
    },
    {
      "name": "Get Position",
      "id": "GetPose",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Get the scanner position (meaningful only if the position was inherited somehow)",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/getPosition.html"
    },
    {
      "name": "Merge Clouds",
      "id": "MCloud",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Merge multiple clouds into one.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/mergeClouds.html"
    },
    {
      "name": "MultiMerge",
      "id": "MMerge",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Merge clouds into multiple clouds.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -192px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/multiMerge.html"
    },
    {
      "name": "Set Position",
      "id": "Set Pose",
      "library": "Volvox",
      "category": "Cloud",
      "summary": "Set the scanner position.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/setPosition.html"
    },
    {
      "name": "Command Line",
      "id": "Command",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "CloudCompare command line.http://cloudcompare.org/See commands at http://www.danielgm.net/cc/doc/wiki/index.php5?title=CommandLine",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/commandLine.html"
    },
    {
      "name": "Command Line .E57",
      "id": "Command .E57",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "Cloud Compare command line with E57 file.http://cloudcompare.org/See commands at http://www.danielgm.net/cc/doc/wiki/index.php5?title=CommandLine",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/commandLineE57.html"
    },
    {
      "name": "Command Line .xyz",
      "id": "Command .xyz",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "Cloud Compare command line with xyz file.http://cloudcompare.org/See commands at http://www.danielgm.net/cc/doc/wiki/index.php5?title=CommandLine",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/commandLinexyz.html"
    },
    {
      "name": "Convert .xyz",
      "id": "Convert",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "CloudCompare convert to XYZ.http://cloudcompare.org/",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/convertxyz.html"
    },
    {
      "name": "Open File",
      "id": "OpenCC",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "Open file in CloudCompare.http://cloudcompare.org/",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/openFile.html"
    },
    {
      "name": "Random Subsampling",
      "id": "RandomCC",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "Run CloudCompare E57 random subsampling.http://cloudcompare.org/",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/randomSubsampling.html"
    },
    {
      "name": "Spatial Subsampling",
      "id": "SpatialCC",
      "library": "Volvox",
      "category": "CloudCompare",
      "summary": "Run CloudCompare E57 spatial subsampling.http://cloudcompare.org/",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/spatialSubsampling.html"
    },
    {
      "name": "Box Crop",
      "id": "BCrop",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Cull points outside of the box.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/boxCrop.html"
    },
    {
      "name": "Cloud Engine",
      "id": "CloudE",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Point Cloud manipulation engine.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudEngine.html"
    },
    {
      "name": "Cloud EngineX",
      "id": "CloudX",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Point Cloud manipulation engine.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudEngineX.html"
    },
    {
      "name": "Load",
      "id": "Load",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Load cloud within the engine.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/load.html"
    },
    {
      "name": "Plane Clip",
      "id": "PClip",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Cull points below the plane.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/planeClip.html"
    },
    {
      "name": "Save",
      "id": "Save",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Save XYZ file within the engine.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/save.html"
    },
    {
      "name": "Save E57",
      "id": "Save E57",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Save E57 file within the engine.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/saveE57.html"
    },
    {
      "name": "Sphere Crop",
      "id": "SCrop",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Cull points outsite of the sphere.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/sphereCrop.html"
    },
    {
      "name": "Transform",
      "id": "Transform",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Apply transformation to the Point Cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/transform.html"
    },
    {
      "name": "Voxel Subsampling",
      "id": "VSub",
      "library": "Volvox",
      "category": "Engine",
      "summary": "Apply voxel based spatial subsampling to the Point Cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/voxelSubsampling.html"
    },
    {
      "name": "E57 Metadata",
      "id": "E57Meta",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Read E57 file metadata.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/e57Metadata.html"
    },
    {
      "name": "Load .xyz",
      "id": "xyzLoad",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Loads point cloud from .xyz file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/loadxyz.html"
    },
    {
      "name": "Load .xyz Ex",
      "id": "xyzLoadEx",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Loads point cloud from .xyz file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/loadxyzEx.html"
    },
    {
      "name": "Load E57",
      "id": "LoadE57",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Loads selected scans from E57 file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/loadE57.html"
    },
    {
      "name": "Load E57 Ex",
      "id": "LoadE57Ex",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Loads selected scans from E57 file together with all available metadata.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/volvox/loadE57Ex.html"
    },
    {
      "name": "Preview .xyz",
      "id": "PreviewXyz",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Displays the first 100 lines of a text file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/previewxyz.html"
    },
    {
      "name": "Save .xyz",
      "id": "xyzSave",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Save cloud to .xyz file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/savexyz.html"
    },
    {
      "name": "Save E57 Ex",
      "id": "SaveE57Ex",
      "library": "Volvox",
      "category": "I/O",
      "summary": "Save E57 file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/saveE57Ex.html"
    },
    {
      "name": "Add Data",
      "id": "AddData",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Add user data to a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/volvox/addData.html"
    },
    {
      "name": "Bounds",
      "id": "Bounds",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Get user data bounds.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/bounds.html"
    },
    {
      "name": "Cloud Expression",
      "id": "ExpData",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Evaluate an expression and save results as user data.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudExpression.html"
    },
    {
      "name": "Cloud Script",
      "id": "ScrData",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Evaluate values with VB.NET script and save results as user data.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/cloudScript.html"
    },
    {
      "name": "Cull Cloud",
      "id": "CullC",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Cull cloud points according to user data values.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/cullCloud.html"
    },
    {
      "name": "Get Data",
      "id": "GetData",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Get data set stored in a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/getData.html"
    },
    {
      "name": "Get Value",
      "id": "GetValue",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Get data value stored in a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/getValue.html"
    },
    {
      "name": "List Keys",
      "id": "KeyList",
      "library": "Volvox",
      "category": "UserData",
      "summary": "List all keys stored in a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/listKeys.html"
    },
    {
      "name": "Mesh Compare",
      "id": "MCompare",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Compute distance to a mesh.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/meshCompare.html"
    },
    {
      "name": "Preview Data",
      "id": "PrevData",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Assign colors to cloud according to user data.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/previewData.html"
    },
    {
      "name": "Remove Data",
      "id": "RemKey",
      "library": "Volvox",
      "category": "UserData",
      "summary": "Remove data stored in a cloud.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/volvox/removeData.html"
    },
    {
      "name": "Clean Cloud",
      "id": "CleanCloud",
      "library": "Volvox",
      "category": "Util",
      "summary": "Cleans the cloud out of colors.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/cleanCloud.html"
    },
    {
      "name": "ClippingPlane",
      "id": "ClipPlane",
      "library": "Volvox",
      "category": "Util",
      "summary": "Preview geometry with a clipping plane.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/clippingPlane.html"
    },
    {
      "name": "Delaunay Colored",
      "id": "CDel",
      "library": "Volvox",
      "category": "Util",
      "summary": "Delaunay triangulation on Point Cloud, with colors.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/delaunayColored.html"
    },
    {
      "name": "Disjoint Cloud",
      "id": "Disjoint",
      "library": "Volvox",
      "category": "Util",
      "summary": "Disjoint cloud based on voxel topology.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/volvox/disjointCloud.html"
    },
    {
      "name": "Mesh Include",
      "id": "MInclude",
      "library": "Volvox",
      "category": "Util",
      "summary": "Cull points outside/inside of a mesh.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -168px -96px",
      "helpLink": "https://rhino.github.io/components/volvox/meshInclude.html"
    },
    {
      "name": "Save Cloud",
      "id": "CloudSave",
      "library": "Volvox",
      "category": "Util",
      "summary": "Save cloud to XYZ file.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -48px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/saveCloud.html"
    },
    {
      "name": "Selection",
      "id": "Selection",
      "library": "Volvox",
      "category": "Util",
      "summary": "Create selection.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -72px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/selection.html"
    },
    {
      "name": "Voxel Colored",
      "id": "VoxelC",
      "library": "Volvox",
      "category": "Util",
      "summary": "Voxelize a PointCloud with colors.",
      "description": null,
      "iconCss": "background: url('icons/volvox.png') -144px -120px",
      "helpLink": "https://rhino.github.io/components/volvox/voxelColored.html"
    },
    {
      "name": "Diamond Fitness Chart",
      "id": "Fitness Chart",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Displays the diamond fitness chart along with the fitness ranking for each solution for data exported from Wallacei.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/diamondFitnessChart.html"
    },
    {
      "name": "Fitness Value Graphs",
      "id": "FV Graph",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Plot the Fitness Values for each individual per generation for data exported from Octopus",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/fitnessValueGraphs.html"
    },
    {
      "name": "Mean Values Trend Line",
      "id": "Mean Trend Line",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Plot the Mean values for each generation and create the trendline for the entire simulation for data exported from Octopus.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/meanValuesTrendLine.html"
    },
    {
      "name": "Objective Space",
      "id": "Objective Space",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Displays the objective space of the fitness values of the solutions.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/objectiveSpace.html"
    },
    {
      "name": "Parallel Coordinate Analysis",
      "id": "Parallel Coordinate Analysis",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Analyses the data generated from the 'Wallacei_Parallel Coordinate Plot' component by comparing the fitness values across the different fitness criteria",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/parallelCoordinateAnalysis.html"
    },
    {
      "name": "Parallel Coordinate Plot",
      "id": "Paralel Coordinate Plot",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Evaluates the fitness values for each solution by comparing each fitness criteria to one another in the form of a parallel coordinate plot.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/parallelCoordinatePlot.html"
    },
    {
      "name": "Pareto Front",
      "id": "Pareto Front",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "This component evaluates the data generated by the 'Wallacei_Objective SPace' component and calculates the Pareto Front for a selected generation and plots the front line/mesh as well as outputs the Dominance rank for each solution in the selected generation",
      "description": "This component evaluates the data generated by the 'Wallacei_Objective SPace' component and calculates the Pareto Front for a selected generation and plots the front line/mesh as well as outputs the Dominance rank for each solution in the selected generation.",
      "iconCss": "background: url('icons/wallacei.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/paretoFront.html"
    },
    {
      "name": "Standard Deviation Graph",
      "id": "SD Graph",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Calculates the SD value and draws the Normal distribution graph for each generation for data exported from Octopus.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/standardDeviationGraph.html"
    },
    {
      "name": "Standard Deviation Trend Line",
      "id": "SD Trend Line",
      "library": "Wallacei",
      "category": "Wallacei Analytics",
      "summary": "Plot the SD factor for each generation and create the trendline for the entire simulation for data exported from Octopus.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/wallacei/standardDeviationTrendLine.html"
    },
    {
      "name": "Extract Octopus Text Files",
      "id": "Octopus FV",
      "library": "Wallacei",
      "category": "Wallacei Utilities",
      "summary": "Extract only the fitness values from an Octopus Simulation fitness value export file.",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/extractOctopusTextFiles.html"
    },
    {
      "name": "Order FVs From WallaceiX",
      "id": "WallaceiX FV",
      "library": "Wallacei",
      "category": "Wallacei Utilities",
      "summary": "This component orders the Fitness Value list outputted by the WallaceiX component for use with any of the Wallacei_Analytics Components",
      "description": null,
      "iconCss": "background: url('icons/wallacei.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/wallacei/orderFVsFromWallaceiX.html"
    },
    {
      "name": "Attribute",
      "id": "Attribute",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Attribute to be attached to a part",
      "description": "Attribute to be attached to a part.<br>Could be geometry or any other kind of data (eg. text, numeric variables, color…).<br>If Geometry, Transformable must be set to True to mantain the geometry attached to the part during aggregation.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/attribute.html"
    },
    {
      "name": "Collider",
      "id": "Collider",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Generate a collider for a given geometry.",
      "description": "Generate a collider for a given geometry.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/collider.html"
    },
    {
      "name": "Connection From Direction",
      "id": "Connection From Direction",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Create a connection on a given part geometry from center and X-asix direction<br>(Z direction is determined based on the normals of the component geometry)",
      "description": "Create a connection on a given part geometry from center and X-asix direction<br>(Z direction is determined based on the normals of the component geometry)<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/connectionFromDirection.html"
    },
    {
      "name": "Connection From Plane",
      "id": "Connection From Plane",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Create a connection from a given plane.<br>It can create connections which cause collisions and overlapping of components",
      "description": "Create a connection from a given plane.<br>It can create connections which cause collisions and overlapping of components<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/connectionFromPlane.html"
    },
    {
      "name": "Deconstruct Attribute",
      "id": "Deconstruct Attribute",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Extract values stored in an atrribute",
      "description": "Extract values stored in an atrribute<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructAttribute.html"
    },
    {
      "name": "Deconstruct Collider",
      "id": "Deconstruct Collider",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Deconstruct a collider object.",
      "description": "Deconstruct a collider object.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructCollider.html"
    },
    {
      "name": "Deconstruct Connection",
      "id": "Deconstruct Connection",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Extract information from a Connection.",
      "description": "Extract information from a Connection.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructConnection.html"
    },
    {
      "name": "Get Attribute by Name",
      "id": "Get Attribute by Name",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Extract values stored in an atrribute with the given name.",
      "description": "Extract values stored in an atrribute with the given name.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/getAttributeByName.html"
    },
    {
      "name": "Support",
      "id": "Support",
      "library": "Wasp",
      "category": "1 | Elements",
      "summary": "Support definition for constrained parts.<br>Each set of lines defining support locations can be set",
      "description": "Support definition for constrained parts.<br>Each set of lines defining support locations can be set<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/support.html"
    },
    {
      "name": "Advanced Part",
      "id": "Advanced Part",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Create a Wasp Part with additional constraints (supports, additional colliders)",
      "description": "Create a Wasp Part with additional constraints (supports, additional colliders)<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/advancedPart.html"
    },
    {
      "name": "Basic Part",
      "id": "Basic Part",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Create a basic Wasp Part to be used for aggregation",
      "description": "Create a basic Wasp Part to be used for aggregation<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/basicPart.html"
    },
    {
      "name": "Deconstruct Part",
      "id": "Deconstruct Part",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Extract all information stored in a part. Useful for visualization or for further geometry processing",
      "description": "Extract all information stored in a part. Useful for visualization or for further geometry processing<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructPart.html"
    },
    {
      "name": "Filter Parts by Name",
      "id": "Filter Parts by Name",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Filter a list of parts according to part names",
      "description": "Filter a list of parts according to part names<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/filterPartsByName.html"
    },
    {
      "name": "Get Part Geometry",
      "id": "Get Part Geometry",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Extract the geometry of one part (for visualization or further processing).",
      "description": "Extract the geometry of one part (for visualization or further processing).<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/getPartGeometry.html"
    },
    {
      "name": "Transform Part",
      "id": "Transform Part",
      "library": "Wasp",
      "category": "2 | Parts",
      "summary": "Applies a geometric transformation to an existing part, returning a transformed copy",
      "description": "Applies a geometric transformation to an existing part, returning a transformed copy.<br>Can be used with any Transform component from Grasshopper.<br>Create a Transform component without inputting any geometry and plug the X output to the TR input.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/transformPart.html"
    },
    {
      "name": "Deconstruct Rule",
      "id": "Deconstruct Rule",
      "library": "Wasp",
      "category": "3 | Rules",
      "summary": "Extract information from a rule instance.",
      "description": "Extract information from a rule instance.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructRule.html"
    },
    {
      "name": "Rule",
      "id": "Rule",
      "library": "Wasp",
      "category": "3 | Rules",
      "summary": "Generate an aggregation rule from part names and connections ids",
      "description": "Generate an aggregation rule from part names and connections ids<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/rule.html"
    },
    {
      "name": "Rule From Text",
      "id": "Rule From Text",
      "library": "Wasp",
      "category": "3 | Rules",
      "summary": "Generate an aggregation rule from a text string description",
      "description": "Generate an aggregation rule from a text string description<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/ruleFromText.html"
    },
    {
      "name": "Rules Generator",
      "id": "Rules Generator",
      "library": "Wasp",
      "category": "3 | Rules",
      "summary": "Automated rules generator given a list of parts",
      "description": "Automated rules generator given a list of parts. It has two separate modes:<br>- If no grammar is provided in the GR input, the component generates rules between connections of the same type.<br>- If a grammar is provided, rules are created between connections of different types, according to the specified grammar rules.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/rulesGenerator.html"
    },
    {
      "name": "Deconstruct Field",
      "id": "Deconstruct Field",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Generates a scalar field given a grid of points and their relative scalar values",
      "description": "Generates a scalar field given a grid of points and their relative scalar values<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/deconstructField.html"
    },
    {
      "name": "Field",
      "id": "Field",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Generates a scalar field given a grid of points and their relative scalar values",
      "description": "Generates a scalar field given a grid of points and their relative scalar values<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/field.html"
    },
    {
      "name": "Field Isolines",
      "id": "Field Isolines",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Draws isolines across a field object<br>--> WIP Component: might be incomplete or contain bugs! <--",
      "description": "Draws isolines across a field object<br>--> WIP Component: might be incomplete or contain bugs! <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/fieldIsolines.html"
    },
    {
      "name": "Field Points",
      "id": "Field Points",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Generate a 3d point grid to be fed to the field component",
      "description": "Generate a 3d point grid to be fed to the field component<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/fieldPoints.html"
    },
    {
      "name": "Field-driven Aggregation",
      "id": "Field-driven Aggregation",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Aggregate the given parts according to a given scalar field",
      "description": "Aggregate the given parts according to a given scalar field. New parts are added following higher values in the field.<br>The component works additively, hence increasing the number of parts in an aggregation just adds new parts on the existing ones, without triggering recomputing of the previous element<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/fielddrivenAggregation.html"
    },
    {
      "name": "Load from File",
      "id": "Load from File",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Loads an aggregation from a previously saved .txt file",
      "description": "Loads an aggregation from a previously saved .txt file<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/loadFromFile.html"
    },
    {
      "name": "Mesh Constraint",
      "id": "Mesh Constraint",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Mesh collision global constraint",
      "description": "Mesh collision global constraint<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/meshConstraint.html"
    },
    {
      "name": "Plane Constraint",
      "id": "Plane Constraint",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Plane global constraint",
      "description": "Plane global constraint<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/planeConstraint.html"
    },
    {
      "name": "Save to File",
      "id": "Save to File",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Saves current status of an aggregation to a .json file.",
      "description": "Saves current status of an aggregation to a .json file.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/saveToFile.html"
    },
    {
      "name": "Stochastic Aggregation",
      "id": "Stochastic Aggregation",
      "library": "Wasp",
      "category": "4 | Aggregation",
      "summary": "Aggregate the given parts in a stochastic process, selecting parts and rules randomly at every step",
      "description": "Aggregate the given parts in a stochastic process, selecting parts and rules randomly at every step.<br>The component works additively, hence increasing the number of parts in an aggregation just adds new parts on the existing ones, without triggering recomputing of the previous element.<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/stochasticAggregation.html"
    },
    {
      "name": "DisCo Rule Group",
      "id": "DisCo Rule Group",
      "library": "Wasp",
      "category": "5 | DisCo VR",
      "summary": "Export Wasp information for DisCo VR software",
      "description": "Export Wasp information for DisCo VR software.<br>DisCo (Discrete Choreography) is developed by Jan Philipp Drude at dMA Hannover - Prof. Mirco Becker.<br>Project DisCo is available at: http://www.project-disco.com/<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/wasp/disCoRuleGroup.html"
    },
    {
      "name": "Load From DisCo",
      "id": "Load From DisCo",
      "library": "Wasp",
      "category": "5 | DisCo VR",
      "summary": "Loads an aggregation from a DisCo-generated .json file (e.g., a saved game session).<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Loads an aggregation from a DisCo-generated .json file (e.g., a saved game session).<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/loadFromDisCo.html"
    },
    {
      "name": "Save to DisCo",
      "id": "Save to DisCo",
      "library": "Wasp",
      "category": "5 | DisCo VR",
      "summary": "Saves current status of an aggregation to a .json file, to be imported into DisCo for further aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Saves current status of an aggregation to a .json file, to be imported into DisCo for further aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/saveToDisCo.html"
    },
    {
      "name": "Wasp To DisCo",
      "id": "Wasp To DisCo",
      "library": "Wasp",
      "category": "5 | DisCo VR",
      "summary": "Export Wasp information for DisCo VR software",
      "description": "Export Wasp information for DisCo VR software.<br>DisCo (Discrete Choreography) is developed by Jan Philipp Drude at dMA Hannover - Prof. Mirco Becker.<br>Project DisCo is available at: http://www.project-disco.com/<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/waspToDisCo.html"
    },
    {
      "name": "Add Parts",
      "id": "Add Parts",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "Add specific parts to an aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Add specific parts to an aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/addParts.html"
    },
    {
      "name": "Assemble Part Hierarchy",
      "id": "Assemble Part Hierarchy",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "Applies a geometric transformation to an existing part, returning a transformed copy",
      "description": "Applies a geometric transformation to an existing part, returning a transformed copy.<br>Can be used with any Transform component from Grasshopper.<br>Create a Transform component without inputting any geometry and plug the X output to the TR input.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/wasp/assemblePartHierarchy.html"
    },
    {
      "name": "Get Parts Hierarchy",
      "id": "Get Parts Hierarchy",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "Access sub-parts stored at different aggregation hierarchy levels<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Access sub-parts stored at different aggregation hierarchy levels<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/getPartsHierarchy.html"
    },
    {
      "name": "Graph-Grammar Aggregation",
      "id": "Graph-Grammar Aggregation",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "Sequential aggregation based on graph-grammars.<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Sequential aggregation based on graph-grammars.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/graphGrammarAggregation.html"
    },
    {
      "name": "Remove Parts",
      "id": "Remove Parts",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "Remove specific parts from an aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--",
      "description": "Remove specific parts from an aggregation.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2",
      "iconCss": "background: url('icons/wasp.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/wasp/removeParts.html"
    },
    {
      "name": "Update File",
      "id": "Update File",
      "library": "Wasp",
      "category": "X | Experimental",
      "summary": "This component doesn't update the installation",
      "description": "This component doesn't update the installation. It will only update the file<br>to your current installation. The components that can't be updated automatically<br>will be marked and should be replaced manually.<br>--> WIP Component: might be incomplete or contain bugs <--<br>-<br>Provided by Wasp 0.2<br>Code is adapted from Ladybug file updater (https://github.com/mostaphaRoudsari/ladybug)",
      "iconCss": "background: url('icons/wasp.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/wasp/updateFile.html"
    },
    {
      "name": "Mesh From Lines (Weave Back)",
      "id": "Mesh From Lines (Weave Back)",
      "library": "Weaverbird",
      "category": "Wb Create",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshFromLinesWeaveBack.html"
    },
    {
      "name": "Tile",
      "id": "Tile",
      "library": "Weaverbird",
      "category": "Wb Create",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/tile.html"
    },
    {
      "name": "Mesh Antiprism",
      "id": "Mesh Antiprism",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshAntiprism.html"
    },
    {
      "name": "Mesh Dipyramid",
      "id": "Mesh Dipyramid",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshDipyramid.html"
    },
    {
      "name": "Mesh Mesh Icosahedron",
      "id": "Mesh Mesh Icosahedron",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshMeshIcosahedron.html"
    },
    {
      "name": "Mesh Prism",
      "id": "Mesh Prism",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshPrism.html"
    },
    {
      "name": "Mesh Pyramid",
      "id": "Mesh Pyramid",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshPyramid.html"
    },
    {
      "name": "Polylines Dodecahedron",
      "id": "Polylines Dodecahedron",
      "library": "Weaverbird",
      "category": "Wb Define",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/polylinesDodecahedron.html"
    },
    {
      "name": "Dual graph",
      "id": "Dual graph",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/dualGraph.html"
    },
    {
      "name": "Face Polylines",
      "id": "Face Polylines",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/facePolylines.html"
    },
    {
      "name": "Join Meshes and Weld",
      "id": "Join Meshes and Weld",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/weaverbird/joinMeshesAndWeld.html"
    },
    {
      "name": "Mesh Edges",
      "id": "Mesh Edges",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshEdges.html"
    },
    {
      "name": "Naked boundary",
      "id": "Naked boundary",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/nakedBoundary.html"
    },
    {
      "name": "Reroute Faces",
      "id": "Reroute Faces",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/rerouteFaces.html"
    },
    {
      "name": "Reroute Faces by Pattern",
      "id": "Reroute Faces by Pattern",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/rerouteFacesByPattern.html"
    },
    {
      "name": "Unify face windings",
      "id": "Unify face windings",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/unifyFaceWindings.html"
    },
    {
      "name": "Vertices Component",
      "id": "Vertices Component",
      "library": "Weaverbird",
      "category": "Wb Extract",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/verticesComponent.html"
    },
    {
      "name": "Blur Mesh",
      "id": "Blur Mesh",
      "library": "Weaverbird",
      "category": "Wb Smoothen",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/blurMesh.html"
    },
    {
      "name": "Laplacian Smoothing",
      "id": "Laplacian Smoothing",
      "library": "Weaverbird",
      "category": "Wb Smoothen",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/laplacianSmoothing.html"
    },
    {
      "name": "LaplacianHC Smoothing",
      "id": "LaplacianHC Smoothing",
      "library": "Weaverbird",
      "category": "Wb Smoothen",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/weaverbird/laplacianHCSmoothing.html"
    },
    {
      "name": "Catmull-Clark Subdivision",
      "id": "Catmull-Clark Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/catmullClarkSubdivision.html"
    },
    {
      "name": "Constant Quads Split Subdivision",
      "id": "Constant Quads Split Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/constantQuadsSplitSubdivision.html"
    },
    {
      "name": "Inner Polygons Subdivision",
      "id": "Inner Polygons Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/innerPolygonsSubdivision.html"
    },
    {
      "name": "Loop Subdivision",
      "id": "Loop Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/loopSubdivision.html"
    },
    {
      "name": "Midedge Subdivision",
      "id": "Midedge Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/midedgeSubdivision.html"
    },
    {
      "name": "Sierpinski Triangles Subdivision",
      "id": "Sierpinski Triangles Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/sierpinskiTrianglesSubdivision.html"
    },
    {
      "name": "Split Polygons Subdivision",
      "id": "Split Polygons Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/splitPolygonsSubdivision.html"
    },
    {
      "name": "Split Triangles Subdivision",
      "id": "Split Triangles Subdivision",
      "library": "Weaverbird",
      "category": "Wb SubD",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/splitTrianglesSubdivision.html"
    },
    {
      "name": "Bevel Edges",
      "id": "Bevel Edges",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/bevelEdges.html"
    },
    {
      "name": "Bevel Vertices",
      "id": "Bevel Vertices",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/bevelVertices.html"
    },
    {
      "name": "Mesh Thicken",
      "id": "Mesh Thicken",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshThicken.html"
    },
    {
      "name": "Mesh Window",
      "id": "Mesh Window",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/meshWindow.html"
    },
    {
      "name": "Offset Mesh",
      "id": "Offset Mesh",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/offsetMesh.html"
    },
    {
      "name": "Picture Frame",
      "id": "Picture Frame",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/pictureFrame.html"
    },
    {
      "name": "Sierpinski Carpet",
      "id": "Sierpinski Carpet",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/weaverbird/sierpinskiCarpet.html"
    },
    {
      "name": "Stellate/Cumulation",
      "id": "Stellate/Cumulation",
      "library": "Weaverbird",
      "category": "Wb Transform",
      "summary": "",
      "description": null,
      "iconCss": "background: url('icons/weaverbird.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/weaverbird/stellateCumulation.html"
    },
    {
      "name": "Center Print on Print Bed",
      "id": "Cntr Prnt",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Moves the input geometry to the center of the print bed as determined by the input printer dimesions",
      "description": "Moves the input geometry to the center of the print bed as determined by the input printer dimesions.",
      "iconCss": "background: url('icons/xylinus.png') -24px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/centerPrintOnPrintBed.html"
    },
    {
      "name": "Config Setting",
      "id": "Setting",
      "library": "Xylinus",
      "category": "Core",
      "summary": "If an individual specific setting is input in S, it will be returned",
      "description": "If an individual specific setting is input in S, it will be returned. Otherwise the config (C) setting, matching the input ID will be passed. The ID is an integer matching the branch number of the desired setting. The returned setting will have the data structure matching the input ID. Is anything other than a Xylinus Config is input to C, that data will simply be passed to S.",
      "iconCss": "background: url('icons/xylinus.png') 0px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/configSetting.html"
    },
    {
      "name": "Curve Infill",
      "id": "Infill",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Take the given curve and creates an infill (based on the extrusion width and infill ratio) of the curve as a polyline",
      "description": "Take the given curve and creates an infill (based on the extrusion width and infill ratio) of the curve as a polyline. This polyline can be then be converted into g code.",
      "iconCss": "background: url('icons/xylinus.png') -24px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/curveInfill.html"
    },
    {
      "name": "Curve to G Code",
      "id": "Crv to GC",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Converts a cureve into g code to 3D print with a standard filament based printer",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -48px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/curveToGCode.html"
    },
    {
      "name": "Curve with Infill",
      "id": "Crv+Infl",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Outputs polyines for  W walls and infill at I density",
      "description": "Outputs polyines for  W walls and infill at I density. Works for simple or complex geometries.",
      "iconCss": "background: url('icons/xylinus.png') -72px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/curveWithInfill.html"
    },
    {
      "name": "Curves with Infill Compound",
      "id": "Crv+Infl Cmpnd",
      "library": "Xylinus",
      "category": "Core",
      "summary": "offsets curves by 1/2 the extrusion witdth",
      "description": "offsets curves by 1/2 the extrusion witdth. External cuves are offset to the inside, and  internal  curves are offset out. There are a number of checks that attempt to fix the bugs in the Rhino/GH offset command.",
      "iconCss": "background: url('icons/xylinus.png') -96px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/curvesWithInfillCompound.html"
    },
    {
      "name": "Offset  In",
      "id": "Offset In",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Offsets curves inward",
      "description": "Offsets curves inward. Use for external curves.",
      "iconCss": "background: url('icons/xylinus.png') -120px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/offsetIn.html"
    },
    {
      "name": "Offset  Out",
      "id": "Offset Out",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Offset curves outward",
      "description": "Offset curves outward. Use for interior curves.",
      "iconCss": "background: url('icons/xylinus.png') -144px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/offsetOut.html"
    },
    {
      "name": "Offset Complex",
      "id": "Offset Cmplx",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Offset curves, with automatic detection of internal vs",
      "description": "Offset curves, with automatic detection of internal vs. external geometry.",
      "iconCss": "background: url('icons/xylinus.png') -168px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/offsetComplex.html"
    },
    {
      "name": "Offset Compound",
      "id": "Offset Cmpnd",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -192px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/offsetCompound.html"
    },
    {
      "name": "Print Log",
      "id": "Print Log",
      "library": "Xylinus",
      "category": "Core",
      "summary": "saves info about the print into a Google Sheet",
      "description": "saves info about the print into a Google Sheet. (requires Leafcutter plugin)",
      "iconCss": "background: url('icons/xylinus.png') -168px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printLog.html"
    },
    {
      "name": "Slice",
      "id": "Slice",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Slice geometry based on layer height ( directly or from a Xylinus Config)",
      "description": "Slice geometry based on layer height ( directly or from a Xylinus Config). Outputs a a set of contour curves. arranged by layer.",
      "iconCss": "background: url('icons/xylinus.png') -24px -96px",
      "helpLink": "https://rhino.github.io/components/xylinus/slice.html"
    },
    {
      "name": "Slice Walls with Infill",
      "id": "Walls+Infl",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Slices input geometry and outputs polyines for  W walls and infill at I density",
      "description": "Slices input geometry and outputs polyines for  W walls and infill at I density. Works for simple or complex geometries.",
      "iconCss": "background: url('icons/xylinus.png') 0px -96px",
      "helpLink": "https://rhino.github.io/components/xylinus/sliceWallsWithInfill.html"
    },
    {
      "name": "Slice Walls with Infill Compound",
      "id": "Walls+Infl Cmpnd",
      "library": "Xylinus",
      "category": "Core",
      "summary": "Slices geometry and offsets perimeters by 1/2 the extrusion witdth",
      "description": "Slices geometry and offsets perimeters by 1/2 the extrusion witdth. External cuves are offset to the inside, and  internal  curves are offset out. There are a number of checks that attempt to fix the bugs in the Rhino/GH offset command.",
      "iconCss": "background: url('icons/xylinus.png') -216px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/sliceWallsWithInfillCompound.html"
    },
    {
      "name": "Black Out",
      "id": "",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "creates a black out surface",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') 0px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/blackOut.html"
    },
    {
      "name": "Config  - DLP",
      "id": "Config  DLP",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "This component holds the primary configurations needed for 3D printing with an a DLP projector to do SLA",
      "description": "This component holds the primary configurations needed for 3D printing with an a DLP projector to do SLA. These settings can be passed as a condensed list to many of the components in Xylinus. They can also be broken out and individual setting fed into Xylinus sub-routines.",
      "iconCss": "background: url('icons/xylinus.png') -48px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configDLP.html"
    },
    {
      "name": "Config - DLP BUGSS",
      "id": "Config DLP BUGSS",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Config DLP BUGSS",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -144px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configDLPBUGSS.html"
    },
    {
      "name": "DLP Slice",
      "id": "DLP Slice",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Slice geometry based upon a Xylinus DLP Config",
      "description": "Slice geometry based upon a Xylinus DLP Config. Outputs multiple formats, curves, surfaces, and a mask surface.",
      "iconCss": "background: url('icons/xylinus.png') -120px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/dLPSlice.html"
    },
    {
      "name": "G Code  Start - DLP",
      "id": "Start GC DLP",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "G code to begin the 3D print",
      "description": "G code to begin the 3D print. (set units, home, etc)",
      "iconCss": "background: url('icons/xylinus.png') -192px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeStartDLP.html"
    },
    {
      "name": "G Code End - DLP",
      "id": "End GC DLP",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "G code to end a 3D print",
      "description": "G code to end a 3D print.",
      "iconCss": "background: url('icons/xylinus.png') -24px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeEndDLP.html"
    },
    {
      "name": "GC Send",
      "id": "GC Send",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Sends G Code to the printer",
      "description": "Sends G Code to the printer.",
      "iconCss": "background: url('icons/xylinus.png') -96px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCSend.html"
    },
    {
      "name": "Print DLP",
      "id": "DLP Print",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Generate the G Code and synch it with the projected slices",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -144px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printDLP.html"
    },
    {
      "name": "Projector Window",
      "id": "Proj Window",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Opens a floating viewport, maximizes it to the projector display, and zooms to the supplied calibration geometry",
      "description": "Opens a floating viewport, maximizes it to the projector display, and zooms to the supplied calibration geometry.<br>Be sure to have your main Rhino viewport maximized and to have your projector set up on the right side as an extended display. <br>Repeated opening of the window can cause Rhino to crash.",
      "iconCss": "background: url('icons/xylinus.png') -192px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/projectorWindow.html"
    },
    {
      "name": "Z Move G Code",
      "id": "Move Z GC",
      "library": "Xylinus",
      "category": "DLP",
      "summary": "Generate the G Code to move the Z platform  of the printer",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -48px -96px",
      "helpLink": "https://rhino.github.io/components/xylinus/zMoveGCode.html"
    },
    {
      "name": "Config  - Filament",
      "id": "Config  Filament",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer",
      "description": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer. These settings can be passed to or from this component as a condensed list. Settings can also be broken out and fed into Xylinus sub-routines. Setting can be modified through the specific inputs, which will override the condensed config input.",
      "iconCss": "background: url('icons/xylinus.png') -72px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configFilament.html"
    },
    {
      "name": "Config - Filament jimmi PLA",
      "id": "jimmi_F PLA",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "Double-click to edit this blank starter config",
      "description": "Double-click to edit this blank starter config. This can then be saved as a new user object for future use.",
      "iconCss": "background: url('icons/xylinus.png') -168px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configFilamentJimmiPLA.html"
    },
    {
      "name": "Extrusion Rate Calculator",
      "id": "Extr Rate",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "calculate basic extrusion rate as factored by the cross section area of the filament and that of the print extrusion",
      "description": "calculate basic extrusion rate as factored by the cross section area of the filament and that of the print extrusion.<br>(pi * (filament diameter/2)sq  /  (extrusion width * layer height)) * extrusion multiplier",
      "iconCss": "background: url('icons/xylinus.png') -144px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/extrusionRateCalculator.html"
    },
    {
      "name": "G Code  Start  - Filament",
      "id": "Start GC _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "G code to begin the 3D print",
      "description": "G code to begin the 3D print. (set units, home, etc)",
      "iconCss": "background: url('icons/xylinus.png') -168px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeStartFilament.html"
    },
    {
      "name": "G Code End  - Filament",
      "id": "End GC _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "G code to end a 3D print",
      "description": "G code to end a 3D print. (turn off hot end, disable motors, etc)",
      "iconCss": "background: url('icons/xylinus.png') 0px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeEndFilament.html"
    },
    {
      "name": "G Code Merge  - Filament",
      "id": "Merge GC _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "Merge gcode with start and end gcode",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -48px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeMergeFilament.html"
    },
    {
      "name": "Print  Curve - Filament",
      "id": "Print Crv _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "Converts a curve into g code to 3D print with a standard filament based printer",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') 0px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printCurveFilament.html"
    },
    {
      "name": "Print  Curve with Blob and Drool - Filament",
      "id": "Print B&D _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "extrudes a given amount of filament (Blob) at each point and a modified amount of filament (Drool) in between points",
      "description": "extrudes a given amount of filament (Blob) at each point and a modified amount of filament (Drool) in between points.",
      "iconCss": "background: url('icons/xylinus.png') -24px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printCurveWithBlobAndDroolFilament.html"
    },
    {
      "name": "Print  Curve with Infill - Filament",
      "id": "Print Crv+Infl _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density",
      "description": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density. Works for simple or complex geometries.<br><br><br>a W# walled form without any infil or top/bottom layers. For standard filament printing.",
      "iconCss": "background: url('icons/xylinus.png') -48px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printCurveWithInfillFilament.html"
    },
    {
      "name": "Print 3D - Filament",
      "id": "Print 3D  _F",
      "library": "Xylinus",
      "category": "Filament",
      "summary": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density",
      "description": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density. Works for simple or complex geometries.<br><br><br>a W# walled form without any infil or top/bottom layers. For standard filament printing.",
      "iconCss": "background: url('icons/xylinus.png') -120px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/print3DFilament.html"
    },
    {
      "name": "Config  - Syringe",
      "id": "Config  Syringe",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer",
      "description": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer. These settings can be passed to or from this component as a condensed list. Settings can also be broken out and fed into Xylinus sub-routines. Setting can be modified through the specific inputs, which will override the condensed config input.",
      "iconCss": "background: url('icons/xylinus.png') -120px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configSyringe.html"
    },
    {
      "name": "Config  - Syringe M Codes",
      "id": "M Codes Syringe",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "This configures the M Codes for pneumatically controlling a syringe",
      "description": "This configures the M Codes for pneumatically controlling a syringe. Minumum  requirements are: <br>1) the syring number starting a 0 and going up for multiple syringe printers <br>2) the M Code for intiating print pressure<br>2) the M Code for ceasing print pressure",
      "iconCss": "background: url('icons/xylinus.png') -96px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configSyringeMCodes.html"
    },
    {
      "name": "Config BUGSS_S",
      "id": "BUGSS_S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer",
      "description": "This component holds the primary configurations needed for 3D printing on a standard filimant-based printer. These settings can be passed to or from this component as a condensed list. Settings can also be broken out and fed into Xylinus sub-routines. Setting can be modified through the specific inputs, which will override the condensed config input.",
      "iconCss": "background: url('icons/xylinus.png') -216px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configBUGSSS.html"
    },
    {
      "name": "Config BUGSS_S  M Codes",
      "id": "BUGSS_S M",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "Contains a cluster of Grasshopper components",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -192px 0px",
      "helpLink": "https://rhino.github.io/components/xylinus/configBUGSSSMCodes.html"
    },
    {
      "name": "G Code  Start - Syringe",
      "id": "Start GC _S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "G code to begin the 3D print",
      "description": "G code to begin the 3D print. (set units, home, etc)",
      "iconCss": "background: url('icons/xylinus.png') -216px -24px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeStartSyringe.html"
    },
    {
      "name": "G Code nd - Syringe",
      "id": "End GC _S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "G code to end a 3D print",
      "description": "G code to end a 3D print. (turn off hot end, disable motors, etc)",
      "iconCss": "background: url('icons/xylinus.png') -72px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/gCodeNdSyringe.html"
    },
    {
      "name": "Print  Curve  - Syringe",
      "id": "Print Crv _S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "Converts a curve into g code to 3D print with a syringe based printer",
      "description": null,
      "iconCss": "background: url('icons/xylinus.png') -216px -48px",
      "helpLink": "https://rhino.github.io/components/xylinus/printCurveSyringe.html"
    },
    {
      "name": "Print  Curve with Infill - Syringe",
      "id": "Print Crv+Infl _S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density",
      "description": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density. Works for simple or complex geometries.<br><br><br>a W# walled form without any infil or top/bottom layers. For standard filament printing.",
      "iconCss": "background: url('icons/xylinus.png') -72px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/printCurveWithInfillSyringe.html"
    },
    {
      "name": "Print 3D  - Syringe",
      "id": "Print 3D _S",
      "library": "Xylinus",
      "category": "Syringe",
      "summary": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density",
      "description": "Slices input geometry and renerates G Code to print  [W] walls and infill at [I] density. Works for simple or complex geometries.<br><br><br>a W# walled form without any infil or top/bottom layers. For standard filament printing.",
      "iconCss": "background: url('icons/xylinus.png') -96px -72px",
      "helpLink": "https://rhino.github.io/components/xylinus/print3DSyringe.html"
    }
  ]
}